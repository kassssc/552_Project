$date
	Sun Mar 18 17:31:38 2018
$end
$version
	ModelSim Version 10.4a
$end
$timescale
	1ns
$end

$scope module cpu_tb $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [3] $end
$var wire 1 C WriteRegister [2] $end
$var wire 1 D WriteRegister [1] $end
$var wire 1 E WriteRegister [0] $end
$var wire 1 F WriteData [15] $end
$var wire 1 G WriteData [14] $end
$var wire 1 H WriteData [13] $end
$var wire 1 I WriteData [12] $end
$var wire 1 J WriteData [11] $end
$var wire 1 K WriteData [10] $end
$var wire 1 L WriteData [9] $end
$var wire 1 M WriteData [8] $end
$var wire 1 N WriteData [7] $end
$var wire 1 O WriteData [6] $end
$var wire 1 P WriteData [5] $end
$var wire 1 Q WriteData [4] $end
$var wire 1 R WriteData [3] $end
$var wire 1 S WriteData [2] $end
$var wire 1 T WriteData [1] $end
$var wire 1 U WriteData [0] $end
$var wire 1 V MemWrite $end
$var wire 1 W MemRead $end
$var wire 1 X MemAddress [15] $end
$var wire 1 Y MemAddress [14] $end
$var wire 1 Z MemAddress [13] $end
$var wire 1 [ MemAddress [12] $end
$var wire 1 \ MemAddress [11] $end
$var wire 1 ] MemAddress [10] $end
$var wire 1 ^ MemAddress [9] $end
$var wire 1 _ MemAddress [8] $end
$var wire 1 ` MemAddress [7] $end
$var wire 1 a MemAddress [6] $end
$var wire 1 b MemAddress [5] $end
$var wire 1 c MemAddress [4] $end
$var wire 1 d MemAddress [3] $end
$var wire 1 e MemAddress [2] $end
$var wire 1 f MemAddress [1] $end
$var wire 1 g MemAddress [0] $end
$var wire 1 h MemData [15] $end
$var wire 1 i MemData [14] $end
$var wire 1 j MemData [13] $end
$var wire 1 k MemData [12] $end
$var wire 1 l MemData [11] $end
$var wire 1 m MemData [10] $end
$var wire 1 n MemData [9] $end
$var wire 1 o MemData [8] $end
$var wire 1 p MemData [7] $end
$var wire 1 q MemData [6] $end
$var wire 1 r MemData [5] $end
$var wire 1 s MemData [4] $end
$var wire 1 t MemData [3] $end
$var wire 1 u MemData [2] $end
$var wire 1 v MemData [1] $end
$var wire 1 w MemData [0] $end
$var wire 1 x Halt $end
$var integer 32 y inst_count $end
$var integer 32 z cycle_count $end
$var integer 32 { trace_file $end
$var integer 32 | sim_log_file $end
$var reg 1 } clk $end
$var reg 1 ~ rst_n $end
$var wire 1 !! pc_current [15] $end
$var wire 1 "! pc_current [14] $end
$var wire 1 #! pc_current [13] $end
$var wire 1 $! pc_current [12] $end
$var wire 1 %! pc_current [11] $end
$var wire 1 &! pc_current [10] $end
$var wire 1 '! pc_current [9] $end
$var wire 1 (! pc_current [8] $end
$var wire 1 )! pc_current [7] $end
$var wire 1 *! pc_current [6] $end
$var wire 1 +! pc_current [5] $end
$var wire 1 ,! pc_current [4] $end
$var wire 1 -! pc_current [3] $end
$var wire 1 .! pc_current [2] $end
$var wire 1 /! pc_current [1] $end
$var wire 1 0! pc_current [0] $end
$var wire 1 1! pc_out [15] $end
$var wire 1 2! pc_out [14] $end
$var wire 1 3! pc_out [13] $end
$var wire 1 4! pc_out [12] $end
$var wire 1 5! pc_out [11] $end
$var wire 1 6! pc_out [10] $end
$var wire 1 7! pc_out [9] $end
$var wire 1 8! pc_out [8] $end
$var wire 1 9! pc_out [7] $end
$var wire 1 :! pc_out [6] $end
$var wire 1 ;! pc_out [5] $end
$var wire 1 <! pc_out [4] $end
$var wire 1 =! pc_out [3] $end
$var wire 1 >! pc_out [2] $end
$var wire 1 ?! pc_out [1] $end
$var wire 1 @! pc_out [0] $end
$var wire 1 A! flag $end
$var wire 1 B! PC_out $end

$scope module DUT $end
$var wire 1 C! clk $end
$var wire 1 D! rst_n $end
$var wire 1 x hlt $end
$var wire 1 ! pc [15] $end
$var wire 1 " pc [14] $end
$var wire 1 # pc [13] $end
$var wire 1 $ pc [12] $end
$var wire 1 % pc [11] $end
$var wire 1 & pc [10] $end
$var wire 1 ' pc [9] $end
$var wire 1 ( pc [8] $end
$var wire 1 ) pc [7] $end
$var wire 1 * pc [6] $end
$var wire 1 + pc [5] $end
$var wire 1 , pc [4] $end
$var wire 1 - pc [3] $end
$var wire 1 . pc [2] $end
$var wire 1 / pc [1] $end
$var wire 1 0 pc [0] $end
$var wire 1 E! rst $end
$var wire 1 F! F [2] $end
$var wire 1 G! F [1] $end
$var wire 1 H! F [0] $end
$var wire 1 I! PC_in [15] $end
$var wire 1 J! PC_in [14] $end
$var wire 1 K! PC_in [13] $end
$var wire 1 L! PC_in [12] $end
$var wire 1 M! PC_in [11] $end
$var wire 1 N! PC_in [10] $end
$var wire 1 O! PC_in [9] $end
$var wire 1 P! PC_in [8] $end
$var wire 1 Q! PC_in [7] $end
$var wire 1 R! PC_in [6] $end
$var wire 1 S! PC_in [5] $end
$var wire 1 T! PC_in [4] $end
$var wire 1 U! PC_in [3] $end
$var wire 1 V! PC_in [2] $end
$var wire 1 W! PC_in [1] $end
$var wire 1 X! PC_in [0] $end
$var wire 1 Y! PC_out [15] $end
$var wire 1 Z! PC_out [14] $end
$var wire 1 [! PC_out [13] $end
$var wire 1 \! PC_out [12] $end
$var wire 1 ]! PC_out [11] $end
$var wire 1 ^! PC_out [10] $end
$var wire 1 _! PC_out [9] $end
$var wire 1 `! PC_out [8] $end
$var wire 1 a! PC_out [7] $end
$var wire 1 b! PC_out [6] $end
$var wire 1 c! PC_out [5] $end
$var wire 1 d! PC_out [4] $end
$var wire 1 e! PC_out [3] $end
$var wire 1 f! PC_out [2] $end
$var wire 1 g! PC_out [1] $end
$var wire 1 h! PC_out [0] $end
$var wire 1 i! instruction [15] $end
$var wire 1 j! instruction [14] $end
$var wire 1 k! instruction [13] $end
$var wire 1 l! instruction [12] $end
$var wire 1 m! instruction [11] $end
$var wire 1 n! instruction [10] $end
$var wire 1 o! instruction [9] $end
$var wire 1 p! instruction [8] $end
$var wire 1 q! instruction [7] $end
$var wire 1 r! instruction [6] $end
$var wire 1 s! instruction [5] $end
$var wire 1 t! instruction [4] $end
$var wire 1 u! instruction [3] $end
$var wire 1 v! instruction [2] $end
$var wire 1 w! instruction [1] $end
$var wire 1 x! instruction [0] $end
$var wire 1 y! write_reg [3] $end
$var wire 1 z! write_reg [2] $end
$var wire 1 {! write_reg [1] $end
$var wire 1 |! write_reg [0] $end
$var wire 1 }! Read_data_1 [15] $end
$var wire 1 ~! Read_data_1 [14] $end
$var wire 1 !" Read_data_1 [13] $end
$var wire 1 "" Read_data_1 [12] $end
$var wire 1 #" Read_data_1 [11] $end
$var wire 1 $" Read_data_1 [10] $end
$var wire 1 %" Read_data_1 [9] $end
$var wire 1 &" Read_data_1 [8] $end
$var wire 1 '" Read_data_1 [7] $end
$var wire 1 (" Read_data_1 [6] $end
$var wire 1 )" Read_data_1 [5] $end
$var wire 1 *" Read_data_1 [4] $end
$var wire 1 +" Read_data_1 [3] $end
$var wire 1 ," Read_data_1 [2] $end
$var wire 1 -" Read_data_1 [1] $end
$var wire 1 ." Read_data_1 [0] $end
$var wire 1 /" Read_data_2 [15] $end
$var wire 1 0" Read_data_2 [14] $end
$var wire 1 1" Read_data_2 [13] $end
$var wire 1 2" Read_data_2 [12] $end
$var wire 1 3" Read_data_2 [11] $end
$var wire 1 4" Read_data_2 [10] $end
$var wire 1 5" Read_data_2 [9] $end
$var wire 1 6" Read_data_2 [8] $end
$var wire 1 7" Read_data_2 [7] $end
$var wire 1 8" Read_data_2 [6] $end
$var wire 1 9" Read_data_2 [5] $end
$var wire 1 :" Read_data_2 [4] $end
$var wire 1 ;" Read_data_2 [3] $end
$var wire 1 <" Read_data_2 [2] $end
$var wire 1 =" Read_data_2 [1] $end
$var wire 1 >" Read_data_2 [0] $end
$var wire 1 ?" Write_data [15] $end
$var wire 1 @" Write_data [14] $end
$var wire 1 A" Write_data [13] $end
$var wire 1 B" Write_data [12] $end
$var wire 1 C" Write_data [11] $end
$var wire 1 D" Write_data [10] $end
$var wire 1 E" Write_data [9] $end
$var wire 1 F" Write_data [8] $end
$var wire 1 G" Write_data [7] $end
$var wire 1 H" Write_data [6] $end
$var wire 1 I" Write_data [5] $end
$var wire 1 J" Write_data [4] $end
$var wire 1 K" Write_data [3] $end
$var wire 1 L" Write_data [2] $end
$var wire 1 M" Write_data [1] $end
$var wire 1 N" Write_data [0] $end
$var wire 1 O" RegWrite $end
$var wire 1 P" pc_current [15] $end
$var wire 1 Q" pc_current [14] $end
$var wire 1 R" pc_current [13] $end
$var wire 1 S" pc_current [12] $end
$var wire 1 T" pc_current [11] $end
$var wire 1 U" pc_current [10] $end
$var wire 1 V" pc_current [9] $end
$var wire 1 W" pc_current [8] $end
$var wire 1 X" pc_current [7] $end
$var wire 1 Y" pc_current [6] $end
$var wire 1 Z" pc_current [5] $end
$var wire 1 [" pc_current [4] $end
$var wire 1 \" pc_current [3] $end
$var wire 1 ]" pc_current [2] $end
$var wire 1 ^" pc_current [1] $end
$var wire 1 _" pc_current [0] $end
$var wire 1 `" signextend [15] $end
$var wire 1 a" signextend [14] $end
$var wire 1 b" signextend [13] $end
$var wire 1 c" signextend [12] $end
$var wire 1 d" signextend [11] $end
$var wire 1 e" signextend [10] $end
$var wire 1 f" signextend [9] $end
$var wire 1 g" signextend [8] $end
$var wire 1 h" signextend [7] $end
$var wire 1 i" signextend [6] $end
$var wire 1 j" signextend [5] $end
$var wire 1 k" signextend [4] $end
$var wire 1 l" signextend [3] $end
$var wire 1 m" signextend [2] $end
$var wire 1 n" signextend [1] $end
$var wire 1 o" signextend [0] $end
$var wire 1 p" muxtoalu [15] $end
$var wire 1 q" muxtoalu [14] $end
$var wire 1 r" muxtoalu [13] $end
$var wire 1 s" muxtoalu [12] $end
$var wire 1 t" muxtoalu [11] $end
$var wire 1 u" muxtoalu [10] $end
$var wire 1 v" muxtoalu [9] $end
$var wire 1 w" muxtoalu [8] $end
$var wire 1 x" muxtoalu [7] $end
$var wire 1 y" muxtoalu [6] $end
$var wire 1 z" muxtoalu [5] $end
$var wire 1 {" muxtoalu [4] $end
$var wire 1 |" muxtoalu [3] $end
$var wire 1 }" muxtoalu [2] $end
$var wire 1 ~" muxtoalu [1] $end
$var wire 1 !# muxtoalu [0] $end
$var wire 1 "# ALU_out [15] $end
$var wire 1 ## ALU_out [14] $end
$var wire 1 $# ALU_out [13] $end
$var wire 1 %# ALU_out [12] $end
$var wire 1 &# ALU_out [11] $end
$var wire 1 '# ALU_out [10] $end
$var wire 1 (# ALU_out [9] $end
$var wire 1 )# ALU_out [8] $end
$var wire 1 *# ALU_out [7] $end
$var wire 1 +# ALU_out [6] $end
$var wire 1 ,# ALU_out [5] $end
$var wire 1 -# ALU_out [4] $end
$var wire 1 .# ALU_out [3] $end
$var wire 1 /# ALU_out [2] $end
$var wire 1 0# ALU_out [1] $end
$var wire 1 1# ALU_out [0] $end
$var wire 1 2# Data_memory_out [15] $end
$var wire 1 3# Data_memory_out [14] $end
$var wire 1 4# Data_memory_out [13] $end
$var wire 1 5# Data_memory_out [12] $end
$var wire 1 6# Data_memory_out [11] $end
$var wire 1 7# Data_memory_out [10] $end
$var wire 1 8# Data_memory_out [9] $end
$var wire 1 9# Data_memory_out [8] $end
$var wire 1 :# Data_memory_out [7] $end
$var wire 1 ;# Data_memory_out [6] $end
$var wire 1 <# Data_memory_out [5] $end
$var wire 1 =# Data_memory_out [4] $end
$var wire 1 ># Data_memory_out [3] $end
$var wire 1 ?# Data_memory_out [2] $end
$var wire 1 @# Data_memory_out [1] $end
$var wire 1 A# Data_memory_out [0] $end
$var wire 1 B# pcs_sum [15] $end
$var wire 1 C# pcs_sum [14] $end
$var wire 1 D# pcs_sum [13] $end
$var wire 1 E# pcs_sum [12] $end
$var wire 1 F# pcs_sum [11] $end
$var wire 1 G# pcs_sum [10] $end
$var wire 1 H# pcs_sum [9] $end
$var wire 1 I# pcs_sum [8] $end
$var wire 1 J# pcs_sum [7] $end
$var wire 1 K# pcs_sum [6] $end
$var wire 1 L# pcs_sum [5] $end
$var wire 1 M# pcs_sum [4] $end
$var wire 1 N# pcs_sum [3] $end
$var wire 1 O# pcs_sum [2] $end
$var wire 1 P# pcs_sum [1] $end
$var wire 1 Q# pcs_sum [0] $end
$var wire 1 R# MemRead $end
$var wire 1 S# MemWrite $end
$var wire 1 T# ALUsrc $end
$var wire 1 U# MemtoReg $end
$var wire 1 V# memory_enable $end
$var wire 1 W# hlt_internal $end
$var wire 1 X# pcs $end
$var wire 1 Y# ALUOp $end
$var wire 1 Z# tophalf $end
$var wire 1 [# f_internal [2] $end
$var wire 1 \# f_internal [1] $end
$var wire 1 ]# f_internal [0] $end
$var wire 1 ^# flag_write [2] $end
$var wire 1 _# flag_write [1] $end
$var wire 1 `# flag_write [0] $end
$var wire 1 a# ALUSrc $end

$scope module pc_reg $end
$var wire 1 Y! PC_new [15] $end
$var wire 1 Z! PC_new [14] $end
$var wire 1 [! PC_new [13] $end
$var wire 1 \! PC_new [12] $end
$var wire 1 ]! PC_new [11] $end
$var wire 1 ^! PC_new [10] $end
$var wire 1 _! PC_new [9] $end
$var wire 1 `! PC_new [8] $end
$var wire 1 a! PC_new [7] $end
$var wire 1 b! PC_new [6] $end
$var wire 1 c! PC_new [5] $end
$var wire 1 d! PC_new [4] $end
$var wire 1 e! PC_new [3] $end
$var wire 1 f! PC_new [2] $end
$var wire 1 g! PC_new [1] $end
$var wire 1 h! PC_new [0] $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 P" PC_current [15] $end
$var wire 1 Q" PC_current [14] $end
$var wire 1 R" PC_current [13] $end
$var wire 1 S" PC_current [12] $end
$var wire 1 T" PC_current [11] $end
$var wire 1 U" PC_current [10] $end
$var wire 1 V" PC_current [9] $end
$var wire 1 W" PC_current [8] $end
$var wire 1 X" PC_current [7] $end
$var wire 1 Y" PC_current [6] $end
$var wire 1 Z" PC_current [5] $end
$var wire 1 [" PC_current [4] $end
$var wire 1 \" PC_current [3] $end
$var wire 1 ]" PC_current [2] $end
$var wire 1 ^" PC_current [1] $end
$var wire 1 _" PC_current [0] $end

$scope module PC_bit0 $end
$var wire 1 _" q $end
$var wire 1 h! d $end
$var wire 1 b# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c# state $end
$upscope $end

$scope module PC_bit1 $end
$var wire 1 ^" q $end
$var wire 1 g! d $end
$var wire 1 d# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e# state $end
$upscope $end

$scope module PC_bit2 $end
$var wire 1 ]" q $end
$var wire 1 f! d $end
$var wire 1 f# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g# state $end
$upscope $end

$scope module PC_bit3 $end
$var wire 1 \" q $end
$var wire 1 e! d $end
$var wire 1 h# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i# state $end
$upscope $end

$scope module PC_bit4 $end
$var wire 1 [" q $end
$var wire 1 d! d $end
$var wire 1 j# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k# state $end
$upscope $end

$scope module PC_bit5 $end
$var wire 1 Z" q $end
$var wire 1 c! d $end
$var wire 1 l# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m# state $end
$upscope $end

$scope module PC_bit6 $end
$var wire 1 Y" q $end
$var wire 1 b! d $end
$var wire 1 n# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o# state $end
$upscope $end

$scope module PC_bit7 $end
$var wire 1 X" q $end
$var wire 1 a! d $end
$var wire 1 p# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q# state $end
$upscope $end

$scope module PC_bit8 $end
$var wire 1 W" q $end
$var wire 1 `! d $end
$var wire 1 r# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s# state $end
$upscope $end

$scope module PC_bit9 $end
$var wire 1 V" q $end
$var wire 1 _! d $end
$var wire 1 t# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u# state $end
$upscope $end

$scope module PC_bit10 $end
$var wire 1 U" q $end
$var wire 1 ^! d $end
$var wire 1 v# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w# state $end
$upscope $end

$scope module PC_bit11 $end
$var wire 1 T" q $end
$var wire 1 ]! d $end
$var wire 1 x# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y# state $end
$upscope $end

$scope module PC_bit12 $end
$var wire 1 S" q $end
$var wire 1 \! d $end
$var wire 1 z# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {# state $end
$upscope $end

$scope module PC_bit13 $end
$var wire 1 R" q $end
$var wire 1 [! d $end
$var wire 1 |# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }# state $end
$upscope $end

$scope module PC_bit14 $end
$var wire 1 Q" q $end
$var wire 1 Z! d $end
$var wire 1 ~# wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !$ state $end
$upscope $end

$scope module PC_bit15 $end
$var wire 1 P" q $end
$var wire 1 Y! d $end
$var wire 1 "$ wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #$ state $end
$upscope $end
$upscope $end

$scope module PC_control $end
$var wire 1 W# hlt $end
$var wire 1 m! C [2] $end
$var wire 1 n! C [1] $end
$var wire 1 o! C [0] $end
$var wire 1 F! F [2] $end
$var wire 1 G! F [1] $end
$var wire 1 H! F [0] $end
$var wire 1 p! I [8] $end
$var wire 1 q! I [7] $end
$var wire 1 r! I [6] $end
$var wire 1 s! I [5] $end
$var wire 1 t! I [4] $end
$var wire 1 u! I [3] $end
$var wire 1 v! I [2] $end
$var wire 1 w! I [1] $end
$var wire 1 x! I [0] $end
$var wire 1 I! PC_in [15] $end
$var wire 1 J! PC_in [14] $end
$var wire 1 K! PC_in [13] $end
$var wire 1 L! PC_in [12] $end
$var wire 1 M! PC_in [11] $end
$var wire 1 N! PC_in [10] $end
$var wire 1 O! PC_in [9] $end
$var wire 1 P! PC_in [8] $end
$var wire 1 Q! PC_in [7] $end
$var wire 1 R! PC_in [6] $end
$var wire 1 S! PC_in [5] $end
$var wire 1 T! PC_in [4] $end
$var wire 1 U! PC_in [3] $end
$var wire 1 V! PC_in [2] $end
$var wire 1 W! PC_in [1] $end
$var wire 1 X! PC_in [0] $end
$var wire 1 Y! PC_out [15] $end
$var wire 1 Z! PC_out [14] $end
$var wire 1 [! PC_out [13] $end
$var wire 1 \! PC_out [12] $end
$var wire 1 ]! PC_out [11] $end
$var wire 1 ^! PC_out [10] $end
$var wire 1 _! PC_out [9] $end
$var wire 1 `! PC_out [8] $end
$var wire 1 a! PC_out [7] $end
$var wire 1 b! PC_out [6] $end
$var wire 1 c! PC_out [5] $end
$var wire 1 d! PC_out [4] $end
$var wire 1 e! PC_out [3] $end
$var wire 1 f! PC_out [2] $end
$var wire 1 g! PC_out [1] $end
$var wire 1 h! PC_out [0] $end
$var wire 1 $$ neg_flag $end
$var wire 1 %$ ovfl_flag $end
$var wire 1 &$ zero_flag $end
$var wire 1 '$ branch $end
$var wire 1 ($ NEQ $end
$var wire 1 )$ EQ $end
$var wire 1 *$ GT $end
$var wire 1 +$ LT $end
$var wire 1 ,$ GEQ $end
$var wire 1 -$ LEQ $end
$var wire 1 .$ OVFL $end
$var wire 1 /$ UNCOND $end
$var wire 1 0$ target [15] $end
$var wire 1 1$ target [14] $end
$var wire 1 2$ target [13] $end
$var wire 1 3$ target [12] $end
$var wire 1 4$ target [11] $end
$var wire 1 5$ target [10] $end
$var wire 1 6$ target [9] $end
$var wire 1 7$ target [8] $end
$var wire 1 8$ target [7] $end
$var wire 1 9$ target [6] $end
$var wire 1 :$ target [5] $end
$var wire 1 ;$ target [4] $end
$var wire 1 <$ target [3] $end
$var wire 1 =$ target [2] $end
$var wire 1 >$ target [1] $end
$var wire 1 ?$ target [0] $end
$var wire 1 @$ sign_extend_I [15] $end
$var wire 1 A$ sign_extend_I [14] $end
$var wire 1 B$ sign_extend_I [13] $end
$var wire 1 C$ sign_extend_I [12] $end
$var wire 1 D$ sign_extend_I [11] $end
$var wire 1 E$ sign_extend_I [10] $end
$var wire 1 F$ sign_extend_I [9] $end
$var wire 1 G$ sign_extend_I [8] $end
$var wire 1 H$ sign_extend_I [7] $end
$var wire 1 I$ sign_extend_I [6] $end
$var wire 1 J$ sign_extend_I [5] $end
$var wire 1 K$ sign_extend_I [4] $end
$var wire 1 L$ sign_extend_I [3] $end
$var wire 1 M$ sign_extend_I [2] $end
$var wire 1 N$ sign_extend_I [1] $end
$var wire 1 O$ sign_extend_I [0] $end
$var wire 1 P$ shifted_I [15] $end
$var wire 1 Q$ shifted_I [14] $end
$var wire 1 R$ shifted_I [13] $end
$var wire 1 S$ shifted_I [12] $end
$var wire 1 T$ shifted_I [11] $end
$var wire 1 U$ shifted_I [10] $end
$var wire 1 V$ shifted_I [9] $end
$var wire 1 W$ shifted_I [8] $end
$var wire 1 X$ shifted_I [7] $end
$var wire 1 Y$ shifted_I [6] $end
$var wire 1 Z$ shifted_I [5] $end
$var wire 1 [$ shifted_I [4] $end
$var wire 1 \$ shifted_I [3] $end
$var wire 1 ]$ shifted_I [2] $end
$var wire 1 ^$ shifted_I [1] $end
$var wire 1 _$ shifted_I [0] $end
$var wire 1 `$ PC_plus_2 [15] $end
$var wire 1 a$ PC_plus_2 [14] $end
$var wire 1 b$ PC_plus_2 [13] $end
$var wire 1 c$ PC_plus_2 [12] $end
$var wire 1 d$ PC_plus_2 [11] $end
$var wire 1 e$ PC_plus_2 [10] $end
$var wire 1 f$ PC_plus_2 [9] $end
$var wire 1 g$ PC_plus_2 [8] $end
$var wire 1 h$ PC_plus_2 [7] $end
$var wire 1 i$ PC_plus_2 [6] $end
$var wire 1 j$ PC_plus_2 [5] $end
$var wire 1 k$ PC_plus_2 [4] $end
$var wire 1 l$ PC_plus_2 [3] $end
$var wire 1 m$ PC_plus_2 [2] $end
$var wire 1 n$ PC_plus_2 [1] $end
$var wire 1 o$ PC_plus_2 [0] $end

$scope module PC_adder $end
$var wire 1 I! A [15] $end
$var wire 1 J! A [14] $end
$var wire 1 K! A [13] $end
$var wire 1 L! A [12] $end
$var wire 1 M! A [11] $end
$var wire 1 N! A [10] $end
$var wire 1 O! A [9] $end
$var wire 1 P! A [8] $end
$var wire 1 Q! A [7] $end
$var wire 1 R! A [6] $end
$var wire 1 S! A [5] $end
$var wire 1 T! A [4] $end
$var wire 1 U! A [3] $end
$var wire 1 V! A [2] $end
$var wire 1 W! A [1] $end
$var wire 1 X! A [0] $end
$var wire 1 p$ B [15] $end
$var wire 1 q$ B [14] $end
$var wire 1 r$ B [13] $end
$var wire 1 s$ B [12] $end
$var wire 1 t$ B [11] $end
$var wire 1 u$ B [10] $end
$var wire 1 v$ B [9] $end
$var wire 1 w$ B [8] $end
$var wire 1 x$ B [7] $end
$var wire 1 y$ B [6] $end
$var wire 1 z$ B [5] $end
$var wire 1 {$ B [4] $end
$var wire 1 |$ B [3] $end
$var wire 1 }$ B [2] $end
$var wire 1 ~$ B [1] $end
$var wire 1 !% B [0] $end
$var wire 1 "% sub $end
$var wire 1 `$ S [15] $end
$var wire 1 a$ S [14] $end
$var wire 1 b$ S [13] $end
$var wire 1 c$ S [12] $end
$var wire 1 d$ S [11] $end
$var wire 1 e$ S [10] $end
$var wire 1 f$ S [9] $end
$var wire 1 g$ S [8] $end
$var wire 1 h$ S [7] $end
$var wire 1 i$ S [6] $end
$var wire 1 j$ S [5] $end
$var wire 1 k$ S [4] $end
$var wire 1 l$ S [3] $end
$var wire 1 m$ S [2] $end
$var wire 1 n$ S [1] $end
$var wire 1 o$ S [0] $end
$var wire 1 #% ovfl $end
$var wire 1 $% neg $end
$var wire 1 %% B_in [15] $end
$var wire 1 &% B_in [14] $end
$var wire 1 '% B_in [13] $end
$var wire 1 (% B_in [12] $end
$var wire 1 )% B_in [11] $end
$var wire 1 *% B_in [10] $end
$var wire 1 +% B_in [9] $end
$var wire 1 ,% B_in [8] $end
$var wire 1 -% B_in [7] $end
$var wire 1 .% B_in [6] $end
$var wire 1 /% B_in [5] $end
$var wire 1 0% B_in [4] $end
$var wire 1 1% B_in [3] $end
$var wire 1 2% B_in [2] $end
$var wire 1 3% B_in [1] $end
$var wire 1 4% B_in [0] $end
$var wire 1 5% addsub_out [15] $end
$var wire 1 6% addsub_out [14] $end
$var wire 1 7% addsub_out [13] $end
$var wire 1 8% addsub_out [12] $end
$var wire 1 9% addsub_out [11] $end
$var wire 1 :% addsub_out [10] $end
$var wire 1 ;% addsub_out [9] $end
$var wire 1 <% addsub_out [8] $end
$var wire 1 =% addsub_out [7] $end
$var wire 1 >% addsub_out [6] $end
$var wire 1 ?% addsub_out [5] $end
$var wire 1 @% addsub_out [4] $end
$var wire 1 A% addsub_out [3] $end
$var wire 1 B% addsub_out [2] $end
$var wire 1 C% addsub_out [1] $end
$var wire 1 D% addsub_out [0] $end
$var wire 1 E% c [3] $end
$var wire 1 F% c [2] $end
$var wire 1 G% c [1] $end
$var wire 1 H% c [0] $end
$var wire 1 I% g [3] $end
$var wire 1 J% g [2] $end
$var wire 1 K% g [1] $end
$var wire 1 L% g [0] $end
$var wire 1 M% p [3] $end
$var wire 1 N% p [2] $end
$var wire 1 O% p [1] $end
$var wire 1 P% p [0] $end
$var wire 1 Q% G $end
$var wire 1 R% P $end
$var wire 1 S% both_neg $end
$var wire 1 T% both_pos $end
$var wire 1 U% sat_neg $end
$var wire 1 V% sat_pos $end

$scope module cla_0_3 $end
$var wire 1 U! a [3] $end
$var wire 1 V! a [2] $end
$var wire 1 W! a [1] $end
$var wire 1 X! a [0] $end
$var wire 1 1% b [3] $end
$var wire 1 2% b [2] $end
$var wire 1 3% b [1] $end
$var wire 1 4% b [0] $end
$var wire 1 H% c_in $end
$var wire 1 A% s [3] $end
$var wire 1 B% s [2] $end
$var wire 1 C% s [1] $end
$var wire 1 D% s [0] $end
$var wire 1 P% pg_out $end
$var wire 1 L% gg_out $end
$var wire 1 W% c [3] $end
$var wire 1 X% c [2] $end
$var wire 1 Y% c [1] $end
$var wire 1 Z% c [0] $end
$var wire 1 [% g [3] $end
$var wire 1 \% g [2] $end
$var wire 1 ]% g [1] $end
$var wire 1 ^% g [0] $end
$var wire 1 _% p [3] $end
$var wire 1 `% p [2] $end
$var wire 1 a% p [1] $end
$var wire 1 b% p [0] $end

$scope module cla0 $end
$var wire 1 X! a $end
$var wire 1 4% b $end
$var wire 1 Z% c_in $end
$var wire 1 ^% g_out $end
$var wire 1 b% p_out $end
$var wire 1 D% s $end
$upscope $end

$scope module cla1 $end
$var wire 1 W! a $end
$var wire 1 3% b $end
$var wire 1 Y% c_in $end
$var wire 1 ]% g_out $end
$var wire 1 a% p_out $end
$var wire 1 C% s $end
$upscope $end

$scope module cla2 $end
$var wire 1 V! a $end
$var wire 1 2% b $end
$var wire 1 X% c_in $end
$var wire 1 \% g_out $end
$var wire 1 `% p_out $end
$var wire 1 B% s $end
$upscope $end

$scope module cla3 $end
$var wire 1 U! a $end
$var wire 1 1% b $end
$var wire 1 W% c_in $end
$var wire 1 [% g_out $end
$var wire 1 _% p_out $end
$var wire 1 A% s $end
$upscope $end
$upscope $end

$scope module cla_4_7 $end
$var wire 1 Q! a [3] $end
$var wire 1 R! a [2] $end
$var wire 1 S! a [1] $end
$var wire 1 T! a [0] $end
$var wire 1 -% b [3] $end
$var wire 1 .% b [2] $end
$var wire 1 /% b [1] $end
$var wire 1 0% b [0] $end
$var wire 1 G% c_in $end
$var wire 1 =% s [3] $end
$var wire 1 >% s [2] $end
$var wire 1 ?% s [1] $end
$var wire 1 @% s [0] $end
$var wire 1 O% pg_out $end
$var wire 1 K% gg_out $end
$var wire 1 c% c [3] $end
$var wire 1 d% c [2] $end
$var wire 1 e% c [1] $end
$var wire 1 f% c [0] $end
$var wire 1 g% g [3] $end
$var wire 1 h% g [2] $end
$var wire 1 i% g [1] $end
$var wire 1 j% g [0] $end
$var wire 1 k% p [3] $end
$var wire 1 l% p [2] $end
$var wire 1 m% p [1] $end
$var wire 1 n% p [0] $end

$scope module cla0 $end
$var wire 1 T! a $end
$var wire 1 0% b $end
$var wire 1 f% c_in $end
$var wire 1 j% g_out $end
$var wire 1 n% p_out $end
$var wire 1 @% s $end
$upscope $end

$scope module cla1 $end
$var wire 1 S! a $end
$var wire 1 /% b $end
$var wire 1 e% c_in $end
$var wire 1 i% g_out $end
$var wire 1 m% p_out $end
$var wire 1 ?% s $end
$upscope $end

$scope module cla2 $end
$var wire 1 R! a $end
$var wire 1 .% b $end
$var wire 1 d% c_in $end
$var wire 1 h% g_out $end
$var wire 1 l% p_out $end
$var wire 1 >% s $end
$upscope $end

$scope module cla3 $end
$var wire 1 Q! a $end
$var wire 1 -% b $end
$var wire 1 c% c_in $end
$var wire 1 g% g_out $end
$var wire 1 k% p_out $end
$var wire 1 =% s $end
$upscope $end
$upscope $end

$scope module cla_8_11 $end
$var wire 1 M! a [3] $end
$var wire 1 N! a [2] $end
$var wire 1 O! a [1] $end
$var wire 1 P! a [0] $end
$var wire 1 )% b [3] $end
$var wire 1 *% b [2] $end
$var wire 1 +% b [1] $end
$var wire 1 ,% b [0] $end
$var wire 1 F% c_in $end
$var wire 1 9% s [3] $end
$var wire 1 :% s [2] $end
$var wire 1 ;% s [1] $end
$var wire 1 <% s [0] $end
$var wire 1 N% pg_out $end
$var wire 1 J% gg_out $end
$var wire 1 o% c [3] $end
$var wire 1 p% c [2] $end
$var wire 1 q% c [1] $end
$var wire 1 r% c [0] $end
$var wire 1 s% g [3] $end
$var wire 1 t% g [2] $end
$var wire 1 u% g [1] $end
$var wire 1 v% g [0] $end
$var wire 1 w% p [3] $end
$var wire 1 x% p [2] $end
$var wire 1 y% p [1] $end
$var wire 1 z% p [0] $end

$scope module cla0 $end
$var wire 1 P! a $end
$var wire 1 ,% b $end
$var wire 1 r% c_in $end
$var wire 1 v% g_out $end
$var wire 1 z% p_out $end
$var wire 1 <% s $end
$upscope $end

$scope module cla1 $end
$var wire 1 O! a $end
$var wire 1 +% b $end
$var wire 1 q% c_in $end
$var wire 1 u% g_out $end
$var wire 1 y% p_out $end
$var wire 1 ;% s $end
$upscope $end

$scope module cla2 $end
$var wire 1 N! a $end
$var wire 1 *% b $end
$var wire 1 p% c_in $end
$var wire 1 t% g_out $end
$var wire 1 x% p_out $end
$var wire 1 :% s $end
$upscope $end

$scope module cla3 $end
$var wire 1 M! a $end
$var wire 1 )% b $end
$var wire 1 o% c_in $end
$var wire 1 s% g_out $end
$var wire 1 w% p_out $end
$var wire 1 9% s $end
$upscope $end
$upscope $end

$scope module cla_12_15 $end
$var wire 1 I! a [3] $end
$var wire 1 J! a [2] $end
$var wire 1 K! a [1] $end
$var wire 1 L! a [0] $end
$var wire 1 %% b [3] $end
$var wire 1 &% b [2] $end
$var wire 1 '% b [1] $end
$var wire 1 (% b [0] $end
$var wire 1 E% c_in $end
$var wire 1 5% s [3] $end
$var wire 1 6% s [2] $end
$var wire 1 7% s [1] $end
$var wire 1 8% s [0] $end
$var wire 1 M% pg_out $end
$var wire 1 I% gg_out $end
$var wire 1 {% c [3] $end
$var wire 1 |% c [2] $end
$var wire 1 }% c [1] $end
$var wire 1 ~% c [0] $end
$var wire 1 !& g [3] $end
$var wire 1 "& g [2] $end
$var wire 1 #& g [1] $end
$var wire 1 $& g [0] $end
$var wire 1 %& p [3] $end
$var wire 1 && p [2] $end
$var wire 1 '& p [1] $end
$var wire 1 (& p [0] $end

$scope module cla0 $end
$var wire 1 L! a $end
$var wire 1 (% b $end
$var wire 1 ~% c_in $end
$var wire 1 $& g_out $end
$var wire 1 (& p_out $end
$var wire 1 8% s $end
$upscope $end

$scope module cla1 $end
$var wire 1 K! a $end
$var wire 1 '% b $end
$var wire 1 }% c_in $end
$var wire 1 #& g_out $end
$var wire 1 '& p_out $end
$var wire 1 7% s $end
$upscope $end

$scope module cla2 $end
$var wire 1 J! a $end
$var wire 1 &% b $end
$var wire 1 |% c_in $end
$var wire 1 "& g_out $end
$var wire 1 && p_out $end
$var wire 1 6% s $end
$upscope $end

$scope module cla3 $end
$var wire 1 I! a $end
$var wire 1 %% b $end
$var wire 1 {% c_in $end
$var wire 1 !& g_out $end
$var wire 1 %& p_out $end
$var wire 1 5% s $end
$upscope $end
$upscope $end
$upscope $end

$scope module target_adder $end
$var wire 1 `$ A [15] $end
$var wire 1 a$ A [14] $end
$var wire 1 b$ A [13] $end
$var wire 1 c$ A [12] $end
$var wire 1 d$ A [11] $end
$var wire 1 e$ A [10] $end
$var wire 1 f$ A [9] $end
$var wire 1 g$ A [8] $end
$var wire 1 h$ A [7] $end
$var wire 1 i$ A [6] $end
$var wire 1 j$ A [5] $end
$var wire 1 k$ A [4] $end
$var wire 1 l$ A [3] $end
$var wire 1 m$ A [2] $end
$var wire 1 n$ A [1] $end
$var wire 1 o$ A [0] $end
$var wire 1 P$ B [15] $end
$var wire 1 Q$ B [14] $end
$var wire 1 R$ B [13] $end
$var wire 1 S$ B [12] $end
$var wire 1 T$ B [11] $end
$var wire 1 U$ B [10] $end
$var wire 1 V$ B [9] $end
$var wire 1 W$ B [8] $end
$var wire 1 X$ B [7] $end
$var wire 1 Y$ B [6] $end
$var wire 1 Z$ B [5] $end
$var wire 1 [$ B [4] $end
$var wire 1 \$ B [3] $end
$var wire 1 ]$ B [2] $end
$var wire 1 ^$ B [1] $end
$var wire 1 _$ B [0] $end
$var wire 1 )& sub $end
$var wire 1 0$ S [15] $end
$var wire 1 1$ S [14] $end
$var wire 1 2$ S [13] $end
$var wire 1 3$ S [12] $end
$var wire 1 4$ S [11] $end
$var wire 1 5$ S [10] $end
$var wire 1 6$ S [9] $end
$var wire 1 7$ S [8] $end
$var wire 1 8$ S [7] $end
$var wire 1 9$ S [6] $end
$var wire 1 :$ S [5] $end
$var wire 1 ;$ S [4] $end
$var wire 1 <$ S [3] $end
$var wire 1 =$ S [2] $end
$var wire 1 >$ S [1] $end
$var wire 1 ?$ S [0] $end
$var wire 1 *& ovfl $end
$var wire 1 +& neg $end
$var wire 1 ,& B_in [15] $end
$var wire 1 -& B_in [14] $end
$var wire 1 .& B_in [13] $end
$var wire 1 /& B_in [12] $end
$var wire 1 0& B_in [11] $end
$var wire 1 1& B_in [10] $end
$var wire 1 2& B_in [9] $end
$var wire 1 3& B_in [8] $end
$var wire 1 4& B_in [7] $end
$var wire 1 5& B_in [6] $end
$var wire 1 6& B_in [5] $end
$var wire 1 7& B_in [4] $end
$var wire 1 8& B_in [3] $end
$var wire 1 9& B_in [2] $end
$var wire 1 :& B_in [1] $end
$var wire 1 ;& B_in [0] $end
$var wire 1 <& addsub_out [15] $end
$var wire 1 =& addsub_out [14] $end
$var wire 1 >& addsub_out [13] $end
$var wire 1 ?& addsub_out [12] $end
$var wire 1 @& addsub_out [11] $end
$var wire 1 A& addsub_out [10] $end
$var wire 1 B& addsub_out [9] $end
$var wire 1 C& addsub_out [8] $end
$var wire 1 D& addsub_out [7] $end
$var wire 1 E& addsub_out [6] $end
$var wire 1 F& addsub_out [5] $end
$var wire 1 G& addsub_out [4] $end
$var wire 1 H& addsub_out [3] $end
$var wire 1 I& addsub_out [2] $end
$var wire 1 J& addsub_out [1] $end
$var wire 1 K& addsub_out [0] $end
$var wire 1 L& c [3] $end
$var wire 1 M& c [2] $end
$var wire 1 N& c [1] $end
$var wire 1 O& c [0] $end
$var wire 1 P& g [3] $end
$var wire 1 Q& g [2] $end
$var wire 1 R& g [1] $end
$var wire 1 S& g [0] $end
$var wire 1 T& p [3] $end
$var wire 1 U& p [2] $end
$var wire 1 V& p [1] $end
$var wire 1 W& p [0] $end
$var wire 1 X& G $end
$var wire 1 Y& P $end
$var wire 1 Z& both_neg $end
$var wire 1 [& both_pos $end
$var wire 1 \& sat_neg $end
$var wire 1 ]& sat_pos $end

$scope module cla_0_3 $end
$var wire 1 l$ a [3] $end
$var wire 1 m$ a [2] $end
$var wire 1 n$ a [1] $end
$var wire 1 o$ a [0] $end
$var wire 1 8& b [3] $end
$var wire 1 9& b [2] $end
$var wire 1 :& b [1] $end
$var wire 1 ;& b [0] $end
$var wire 1 O& c_in $end
$var wire 1 H& s [3] $end
$var wire 1 I& s [2] $end
$var wire 1 J& s [1] $end
$var wire 1 K& s [0] $end
$var wire 1 W& pg_out $end
$var wire 1 S& gg_out $end
$var wire 1 ^& c [3] $end
$var wire 1 _& c [2] $end
$var wire 1 `& c [1] $end
$var wire 1 a& c [0] $end
$var wire 1 b& g [3] $end
$var wire 1 c& g [2] $end
$var wire 1 d& g [1] $end
$var wire 1 e& g [0] $end
$var wire 1 f& p [3] $end
$var wire 1 g& p [2] $end
$var wire 1 h& p [1] $end
$var wire 1 i& p [0] $end

$scope module cla0 $end
$var wire 1 o$ a $end
$var wire 1 ;& b $end
$var wire 1 a& c_in $end
$var wire 1 e& g_out $end
$var wire 1 i& p_out $end
$var wire 1 K& s $end
$upscope $end

$scope module cla1 $end
$var wire 1 n$ a $end
$var wire 1 :& b $end
$var wire 1 `& c_in $end
$var wire 1 d& g_out $end
$var wire 1 h& p_out $end
$var wire 1 J& s $end
$upscope $end

$scope module cla2 $end
$var wire 1 m$ a $end
$var wire 1 9& b $end
$var wire 1 _& c_in $end
$var wire 1 c& g_out $end
$var wire 1 g& p_out $end
$var wire 1 I& s $end
$upscope $end

$scope module cla3 $end
$var wire 1 l$ a $end
$var wire 1 8& b $end
$var wire 1 ^& c_in $end
$var wire 1 b& g_out $end
$var wire 1 f& p_out $end
$var wire 1 H& s $end
$upscope $end
$upscope $end

$scope module cla_4_7 $end
$var wire 1 h$ a [3] $end
$var wire 1 i$ a [2] $end
$var wire 1 j$ a [1] $end
$var wire 1 k$ a [0] $end
$var wire 1 4& b [3] $end
$var wire 1 5& b [2] $end
$var wire 1 6& b [1] $end
$var wire 1 7& b [0] $end
$var wire 1 N& c_in $end
$var wire 1 D& s [3] $end
$var wire 1 E& s [2] $end
$var wire 1 F& s [1] $end
$var wire 1 G& s [0] $end
$var wire 1 V& pg_out $end
$var wire 1 R& gg_out $end
$var wire 1 j& c [3] $end
$var wire 1 k& c [2] $end
$var wire 1 l& c [1] $end
$var wire 1 m& c [0] $end
$var wire 1 n& g [3] $end
$var wire 1 o& g [2] $end
$var wire 1 p& g [1] $end
$var wire 1 q& g [0] $end
$var wire 1 r& p [3] $end
$var wire 1 s& p [2] $end
$var wire 1 t& p [1] $end
$var wire 1 u& p [0] $end

$scope module cla0 $end
$var wire 1 k$ a $end
$var wire 1 7& b $end
$var wire 1 m& c_in $end
$var wire 1 q& g_out $end
$var wire 1 u& p_out $end
$var wire 1 G& s $end
$upscope $end

$scope module cla1 $end
$var wire 1 j$ a $end
$var wire 1 6& b $end
$var wire 1 l& c_in $end
$var wire 1 p& g_out $end
$var wire 1 t& p_out $end
$var wire 1 F& s $end
$upscope $end

$scope module cla2 $end
$var wire 1 i$ a $end
$var wire 1 5& b $end
$var wire 1 k& c_in $end
$var wire 1 o& g_out $end
$var wire 1 s& p_out $end
$var wire 1 E& s $end
$upscope $end

$scope module cla3 $end
$var wire 1 h$ a $end
$var wire 1 4& b $end
$var wire 1 j& c_in $end
$var wire 1 n& g_out $end
$var wire 1 r& p_out $end
$var wire 1 D& s $end
$upscope $end
$upscope $end

$scope module cla_8_11 $end
$var wire 1 d$ a [3] $end
$var wire 1 e$ a [2] $end
$var wire 1 f$ a [1] $end
$var wire 1 g$ a [0] $end
$var wire 1 0& b [3] $end
$var wire 1 1& b [2] $end
$var wire 1 2& b [1] $end
$var wire 1 3& b [0] $end
$var wire 1 M& c_in $end
$var wire 1 @& s [3] $end
$var wire 1 A& s [2] $end
$var wire 1 B& s [1] $end
$var wire 1 C& s [0] $end
$var wire 1 U& pg_out $end
$var wire 1 Q& gg_out $end
$var wire 1 v& c [3] $end
$var wire 1 w& c [2] $end
$var wire 1 x& c [1] $end
$var wire 1 y& c [0] $end
$var wire 1 z& g [3] $end
$var wire 1 {& g [2] $end
$var wire 1 |& g [1] $end
$var wire 1 }& g [0] $end
$var wire 1 ~& p [3] $end
$var wire 1 !' p [2] $end
$var wire 1 "' p [1] $end
$var wire 1 #' p [0] $end

$scope module cla0 $end
$var wire 1 g$ a $end
$var wire 1 3& b $end
$var wire 1 y& c_in $end
$var wire 1 }& g_out $end
$var wire 1 #' p_out $end
$var wire 1 C& s $end
$upscope $end

$scope module cla1 $end
$var wire 1 f$ a $end
$var wire 1 2& b $end
$var wire 1 x& c_in $end
$var wire 1 |& g_out $end
$var wire 1 "' p_out $end
$var wire 1 B& s $end
$upscope $end

$scope module cla2 $end
$var wire 1 e$ a $end
$var wire 1 1& b $end
$var wire 1 w& c_in $end
$var wire 1 {& g_out $end
$var wire 1 !' p_out $end
$var wire 1 A& s $end
$upscope $end

$scope module cla3 $end
$var wire 1 d$ a $end
$var wire 1 0& b $end
$var wire 1 v& c_in $end
$var wire 1 z& g_out $end
$var wire 1 ~& p_out $end
$var wire 1 @& s $end
$upscope $end
$upscope $end

$scope module cla_12_15 $end
$var wire 1 `$ a [3] $end
$var wire 1 a$ a [2] $end
$var wire 1 b$ a [1] $end
$var wire 1 c$ a [0] $end
$var wire 1 ,& b [3] $end
$var wire 1 -& b [2] $end
$var wire 1 .& b [1] $end
$var wire 1 /& b [0] $end
$var wire 1 L& c_in $end
$var wire 1 <& s [3] $end
$var wire 1 =& s [2] $end
$var wire 1 >& s [1] $end
$var wire 1 ?& s [0] $end
$var wire 1 T& pg_out $end
$var wire 1 P& gg_out $end
$var wire 1 $' c [3] $end
$var wire 1 %' c [2] $end
$var wire 1 &' c [1] $end
$var wire 1 '' c [0] $end
$var wire 1 (' g [3] $end
$var wire 1 )' g [2] $end
$var wire 1 *' g [1] $end
$var wire 1 +' g [0] $end
$var wire 1 ,' p [3] $end
$var wire 1 -' p [2] $end
$var wire 1 .' p [1] $end
$var wire 1 /' p [0] $end

$scope module cla0 $end
$var wire 1 c$ a $end
$var wire 1 /& b $end
$var wire 1 '' c_in $end
$var wire 1 +' g_out $end
$var wire 1 /' p_out $end
$var wire 1 ?& s $end
$upscope $end

$scope module cla1 $end
$var wire 1 b$ a $end
$var wire 1 .& b $end
$var wire 1 &' c_in $end
$var wire 1 *' g_out $end
$var wire 1 .' p_out $end
$var wire 1 >& s $end
$upscope $end

$scope module cla2 $end
$var wire 1 a$ a $end
$var wire 1 -& b $end
$var wire 1 %' c_in $end
$var wire 1 )' g_out $end
$var wire 1 -' p_out $end
$var wire 1 =& s $end
$upscope $end

$scope module cla3 $end
$var wire 1 `$ a $end
$var wire 1 ,& b $end
$var wire 1 $' c_in $end
$var wire 1 (' g_out $end
$var wire 1 ,' p_out $end
$var wire 1 <& s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module instrucion_mem $end
$var parameter 32 0' ADDR_WIDTH $end
$var wire 1 i! data_out [15] $end
$var wire 1 j! data_out [14] $end
$var wire 1 k! data_out [13] $end
$var wire 1 l! data_out [12] $end
$var wire 1 m! data_out [11] $end
$var wire 1 n! data_out [10] $end
$var wire 1 o! data_out [9] $end
$var wire 1 p! data_out [8] $end
$var wire 1 q! data_out [7] $end
$var wire 1 r! data_out [6] $end
$var wire 1 s! data_out [5] $end
$var wire 1 t! data_out [4] $end
$var wire 1 u! data_out [3] $end
$var wire 1 v! data_out [2] $end
$var wire 1 w! data_out [1] $end
$var wire 1 x! data_out [0] $end
$var wire 1 1' data_in [15] $end
$var wire 1 2' data_in [14] $end
$var wire 1 3' data_in [13] $end
$var wire 1 4' data_in [12] $end
$var wire 1 5' data_in [11] $end
$var wire 1 6' data_in [10] $end
$var wire 1 7' data_in [9] $end
$var wire 1 8' data_in [8] $end
$var wire 1 9' data_in [7] $end
$var wire 1 :' data_in [6] $end
$var wire 1 ;' data_in [5] $end
$var wire 1 <' data_in [4] $end
$var wire 1 =' data_in [3] $end
$var wire 1 >' data_in [2] $end
$var wire 1 ?' data_in [1] $end
$var wire 1 @' data_in [0] $end
$var wire 1 P" addr [15] $end
$var wire 1 Q" addr [14] $end
$var wire 1 R" addr [13] $end
$var wire 1 S" addr [12] $end
$var wire 1 T" addr [11] $end
$var wire 1 U" addr [10] $end
$var wire 1 V" addr [9] $end
$var wire 1 W" addr [8] $end
$var wire 1 X" addr [7] $end
$var wire 1 Y" addr [6] $end
$var wire 1 Z" addr [5] $end
$var wire 1 [" addr [4] $end
$var wire 1 \" addr [3] $end
$var wire 1 ]" addr [2] $end
$var wire 1 ^" addr [1] $end
$var wire 1 _" addr [0] $end
$var wire 1 A' enable $end
$var wire 1 B' wr $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C' loaded $end
$upscope $end

$scope module control_unit $end
$var parameter 1 D' Asserted $end
$var parameter 1 E' Not_Asserted $end
$var wire 1 i! instruction [3] $end
$var wire 1 j! instruction [2] $end
$var wire 1 k! instruction [1] $end
$var wire 1 l! instruction [0] $end
$var reg 1 F' MemRead $end
$var reg 1 G' MemtoReg $end
$var reg 1 H' MemWrite $end
$var reg 1 I' ALUSrc $end
$var reg 1 J' RegWrite $end
$var reg 1 K' hlt $end
$var reg 1 L' pcs $end
$var reg 1 M' ALUOp $end
$var reg 1 N' tophalf $end
$upscope $end

$scope module RegisterFile $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 q! SrcReg1 [3] $end
$var wire 1 r! SrcReg1 [2] $end
$var wire 1 s! SrcReg1 [1] $end
$var wire 1 t! SrcReg1 [0] $end
$var wire 1 u! SrcReg2 [3] $end
$var wire 1 v! SrcReg2 [2] $end
$var wire 1 w! SrcReg2 [1] $end
$var wire 1 x! SrcReg2 [0] $end
$var wire 1 y! DstReg [3] $end
$var wire 1 z! DstReg [2] $end
$var wire 1 {! DstReg [1] $end
$var wire 1 |! DstReg [0] $end
$var wire 1 O" WriteReg $end
$var wire 1 ?" DstData [15] $end
$var wire 1 @" DstData [14] $end
$var wire 1 A" DstData [13] $end
$var wire 1 B" DstData [12] $end
$var wire 1 C" DstData [11] $end
$var wire 1 D" DstData [10] $end
$var wire 1 E" DstData [9] $end
$var wire 1 F" DstData [8] $end
$var wire 1 G" DstData [7] $end
$var wire 1 H" DstData [6] $end
$var wire 1 I" DstData [5] $end
$var wire 1 J" DstData [4] $end
$var wire 1 K" DstData [3] $end
$var wire 1 L" DstData [2] $end
$var wire 1 M" DstData [1] $end
$var wire 1 N" DstData [0] $end
$var wire 1 }! SrcData1 [15] $end
$var wire 1 ~! SrcData1 [14] $end
$var wire 1 !" SrcData1 [13] $end
$var wire 1 "" SrcData1 [12] $end
$var wire 1 #" SrcData1 [11] $end
$var wire 1 $" SrcData1 [10] $end
$var wire 1 %" SrcData1 [9] $end
$var wire 1 &" SrcData1 [8] $end
$var wire 1 '" SrcData1 [7] $end
$var wire 1 (" SrcData1 [6] $end
$var wire 1 )" SrcData1 [5] $end
$var wire 1 *" SrcData1 [4] $end
$var wire 1 +" SrcData1 [3] $end
$var wire 1 ," SrcData1 [2] $end
$var wire 1 -" SrcData1 [1] $end
$var wire 1 ." SrcData1 [0] $end
$var wire 1 /" SrcData2 [15] $end
$var wire 1 0" SrcData2 [14] $end
$var wire 1 1" SrcData2 [13] $end
$var wire 1 2" SrcData2 [12] $end
$var wire 1 3" SrcData2 [11] $end
$var wire 1 4" SrcData2 [10] $end
$var wire 1 5" SrcData2 [9] $end
$var wire 1 6" SrcData2 [8] $end
$var wire 1 7" SrcData2 [7] $end
$var wire 1 8" SrcData2 [6] $end
$var wire 1 9" SrcData2 [5] $end
$var wire 1 :" SrcData2 [4] $end
$var wire 1 ;" SrcData2 [3] $end
$var wire 1 <" SrcData2 [2] $end
$var wire 1 =" SrcData2 [1] $end
$var wire 1 >" SrcData2 [0] $end
$var wire 1 O' WriteWordline [15] $end
$var wire 1 P' WriteWordline [14] $end
$var wire 1 Q' WriteWordline [13] $end
$var wire 1 R' WriteWordline [12] $end
$var wire 1 S' WriteWordline [11] $end
$var wire 1 T' WriteWordline [10] $end
$var wire 1 U' WriteWordline [9] $end
$var wire 1 V' WriteWordline [8] $end
$var wire 1 W' WriteWordline [7] $end
$var wire 1 X' WriteWordline [6] $end
$var wire 1 Y' WriteWordline [5] $end
$var wire 1 Z' WriteWordline [4] $end
$var wire 1 [' WriteWordline [3] $end
$var wire 1 \' WriteWordline [2] $end
$var wire 1 ]' WriteWordline [1] $end
$var wire 1 ^' WriteWordline [0] $end
$var wire 1 _' ReadWordline1 [15] $end
$var wire 1 `' ReadWordline1 [14] $end
$var wire 1 a' ReadWordline1 [13] $end
$var wire 1 b' ReadWordline1 [12] $end
$var wire 1 c' ReadWordline1 [11] $end
$var wire 1 d' ReadWordline1 [10] $end
$var wire 1 e' ReadWordline1 [9] $end
$var wire 1 f' ReadWordline1 [8] $end
$var wire 1 g' ReadWordline1 [7] $end
$var wire 1 h' ReadWordline1 [6] $end
$var wire 1 i' ReadWordline1 [5] $end
$var wire 1 j' ReadWordline1 [4] $end
$var wire 1 k' ReadWordline1 [3] $end
$var wire 1 l' ReadWordline1 [2] $end
$var wire 1 m' ReadWordline1 [1] $end
$var wire 1 n' ReadWordline1 [0] $end
$var wire 1 o' ReadWordline2 [15] $end
$var wire 1 p' ReadWordline2 [14] $end
$var wire 1 q' ReadWordline2 [13] $end
$var wire 1 r' ReadWordline2 [12] $end
$var wire 1 s' ReadWordline2 [11] $end
$var wire 1 t' ReadWordline2 [10] $end
$var wire 1 u' ReadWordline2 [9] $end
$var wire 1 v' ReadWordline2 [8] $end
$var wire 1 w' ReadWordline2 [7] $end
$var wire 1 x' ReadWordline2 [6] $end
$var wire 1 y' ReadWordline2 [5] $end
$var wire 1 z' ReadWordline2 [4] $end
$var wire 1 {' ReadWordline2 [3] $end
$var wire 1 |' ReadWordline2 [2] $end
$var wire 1 }' ReadWordline2 [1] $end
$var wire 1 ~' ReadWordline2 [0] $end
$var wire 1 !( Bitline1 [0] $end
$var wire 1 "( Bitline1 [1] $end
$var wire 1 #( Bitline1 [2] $end
$var wire 1 $( Bitline1 [3] $end
$var wire 1 %( Bitline1 [4] $end
$var wire 1 &( Bitline1 [5] $end
$var wire 1 '( Bitline1 [6] $end
$var wire 1 (( Bitline1 [7] $end
$var wire 1 )( Bitline1 [8] $end
$var wire 1 *( Bitline1 [9] $end
$var wire 1 +( Bitline1 [10] $end
$var wire 1 ,( Bitline1 [11] $end
$var wire 1 -( Bitline1 [12] $end
$var wire 1 .( Bitline1 [13] $end
$var wire 1 /( Bitline1 [14] $end
$var wire 1 0( Bitline1 [15] $end
$var wire 1 1( Bitline1 [16] $end
$var wire 1 2( Bitline1 [17] $end
$var wire 1 3( Bitline1 [18] $end
$var wire 1 4( Bitline1 [19] $end
$var wire 1 5( Bitline1 [20] $end
$var wire 1 6( Bitline1 [21] $end
$var wire 1 7( Bitline1 [22] $end
$var wire 1 8( Bitline1 [23] $end
$var wire 1 9( Bitline1 [24] $end
$var wire 1 :( Bitline1 [25] $end
$var wire 1 ;( Bitline1 [26] $end
$var wire 1 <( Bitline1 [27] $end
$var wire 1 =( Bitline1 [28] $end
$var wire 1 >( Bitline1 [29] $end
$var wire 1 ?( Bitline1 [30] $end
$var wire 1 @( Bitline1 [31] $end
$var wire 1 A( Bitline1 [32] $end
$var wire 1 B( Bitline1 [33] $end
$var wire 1 C( Bitline1 [34] $end
$var wire 1 D( Bitline1 [35] $end
$var wire 1 E( Bitline1 [36] $end
$var wire 1 F( Bitline1 [37] $end
$var wire 1 G( Bitline1 [38] $end
$var wire 1 H( Bitline1 [39] $end
$var wire 1 I( Bitline1 [40] $end
$var wire 1 J( Bitline1 [41] $end
$var wire 1 K( Bitline1 [42] $end
$var wire 1 L( Bitline1 [43] $end
$var wire 1 M( Bitline1 [44] $end
$var wire 1 N( Bitline1 [45] $end
$var wire 1 O( Bitline1 [46] $end
$var wire 1 P( Bitline1 [47] $end
$var wire 1 Q( Bitline1 [48] $end
$var wire 1 R( Bitline1 [49] $end
$var wire 1 S( Bitline1 [50] $end
$var wire 1 T( Bitline1 [51] $end
$var wire 1 U( Bitline1 [52] $end
$var wire 1 V( Bitline1 [53] $end
$var wire 1 W( Bitline1 [54] $end
$var wire 1 X( Bitline1 [55] $end
$var wire 1 Y( Bitline1 [56] $end
$var wire 1 Z( Bitline1 [57] $end
$var wire 1 [( Bitline1 [58] $end
$var wire 1 \( Bitline1 [59] $end
$var wire 1 ]( Bitline1 [60] $end
$var wire 1 ^( Bitline1 [61] $end
$var wire 1 _( Bitline1 [62] $end
$var wire 1 `( Bitline1 [63] $end
$var wire 1 a( Bitline1 [64] $end
$var wire 1 b( Bitline1 [65] $end
$var wire 1 c( Bitline1 [66] $end
$var wire 1 d( Bitline1 [67] $end
$var wire 1 e( Bitline1 [68] $end
$var wire 1 f( Bitline1 [69] $end
$var wire 1 g( Bitline1 [70] $end
$var wire 1 h( Bitline1 [71] $end
$var wire 1 i( Bitline1 [72] $end
$var wire 1 j( Bitline1 [73] $end
$var wire 1 k( Bitline1 [74] $end
$var wire 1 l( Bitline1 [75] $end
$var wire 1 m( Bitline1 [76] $end
$var wire 1 n( Bitline1 [77] $end
$var wire 1 o( Bitline1 [78] $end
$var wire 1 p( Bitline1 [79] $end
$var wire 1 q( Bitline1 [80] $end
$var wire 1 r( Bitline1 [81] $end
$var wire 1 s( Bitline1 [82] $end
$var wire 1 t( Bitline1 [83] $end
$var wire 1 u( Bitline1 [84] $end
$var wire 1 v( Bitline1 [85] $end
$var wire 1 w( Bitline1 [86] $end
$var wire 1 x( Bitline1 [87] $end
$var wire 1 y( Bitline1 [88] $end
$var wire 1 z( Bitline1 [89] $end
$var wire 1 {( Bitline1 [90] $end
$var wire 1 |( Bitline1 [91] $end
$var wire 1 }( Bitline1 [92] $end
$var wire 1 ~( Bitline1 [93] $end
$var wire 1 !) Bitline1 [94] $end
$var wire 1 ") Bitline1 [95] $end
$var wire 1 #) Bitline1 [96] $end
$var wire 1 $) Bitline1 [97] $end
$var wire 1 %) Bitline1 [98] $end
$var wire 1 &) Bitline1 [99] $end
$var wire 1 ') Bitline1 [100] $end
$var wire 1 () Bitline1 [101] $end
$var wire 1 )) Bitline1 [102] $end
$var wire 1 *) Bitline1 [103] $end
$var wire 1 +) Bitline1 [104] $end
$var wire 1 ,) Bitline1 [105] $end
$var wire 1 -) Bitline1 [106] $end
$var wire 1 .) Bitline1 [107] $end
$var wire 1 /) Bitline1 [108] $end
$var wire 1 0) Bitline1 [109] $end
$var wire 1 1) Bitline1 [110] $end
$var wire 1 2) Bitline1 [111] $end
$var wire 1 3) Bitline1 [112] $end
$var wire 1 4) Bitline1 [113] $end
$var wire 1 5) Bitline1 [114] $end
$var wire 1 6) Bitline1 [115] $end
$var wire 1 7) Bitline1 [116] $end
$var wire 1 8) Bitline1 [117] $end
$var wire 1 9) Bitline1 [118] $end
$var wire 1 :) Bitline1 [119] $end
$var wire 1 ;) Bitline1 [120] $end
$var wire 1 <) Bitline1 [121] $end
$var wire 1 =) Bitline1 [122] $end
$var wire 1 >) Bitline1 [123] $end
$var wire 1 ?) Bitline1 [124] $end
$var wire 1 @) Bitline1 [125] $end
$var wire 1 A) Bitline1 [126] $end
$var wire 1 B) Bitline1 [127] $end
$var wire 1 C) Bitline1 [128] $end
$var wire 1 D) Bitline1 [129] $end
$var wire 1 E) Bitline1 [130] $end
$var wire 1 F) Bitline1 [131] $end
$var wire 1 G) Bitline1 [132] $end
$var wire 1 H) Bitline1 [133] $end
$var wire 1 I) Bitline1 [134] $end
$var wire 1 J) Bitline1 [135] $end
$var wire 1 K) Bitline1 [136] $end
$var wire 1 L) Bitline1 [137] $end
$var wire 1 M) Bitline1 [138] $end
$var wire 1 N) Bitline1 [139] $end
$var wire 1 O) Bitline1 [140] $end
$var wire 1 P) Bitline1 [141] $end
$var wire 1 Q) Bitline1 [142] $end
$var wire 1 R) Bitline1 [143] $end
$var wire 1 S) Bitline1 [144] $end
$var wire 1 T) Bitline1 [145] $end
$var wire 1 U) Bitline1 [146] $end
$var wire 1 V) Bitline1 [147] $end
$var wire 1 W) Bitline1 [148] $end
$var wire 1 X) Bitline1 [149] $end
$var wire 1 Y) Bitline1 [150] $end
$var wire 1 Z) Bitline1 [151] $end
$var wire 1 [) Bitline1 [152] $end
$var wire 1 \) Bitline1 [153] $end
$var wire 1 ]) Bitline1 [154] $end
$var wire 1 ^) Bitline1 [155] $end
$var wire 1 _) Bitline1 [156] $end
$var wire 1 `) Bitline1 [157] $end
$var wire 1 a) Bitline1 [158] $end
$var wire 1 b) Bitline1 [159] $end
$var wire 1 c) Bitline1 [160] $end
$var wire 1 d) Bitline1 [161] $end
$var wire 1 e) Bitline1 [162] $end
$var wire 1 f) Bitline1 [163] $end
$var wire 1 g) Bitline1 [164] $end
$var wire 1 h) Bitline1 [165] $end
$var wire 1 i) Bitline1 [166] $end
$var wire 1 j) Bitline1 [167] $end
$var wire 1 k) Bitline1 [168] $end
$var wire 1 l) Bitline1 [169] $end
$var wire 1 m) Bitline1 [170] $end
$var wire 1 n) Bitline1 [171] $end
$var wire 1 o) Bitline1 [172] $end
$var wire 1 p) Bitline1 [173] $end
$var wire 1 q) Bitline1 [174] $end
$var wire 1 r) Bitline1 [175] $end
$var wire 1 s) Bitline1 [176] $end
$var wire 1 t) Bitline1 [177] $end
$var wire 1 u) Bitline1 [178] $end
$var wire 1 v) Bitline1 [179] $end
$var wire 1 w) Bitline1 [180] $end
$var wire 1 x) Bitline1 [181] $end
$var wire 1 y) Bitline1 [182] $end
$var wire 1 z) Bitline1 [183] $end
$var wire 1 {) Bitline1 [184] $end
$var wire 1 |) Bitline1 [185] $end
$var wire 1 }) Bitline1 [186] $end
$var wire 1 ~) Bitline1 [187] $end
$var wire 1 !* Bitline1 [188] $end
$var wire 1 "* Bitline1 [189] $end
$var wire 1 #* Bitline1 [190] $end
$var wire 1 $* Bitline1 [191] $end
$var wire 1 %* Bitline1 [192] $end
$var wire 1 &* Bitline1 [193] $end
$var wire 1 '* Bitline1 [194] $end
$var wire 1 (* Bitline1 [195] $end
$var wire 1 )* Bitline1 [196] $end
$var wire 1 ** Bitline1 [197] $end
$var wire 1 +* Bitline1 [198] $end
$var wire 1 ,* Bitline1 [199] $end
$var wire 1 -* Bitline1 [200] $end
$var wire 1 .* Bitline1 [201] $end
$var wire 1 /* Bitline1 [202] $end
$var wire 1 0* Bitline1 [203] $end
$var wire 1 1* Bitline1 [204] $end
$var wire 1 2* Bitline1 [205] $end
$var wire 1 3* Bitline1 [206] $end
$var wire 1 4* Bitline1 [207] $end
$var wire 1 5* Bitline1 [208] $end
$var wire 1 6* Bitline1 [209] $end
$var wire 1 7* Bitline1 [210] $end
$var wire 1 8* Bitline1 [211] $end
$var wire 1 9* Bitline1 [212] $end
$var wire 1 :* Bitline1 [213] $end
$var wire 1 ;* Bitline1 [214] $end
$var wire 1 <* Bitline1 [215] $end
$var wire 1 =* Bitline1 [216] $end
$var wire 1 >* Bitline1 [217] $end
$var wire 1 ?* Bitline1 [218] $end
$var wire 1 @* Bitline1 [219] $end
$var wire 1 A* Bitline1 [220] $end
$var wire 1 B* Bitline1 [221] $end
$var wire 1 C* Bitline1 [222] $end
$var wire 1 D* Bitline1 [223] $end
$var wire 1 E* Bitline1 [224] $end
$var wire 1 F* Bitline1 [225] $end
$var wire 1 G* Bitline1 [226] $end
$var wire 1 H* Bitline1 [227] $end
$var wire 1 I* Bitline1 [228] $end
$var wire 1 J* Bitline1 [229] $end
$var wire 1 K* Bitline1 [230] $end
$var wire 1 L* Bitline1 [231] $end
$var wire 1 M* Bitline1 [232] $end
$var wire 1 N* Bitline1 [233] $end
$var wire 1 O* Bitline1 [234] $end
$var wire 1 P* Bitline1 [235] $end
$var wire 1 Q* Bitline1 [236] $end
$var wire 1 R* Bitline1 [237] $end
$var wire 1 S* Bitline1 [238] $end
$var wire 1 T* Bitline1 [239] $end
$var wire 1 U* Bitline1 [240] $end
$var wire 1 V* Bitline1 [241] $end
$var wire 1 W* Bitline1 [242] $end
$var wire 1 X* Bitline1 [243] $end
$var wire 1 Y* Bitline1 [244] $end
$var wire 1 Z* Bitline1 [245] $end
$var wire 1 [* Bitline1 [246] $end
$var wire 1 \* Bitline1 [247] $end
$var wire 1 ]* Bitline1 [248] $end
$var wire 1 ^* Bitline1 [249] $end
$var wire 1 _* Bitline1 [250] $end
$var wire 1 `* Bitline1 [251] $end
$var wire 1 a* Bitline1 [252] $end
$var wire 1 b* Bitline1 [253] $end
$var wire 1 c* Bitline1 [254] $end
$var wire 1 d* Bitline1 [255] $end
$var wire 1 e* Bitline2 [0] $end
$var wire 1 f* Bitline2 [1] $end
$var wire 1 g* Bitline2 [2] $end
$var wire 1 h* Bitline2 [3] $end
$var wire 1 i* Bitline2 [4] $end
$var wire 1 j* Bitline2 [5] $end
$var wire 1 k* Bitline2 [6] $end
$var wire 1 l* Bitline2 [7] $end
$var wire 1 m* Bitline2 [8] $end
$var wire 1 n* Bitline2 [9] $end
$var wire 1 o* Bitline2 [10] $end
$var wire 1 p* Bitline2 [11] $end
$var wire 1 q* Bitline2 [12] $end
$var wire 1 r* Bitline2 [13] $end
$var wire 1 s* Bitline2 [14] $end
$var wire 1 t* Bitline2 [15] $end
$var wire 1 u* Bitline2 [16] $end
$var wire 1 v* Bitline2 [17] $end
$var wire 1 w* Bitline2 [18] $end
$var wire 1 x* Bitline2 [19] $end
$var wire 1 y* Bitline2 [20] $end
$var wire 1 z* Bitline2 [21] $end
$var wire 1 {* Bitline2 [22] $end
$var wire 1 |* Bitline2 [23] $end
$var wire 1 }* Bitline2 [24] $end
$var wire 1 ~* Bitline2 [25] $end
$var wire 1 !+ Bitline2 [26] $end
$var wire 1 "+ Bitline2 [27] $end
$var wire 1 #+ Bitline2 [28] $end
$var wire 1 $+ Bitline2 [29] $end
$var wire 1 %+ Bitline2 [30] $end
$var wire 1 &+ Bitline2 [31] $end
$var wire 1 '+ Bitline2 [32] $end
$var wire 1 (+ Bitline2 [33] $end
$var wire 1 )+ Bitline2 [34] $end
$var wire 1 *+ Bitline2 [35] $end
$var wire 1 ++ Bitline2 [36] $end
$var wire 1 ,+ Bitline2 [37] $end
$var wire 1 -+ Bitline2 [38] $end
$var wire 1 .+ Bitline2 [39] $end
$var wire 1 /+ Bitline2 [40] $end
$var wire 1 0+ Bitline2 [41] $end
$var wire 1 1+ Bitline2 [42] $end
$var wire 1 2+ Bitline2 [43] $end
$var wire 1 3+ Bitline2 [44] $end
$var wire 1 4+ Bitline2 [45] $end
$var wire 1 5+ Bitline2 [46] $end
$var wire 1 6+ Bitline2 [47] $end
$var wire 1 7+ Bitline2 [48] $end
$var wire 1 8+ Bitline2 [49] $end
$var wire 1 9+ Bitline2 [50] $end
$var wire 1 :+ Bitline2 [51] $end
$var wire 1 ;+ Bitline2 [52] $end
$var wire 1 <+ Bitline2 [53] $end
$var wire 1 =+ Bitline2 [54] $end
$var wire 1 >+ Bitline2 [55] $end
$var wire 1 ?+ Bitline2 [56] $end
$var wire 1 @+ Bitline2 [57] $end
$var wire 1 A+ Bitline2 [58] $end
$var wire 1 B+ Bitline2 [59] $end
$var wire 1 C+ Bitline2 [60] $end
$var wire 1 D+ Bitline2 [61] $end
$var wire 1 E+ Bitline2 [62] $end
$var wire 1 F+ Bitline2 [63] $end
$var wire 1 G+ Bitline2 [64] $end
$var wire 1 H+ Bitline2 [65] $end
$var wire 1 I+ Bitline2 [66] $end
$var wire 1 J+ Bitline2 [67] $end
$var wire 1 K+ Bitline2 [68] $end
$var wire 1 L+ Bitline2 [69] $end
$var wire 1 M+ Bitline2 [70] $end
$var wire 1 N+ Bitline2 [71] $end
$var wire 1 O+ Bitline2 [72] $end
$var wire 1 P+ Bitline2 [73] $end
$var wire 1 Q+ Bitline2 [74] $end
$var wire 1 R+ Bitline2 [75] $end
$var wire 1 S+ Bitline2 [76] $end
$var wire 1 T+ Bitline2 [77] $end
$var wire 1 U+ Bitline2 [78] $end
$var wire 1 V+ Bitline2 [79] $end
$var wire 1 W+ Bitline2 [80] $end
$var wire 1 X+ Bitline2 [81] $end
$var wire 1 Y+ Bitline2 [82] $end
$var wire 1 Z+ Bitline2 [83] $end
$var wire 1 [+ Bitline2 [84] $end
$var wire 1 \+ Bitline2 [85] $end
$var wire 1 ]+ Bitline2 [86] $end
$var wire 1 ^+ Bitline2 [87] $end
$var wire 1 _+ Bitline2 [88] $end
$var wire 1 `+ Bitline2 [89] $end
$var wire 1 a+ Bitline2 [90] $end
$var wire 1 b+ Bitline2 [91] $end
$var wire 1 c+ Bitline2 [92] $end
$var wire 1 d+ Bitline2 [93] $end
$var wire 1 e+ Bitline2 [94] $end
$var wire 1 f+ Bitline2 [95] $end
$var wire 1 g+ Bitline2 [96] $end
$var wire 1 h+ Bitline2 [97] $end
$var wire 1 i+ Bitline2 [98] $end
$var wire 1 j+ Bitline2 [99] $end
$var wire 1 k+ Bitline2 [100] $end
$var wire 1 l+ Bitline2 [101] $end
$var wire 1 m+ Bitline2 [102] $end
$var wire 1 n+ Bitline2 [103] $end
$var wire 1 o+ Bitline2 [104] $end
$var wire 1 p+ Bitline2 [105] $end
$var wire 1 q+ Bitline2 [106] $end
$var wire 1 r+ Bitline2 [107] $end
$var wire 1 s+ Bitline2 [108] $end
$var wire 1 t+ Bitline2 [109] $end
$var wire 1 u+ Bitline2 [110] $end
$var wire 1 v+ Bitline2 [111] $end
$var wire 1 w+ Bitline2 [112] $end
$var wire 1 x+ Bitline2 [113] $end
$var wire 1 y+ Bitline2 [114] $end
$var wire 1 z+ Bitline2 [115] $end
$var wire 1 {+ Bitline2 [116] $end
$var wire 1 |+ Bitline2 [117] $end
$var wire 1 }+ Bitline2 [118] $end
$var wire 1 ~+ Bitline2 [119] $end
$var wire 1 !, Bitline2 [120] $end
$var wire 1 ", Bitline2 [121] $end
$var wire 1 #, Bitline2 [122] $end
$var wire 1 $, Bitline2 [123] $end
$var wire 1 %, Bitline2 [124] $end
$var wire 1 &, Bitline2 [125] $end
$var wire 1 ', Bitline2 [126] $end
$var wire 1 (, Bitline2 [127] $end
$var wire 1 ), Bitline2 [128] $end
$var wire 1 *, Bitline2 [129] $end
$var wire 1 +, Bitline2 [130] $end
$var wire 1 ,, Bitline2 [131] $end
$var wire 1 -, Bitline2 [132] $end
$var wire 1 ., Bitline2 [133] $end
$var wire 1 /, Bitline2 [134] $end
$var wire 1 0, Bitline2 [135] $end
$var wire 1 1, Bitline2 [136] $end
$var wire 1 2, Bitline2 [137] $end
$var wire 1 3, Bitline2 [138] $end
$var wire 1 4, Bitline2 [139] $end
$var wire 1 5, Bitline2 [140] $end
$var wire 1 6, Bitline2 [141] $end
$var wire 1 7, Bitline2 [142] $end
$var wire 1 8, Bitline2 [143] $end
$var wire 1 9, Bitline2 [144] $end
$var wire 1 :, Bitline2 [145] $end
$var wire 1 ;, Bitline2 [146] $end
$var wire 1 <, Bitline2 [147] $end
$var wire 1 =, Bitline2 [148] $end
$var wire 1 >, Bitline2 [149] $end
$var wire 1 ?, Bitline2 [150] $end
$var wire 1 @, Bitline2 [151] $end
$var wire 1 A, Bitline2 [152] $end
$var wire 1 B, Bitline2 [153] $end
$var wire 1 C, Bitline2 [154] $end
$var wire 1 D, Bitline2 [155] $end
$var wire 1 E, Bitline2 [156] $end
$var wire 1 F, Bitline2 [157] $end
$var wire 1 G, Bitline2 [158] $end
$var wire 1 H, Bitline2 [159] $end
$var wire 1 I, Bitline2 [160] $end
$var wire 1 J, Bitline2 [161] $end
$var wire 1 K, Bitline2 [162] $end
$var wire 1 L, Bitline2 [163] $end
$var wire 1 M, Bitline2 [164] $end
$var wire 1 N, Bitline2 [165] $end
$var wire 1 O, Bitline2 [166] $end
$var wire 1 P, Bitline2 [167] $end
$var wire 1 Q, Bitline2 [168] $end
$var wire 1 R, Bitline2 [169] $end
$var wire 1 S, Bitline2 [170] $end
$var wire 1 T, Bitline2 [171] $end
$var wire 1 U, Bitline2 [172] $end
$var wire 1 V, Bitline2 [173] $end
$var wire 1 W, Bitline2 [174] $end
$var wire 1 X, Bitline2 [175] $end
$var wire 1 Y, Bitline2 [176] $end
$var wire 1 Z, Bitline2 [177] $end
$var wire 1 [, Bitline2 [178] $end
$var wire 1 \, Bitline2 [179] $end
$var wire 1 ], Bitline2 [180] $end
$var wire 1 ^, Bitline2 [181] $end
$var wire 1 _, Bitline2 [182] $end
$var wire 1 `, Bitline2 [183] $end
$var wire 1 a, Bitline2 [184] $end
$var wire 1 b, Bitline2 [185] $end
$var wire 1 c, Bitline2 [186] $end
$var wire 1 d, Bitline2 [187] $end
$var wire 1 e, Bitline2 [188] $end
$var wire 1 f, Bitline2 [189] $end
$var wire 1 g, Bitline2 [190] $end
$var wire 1 h, Bitline2 [191] $end
$var wire 1 i, Bitline2 [192] $end
$var wire 1 j, Bitline2 [193] $end
$var wire 1 k, Bitline2 [194] $end
$var wire 1 l, Bitline2 [195] $end
$var wire 1 m, Bitline2 [196] $end
$var wire 1 n, Bitline2 [197] $end
$var wire 1 o, Bitline2 [198] $end
$var wire 1 p, Bitline2 [199] $end
$var wire 1 q, Bitline2 [200] $end
$var wire 1 r, Bitline2 [201] $end
$var wire 1 s, Bitline2 [202] $end
$var wire 1 t, Bitline2 [203] $end
$var wire 1 u, Bitline2 [204] $end
$var wire 1 v, Bitline2 [205] $end
$var wire 1 w, Bitline2 [206] $end
$var wire 1 x, Bitline2 [207] $end
$var wire 1 y, Bitline2 [208] $end
$var wire 1 z, Bitline2 [209] $end
$var wire 1 {, Bitline2 [210] $end
$var wire 1 |, Bitline2 [211] $end
$var wire 1 }, Bitline2 [212] $end
$var wire 1 ~, Bitline2 [213] $end
$var wire 1 !- Bitline2 [214] $end
$var wire 1 "- Bitline2 [215] $end
$var wire 1 #- Bitline2 [216] $end
$var wire 1 $- Bitline2 [217] $end
$var wire 1 %- Bitline2 [218] $end
$var wire 1 &- Bitline2 [219] $end
$var wire 1 '- Bitline2 [220] $end
$var wire 1 (- Bitline2 [221] $end
$var wire 1 )- Bitline2 [222] $end
$var wire 1 *- Bitline2 [223] $end
$var wire 1 +- Bitline2 [224] $end
$var wire 1 ,- Bitline2 [225] $end
$var wire 1 -- Bitline2 [226] $end
$var wire 1 .- Bitline2 [227] $end
$var wire 1 /- Bitline2 [228] $end
$var wire 1 0- Bitline2 [229] $end
$var wire 1 1- Bitline2 [230] $end
$var wire 1 2- Bitline2 [231] $end
$var wire 1 3- Bitline2 [232] $end
$var wire 1 4- Bitline2 [233] $end
$var wire 1 5- Bitline2 [234] $end
$var wire 1 6- Bitline2 [235] $end
$var wire 1 7- Bitline2 [236] $end
$var wire 1 8- Bitline2 [237] $end
$var wire 1 9- Bitline2 [238] $end
$var wire 1 :- Bitline2 [239] $end
$var wire 1 ;- Bitline2 [240] $end
$var wire 1 <- Bitline2 [241] $end
$var wire 1 =- Bitline2 [242] $end
$var wire 1 >- Bitline2 [243] $end
$var wire 1 ?- Bitline2 [244] $end
$var wire 1 @- Bitline2 [245] $end
$var wire 1 A- Bitline2 [246] $end
$var wire 1 B- Bitline2 [247] $end
$var wire 1 C- Bitline2 [248] $end
$var wire 1 D- Bitline2 [249] $end
$var wire 1 E- Bitline2 [250] $end
$var wire 1 F- Bitline2 [251] $end
$var wire 1 G- Bitline2 [252] $end
$var wire 1 H- Bitline2 [253] $end
$var wire 1 I- Bitline2 [254] $end
$var wire 1 J- Bitline2 [255] $end
$var wire 1 K- Bitline_all1 [15] $end
$var wire 1 L- Bitline_all1 [14] $end
$var wire 1 M- Bitline_all1 [13] $end
$var wire 1 N- Bitline_all1 [12] $end
$var wire 1 O- Bitline_all1 [11] $end
$var wire 1 P- Bitline_all1 [10] $end
$var wire 1 Q- Bitline_all1 [9] $end
$var wire 1 R- Bitline_all1 [8] $end
$var wire 1 S- Bitline_all1 [7] $end
$var wire 1 T- Bitline_all1 [6] $end
$var wire 1 U- Bitline_all1 [5] $end
$var wire 1 V- Bitline_all1 [4] $end
$var wire 1 W- Bitline_all1 [3] $end
$var wire 1 X- Bitline_all1 [2] $end
$var wire 1 Y- Bitline_all1 [1] $end
$var wire 1 Z- Bitline_all1 [0] $end
$var wire 1 [- Bitline_all2 [15] $end
$var wire 1 \- Bitline_all2 [14] $end
$var wire 1 ]- Bitline_all2 [13] $end
$var wire 1 ^- Bitline_all2 [12] $end
$var wire 1 _- Bitline_all2 [11] $end
$var wire 1 `- Bitline_all2 [10] $end
$var wire 1 a- Bitline_all2 [9] $end
$var wire 1 b- Bitline_all2 [8] $end
$var wire 1 c- Bitline_all2 [7] $end
$var wire 1 d- Bitline_all2 [6] $end
$var wire 1 e- Bitline_all2 [5] $end
$var wire 1 f- Bitline_all2 [4] $end
$var wire 1 g- Bitline_all2 [3] $end
$var wire 1 h- Bitline_all2 [2] $end
$var wire 1 i- Bitline_all2 [1] $end
$var wire 1 j- Bitline_all2 [0] $end

$scope module rd1 $end
$var wire 1 q! RegId [3] $end
$var wire 1 r! RegId [2] $end
$var wire 1 s! RegId [1] $end
$var wire 1 t! RegId [0] $end
$var wire 1 _' Wordline [15] $end
$var wire 1 `' Wordline [14] $end
$var wire 1 a' Wordline [13] $end
$var wire 1 b' Wordline [12] $end
$var wire 1 c' Wordline [11] $end
$var wire 1 d' Wordline [10] $end
$var wire 1 e' Wordline [9] $end
$var wire 1 f' Wordline [8] $end
$var wire 1 g' Wordline [7] $end
$var wire 1 h' Wordline [6] $end
$var wire 1 i' Wordline [5] $end
$var wire 1 j' Wordline [4] $end
$var wire 1 k' Wordline [3] $end
$var wire 1 l' Wordline [2] $end
$var wire 1 m' Wordline [1] $end
$var wire 1 n' Wordline [0] $end
$upscope $end

$scope module rd2 $end
$var wire 1 u! RegId [3] $end
$var wire 1 v! RegId [2] $end
$var wire 1 w! RegId [1] $end
$var wire 1 x! RegId [0] $end
$var wire 1 o' Wordline [15] $end
$var wire 1 p' Wordline [14] $end
$var wire 1 q' Wordline [13] $end
$var wire 1 r' Wordline [12] $end
$var wire 1 s' Wordline [11] $end
$var wire 1 t' Wordline [10] $end
$var wire 1 u' Wordline [9] $end
$var wire 1 v' Wordline [8] $end
$var wire 1 w' Wordline [7] $end
$var wire 1 x' Wordline [6] $end
$var wire 1 y' Wordline [5] $end
$var wire 1 z' Wordline [4] $end
$var wire 1 {' Wordline [3] $end
$var wire 1 |' Wordline [2] $end
$var wire 1 }' Wordline [1] $end
$var wire 1 ~' Wordline [0] $end
$upscope $end

$scope module wd $end
$var wire 1 y! RegId [3] $end
$var wire 1 z! RegId [2] $end
$var wire 1 {! RegId [1] $end
$var wire 1 |! RegId [0] $end
$var wire 1 O" WriteReg $end
$var wire 1 O' Wordline [15] $end
$var wire 1 P' Wordline [14] $end
$var wire 1 Q' Wordline [13] $end
$var wire 1 R' Wordline [12] $end
$var wire 1 S' Wordline [11] $end
$var wire 1 T' Wordline [10] $end
$var wire 1 U' Wordline [9] $end
$var wire 1 V' Wordline [8] $end
$var wire 1 W' Wordline [7] $end
$var wire 1 X' Wordline [6] $end
$var wire 1 Y' Wordline [5] $end
$var wire 1 Z' Wordline [4] $end
$var wire 1 [' Wordline [3] $end
$var wire 1 \' Wordline [2] $end
$var wire 1 ]' Wordline [1] $end
$var wire 1 ^' Wordline [0] $end
$upscope $end

$scope module reg_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 k- D [15] $end
$var wire 1 l- D [14] $end
$var wire 1 m- D [13] $end
$var wire 1 n- D [12] $end
$var wire 1 o- D [11] $end
$var wire 1 p- D [10] $end
$var wire 1 q- D [9] $end
$var wire 1 r- D [8] $end
$var wire 1 s- D [7] $end
$var wire 1 t- D [6] $end
$var wire 1 u- D [5] $end
$var wire 1 v- D [4] $end
$var wire 1 w- D [3] $end
$var wire 1 x- D [2] $end
$var wire 1 y- D [1] $end
$var wire 1 z- D [0] $end
$var wire 1 {- WriteReg $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 d* Bitline1 [15] $end
$var wire 1 c* Bitline1 [14] $end
$var wire 1 b* Bitline1 [13] $end
$var wire 1 a* Bitline1 [12] $end
$var wire 1 `* Bitline1 [11] $end
$var wire 1 _* Bitline1 [10] $end
$var wire 1 ^* Bitline1 [9] $end
$var wire 1 ]* Bitline1 [8] $end
$var wire 1 \* Bitline1 [7] $end
$var wire 1 [* Bitline1 [6] $end
$var wire 1 Z* Bitline1 [5] $end
$var wire 1 Y* Bitline1 [4] $end
$var wire 1 X* Bitline1 [3] $end
$var wire 1 W* Bitline1 [2] $end
$var wire 1 V* Bitline1 [1] $end
$var wire 1 U* Bitline1 [0] $end
$var wire 1 J- Bitline2 [15] $end
$var wire 1 I- Bitline2 [14] $end
$var wire 1 H- Bitline2 [13] $end
$var wire 1 G- Bitline2 [12] $end
$var wire 1 F- Bitline2 [11] $end
$var wire 1 E- Bitline2 [10] $end
$var wire 1 D- Bitline2 [9] $end
$var wire 1 C- Bitline2 [8] $end
$var wire 1 B- Bitline2 [7] $end
$var wire 1 A- Bitline2 [6] $end
$var wire 1 @- Bitline2 [5] $end
$var wire 1 ?- Bitline2 [4] $end
$var wire 1 >- Bitline2 [3] $end
$var wire 1 =- Bitline2 [2] $end
$var wire 1 <- Bitline2 [1] $end
$var wire 1 ;- Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 z- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 U* Bitline1 $end
$var wire 1 ;- Bitline2 $end
$var wire 1 |- q $end

$scope module ff $end
$var wire 1 |- q $end
$var wire 1 z- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }- state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 y- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 V* Bitline1 $end
$var wire 1 <- Bitline2 $end
$var wire 1 ~- q $end

$scope module ff $end
$var wire 1 ~- q $end
$var wire 1 y- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !. state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 x- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 W* Bitline1 $end
$var wire 1 =- Bitline2 $end
$var wire 1 ". q $end

$scope module ff $end
$var wire 1 ". q $end
$var wire 1 x- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #. state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 w- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 X* Bitline1 $end
$var wire 1 >- Bitline2 $end
$var wire 1 $. q $end

$scope module ff $end
$var wire 1 $. q $end
$var wire 1 w- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %. state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 v- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 Y* Bitline1 $end
$var wire 1 ?- Bitline2 $end
$var wire 1 &. q $end

$scope module ff $end
$var wire 1 &. q $end
$var wire 1 v- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '. state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 u- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 Z* Bitline1 $end
$var wire 1 @- Bitline2 $end
$var wire 1 (. q $end

$scope module ff $end
$var wire 1 (. q $end
$var wire 1 u- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ). state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 t- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 [* Bitline1 $end
$var wire 1 A- Bitline2 $end
$var wire 1 *. q $end

$scope module ff $end
$var wire 1 *. q $end
$var wire 1 t- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +. state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 s- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 \* Bitline1 $end
$var wire 1 B- Bitline2 $end
$var wire 1 ,. q $end

$scope module ff $end
$var wire 1 ,. q $end
$var wire 1 s- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -. state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 r- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 ]* Bitline1 $end
$var wire 1 C- Bitline2 $end
$var wire 1 .. q $end

$scope module ff $end
$var wire 1 .. q $end
$var wire 1 r- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 /. state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 q- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 ^* Bitline1 $end
$var wire 1 D- Bitline2 $end
$var wire 1 0. q $end

$scope module ff $end
$var wire 1 0. q $end
$var wire 1 q- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 1. state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 p- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 _* Bitline1 $end
$var wire 1 E- Bitline2 $end
$var wire 1 2. q $end

$scope module ff $end
$var wire 1 2. q $end
$var wire 1 p- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 3. state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 o- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 `* Bitline1 $end
$var wire 1 F- Bitline2 $end
$var wire 1 4. q $end

$scope module ff $end
$var wire 1 4. q $end
$var wire 1 o- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 5. state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 n- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 a* Bitline1 $end
$var wire 1 G- Bitline2 $end
$var wire 1 6. q $end

$scope module ff $end
$var wire 1 6. q $end
$var wire 1 n- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 7. state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 m- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 b* Bitline1 $end
$var wire 1 H- Bitline2 $end
$var wire 1 8. q $end

$scope module ff $end
$var wire 1 8. q $end
$var wire 1 m- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 9. state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 l- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 c* Bitline1 $end
$var wire 1 I- Bitline2 $end
$var wire 1 :. q $end

$scope module ff $end
$var wire 1 :. q $end
$var wire 1 l- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;. state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 k- D $end
$var wire 1 {- WriteEnable $end
$var wire 1 n' ReadEnable1 $end
$var wire 1 ~' ReadEnable2 $end
$var wire 1 d* Bitline1 $end
$var wire 1 J- Bitline2 $end
$var wire 1 <. q $end

$scope module ff $end
$var wire 1 <. q $end
$var wire 1 k- d $end
$var wire 1 {- wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =. state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 ]' WriteReg $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 T* Bitline1 [15] $end
$var wire 1 S* Bitline1 [14] $end
$var wire 1 R* Bitline1 [13] $end
$var wire 1 Q* Bitline1 [12] $end
$var wire 1 P* Bitline1 [11] $end
$var wire 1 O* Bitline1 [10] $end
$var wire 1 N* Bitline1 [9] $end
$var wire 1 M* Bitline1 [8] $end
$var wire 1 L* Bitline1 [7] $end
$var wire 1 K* Bitline1 [6] $end
$var wire 1 J* Bitline1 [5] $end
$var wire 1 I* Bitline1 [4] $end
$var wire 1 H* Bitline1 [3] $end
$var wire 1 G* Bitline1 [2] $end
$var wire 1 F* Bitline1 [1] $end
$var wire 1 E* Bitline1 [0] $end
$var wire 1 :- Bitline2 [15] $end
$var wire 1 9- Bitline2 [14] $end
$var wire 1 8- Bitline2 [13] $end
$var wire 1 7- Bitline2 [12] $end
$var wire 1 6- Bitline2 [11] $end
$var wire 1 5- Bitline2 [10] $end
$var wire 1 4- Bitline2 [9] $end
$var wire 1 3- Bitline2 [8] $end
$var wire 1 2- Bitline2 [7] $end
$var wire 1 1- Bitline2 [6] $end
$var wire 1 0- Bitline2 [5] $end
$var wire 1 /- Bitline2 [4] $end
$var wire 1 .- Bitline2 [3] $end
$var wire 1 -- Bitline2 [2] $end
$var wire 1 ,- Bitline2 [1] $end
$var wire 1 +- Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 E* Bitline1 $end
$var wire 1 +- Bitline2 $end
$var wire 1 >. q $end

$scope module ff $end
$var wire 1 >. q $end
$var wire 1 N" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?. state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 F* Bitline1 $end
$var wire 1 ,- Bitline2 $end
$var wire 1 @. q $end

$scope module ff $end
$var wire 1 @. q $end
$var wire 1 M" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A. state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 G* Bitline1 $end
$var wire 1 -- Bitline2 $end
$var wire 1 B. q $end

$scope module ff $end
$var wire 1 B. q $end
$var wire 1 L" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C. state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 H* Bitline1 $end
$var wire 1 .- Bitline2 $end
$var wire 1 D. q $end

$scope module ff $end
$var wire 1 D. q $end
$var wire 1 K" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E. state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 I* Bitline1 $end
$var wire 1 /- Bitline2 $end
$var wire 1 F. q $end

$scope module ff $end
$var wire 1 F. q $end
$var wire 1 J" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G. state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 J* Bitline1 $end
$var wire 1 0- Bitline2 $end
$var wire 1 H. q $end

$scope module ff $end
$var wire 1 H. q $end
$var wire 1 I" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 I. state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 K* Bitline1 $end
$var wire 1 1- Bitline2 $end
$var wire 1 J. q $end

$scope module ff $end
$var wire 1 J. q $end
$var wire 1 H" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 K. state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 L* Bitline1 $end
$var wire 1 2- Bitline2 $end
$var wire 1 L. q $end

$scope module ff $end
$var wire 1 L. q $end
$var wire 1 G" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 M. state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 M* Bitline1 $end
$var wire 1 3- Bitline2 $end
$var wire 1 N. q $end

$scope module ff $end
$var wire 1 N. q $end
$var wire 1 F" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 O. state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 N* Bitline1 $end
$var wire 1 4- Bitline2 $end
$var wire 1 P. q $end

$scope module ff $end
$var wire 1 P. q $end
$var wire 1 E" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Q. state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 O* Bitline1 $end
$var wire 1 5- Bitline2 $end
$var wire 1 R. q $end

$scope module ff $end
$var wire 1 R. q $end
$var wire 1 D" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 S. state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 P* Bitline1 $end
$var wire 1 6- Bitline2 $end
$var wire 1 T. q $end

$scope module ff $end
$var wire 1 T. q $end
$var wire 1 C" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 U. state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 Q* Bitline1 $end
$var wire 1 7- Bitline2 $end
$var wire 1 V. q $end

$scope module ff $end
$var wire 1 V. q $end
$var wire 1 B" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 W. state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 R* Bitline1 $end
$var wire 1 8- Bitline2 $end
$var wire 1 X. q $end

$scope module ff $end
$var wire 1 X. q $end
$var wire 1 A" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Y. state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 S* Bitline1 $end
$var wire 1 9- Bitline2 $end
$var wire 1 Z. q $end

$scope module ff $end
$var wire 1 Z. q $end
$var wire 1 @" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 [. state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 ]' WriteEnable $end
$var wire 1 m' ReadEnable1 $end
$var wire 1 }' ReadEnable2 $end
$var wire 1 T* Bitline1 $end
$var wire 1 :- Bitline2 $end
$var wire 1 \. q $end

$scope module ff $end
$var wire 1 \. q $end
$var wire 1 ?" d $end
$var wire 1 ]' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ]. state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 \' WriteReg $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 D* Bitline1 [15] $end
$var wire 1 C* Bitline1 [14] $end
$var wire 1 B* Bitline1 [13] $end
$var wire 1 A* Bitline1 [12] $end
$var wire 1 @* Bitline1 [11] $end
$var wire 1 ?* Bitline1 [10] $end
$var wire 1 >* Bitline1 [9] $end
$var wire 1 =* Bitline1 [8] $end
$var wire 1 <* Bitline1 [7] $end
$var wire 1 ;* Bitline1 [6] $end
$var wire 1 :* Bitline1 [5] $end
$var wire 1 9* Bitline1 [4] $end
$var wire 1 8* Bitline1 [3] $end
$var wire 1 7* Bitline1 [2] $end
$var wire 1 6* Bitline1 [1] $end
$var wire 1 5* Bitline1 [0] $end
$var wire 1 *- Bitline2 [15] $end
$var wire 1 )- Bitline2 [14] $end
$var wire 1 (- Bitline2 [13] $end
$var wire 1 '- Bitline2 [12] $end
$var wire 1 &- Bitline2 [11] $end
$var wire 1 %- Bitline2 [10] $end
$var wire 1 $- Bitline2 [9] $end
$var wire 1 #- Bitline2 [8] $end
$var wire 1 "- Bitline2 [7] $end
$var wire 1 !- Bitline2 [6] $end
$var wire 1 ~, Bitline2 [5] $end
$var wire 1 }, Bitline2 [4] $end
$var wire 1 |, Bitline2 [3] $end
$var wire 1 {, Bitline2 [2] $end
$var wire 1 z, Bitline2 [1] $end
$var wire 1 y, Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 5* Bitline1 $end
$var wire 1 y, Bitline2 $end
$var wire 1 ^. q $end

$scope module ff $end
$var wire 1 ^. q $end
$var wire 1 N" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 _. state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 6* Bitline1 $end
$var wire 1 z, Bitline2 $end
$var wire 1 `. q $end

$scope module ff $end
$var wire 1 `. q $end
$var wire 1 M" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 a. state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 7* Bitline1 $end
$var wire 1 {, Bitline2 $end
$var wire 1 b. q $end

$scope module ff $end
$var wire 1 b. q $end
$var wire 1 L" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c. state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 8* Bitline1 $end
$var wire 1 |, Bitline2 $end
$var wire 1 d. q $end

$scope module ff $end
$var wire 1 d. q $end
$var wire 1 K" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e. state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 9* Bitline1 $end
$var wire 1 }, Bitline2 $end
$var wire 1 f. q $end

$scope module ff $end
$var wire 1 f. q $end
$var wire 1 J" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g. state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 :* Bitline1 $end
$var wire 1 ~, Bitline2 $end
$var wire 1 h. q $end

$scope module ff $end
$var wire 1 h. q $end
$var wire 1 I" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i. state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 ;* Bitline1 $end
$var wire 1 !- Bitline2 $end
$var wire 1 j. q $end

$scope module ff $end
$var wire 1 j. q $end
$var wire 1 H" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k. state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 <* Bitline1 $end
$var wire 1 "- Bitline2 $end
$var wire 1 l. q $end

$scope module ff $end
$var wire 1 l. q $end
$var wire 1 G" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m. state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 =* Bitline1 $end
$var wire 1 #- Bitline2 $end
$var wire 1 n. q $end

$scope module ff $end
$var wire 1 n. q $end
$var wire 1 F" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o. state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 >* Bitline1 $end
$var wire 1 $- Bitline2 $end
$var wire 1 p. q $end

$scope module ff $end
$var wire 1 p. q $end
$var wire 1 E" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q. state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 ?* Bitline1 $end
$var wire 1 %- Bitline2 $end
$var wire 1 r. q $end

$scope module ff $end
$var wire 1 r. q $end
$var wire 1 D" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s. state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 @* Bitline1 $end
$var wire 1 &- Bitline2 $end
$var wire 1 t. q $end

$scope module ff $end
$var wire 1 t. q $end
$var wire 1 C" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u. state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 A* Bitline1 $end
$var wire 1 '- Bitline2 $end
$var wire 1 v. q $end

$scope module ff $end
$var wire 1 v. q $end
$var wire 1 B" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w. state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 B* Bitline1 $end
$var wire 1 (- Bitline2 $end
$var wire 1 x. q $end

$scope module ff $end
$var wire 1 x. q $end
$var wire 1 A" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y. state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 C* Bitline1 $end
$var wire 1 )- Bitline2 $end
$var wire 1 z. q $end

$scope module ff $end
$var wire 1 z. q $end
$var wire 1 @" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {. state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 \' WriteEnable $end
$var wire 1 l' ReadEnable1 $end
$var wire 1 |' ReadEnable2 $end
$var wire 1 D* Bitline1 $end
$var wire 1 *- Bitline2 $end
$var wire 1 |. q $end

$scope module ff $end
$var wire 1 |. q $end
$var wire 1 ?" d $end
$var wire 1 \' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }. state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 [' WriteReg $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 4* Bitline1 [15] $end
$var wire 1 3* Bitline1 [14] $end
$var wire 1 2* Bitline1 [13] $end
$var wire 1 1* Bitline1 [12] $end
$var wire 1 0* Bitline1 [11] $end
$var wire 1 /* Bitline1 [10] $end
$var wire 1 .* Bitline1 [9] $end
$var wire 1 -* Bitline1 [8] $end
$var wire 1 ,* Bitline1 [7] $end
$var wire 1 +* Bitline1 [6] $end
$var wire 1 ** Bitline1 [5] $end
$var wire 1 )* Bitline1 [4] $end
$var wire 1 (* Bitline1 [3] $end
$var wire 1 '* Bitline1 [2] $end
$var wire 1 &* Bitline1 [1] $end
$var wire 1 %* Bitline1 [0] $end
$var wire 1 x, Bitline2 [15] $end
$var wire 1 w, Bitline2 [14] $end
$var wire 1 v, Bitline2 [13] $end
$var wire 1 u, Bitline2 [12] $end
$var wire 1 t, Bitline2 [11] $end
$var wire 1 s, Bitline2 [10] $end
$var wire 1 r, Bitline2 [9] $end
$var wire 1 q, Bitline2 [8] $end
$var wire 1 p, Bitline2 [7] $end
$var wire 1 o, Bitline2 [6] $end
$var wire 1 n, Bitline2 [5] $end
$var wire 1 m, Bitline2 [4] $end
$var wire 1 l, Bitline2 [3] $end
$var wire 1 k, Bitline2 [2] $end
$var wire 1 j, Bitline2 [1] $end
$var wire 1 i, Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 %* Bitline1 $end
$var wire 1 i, Bitline2 $end
$var wire 1 ~. q $end

$scope module ff $end
$var wire 1 ~. q $end
$var wire 1 N" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !/ state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 &* Bitline1 $end
$var wire 1 j, Bitline2 $end
$var wire 1 "/ q $end

$scope module ff $end
$var wire 1 "/ q $end
$var wire 1 M" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #/ state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 '* Bitline1 $end
$var wire 1 k, Bitline2 $end
$var wire 1 $/ q $end

$scope module ff $end
$var wire 1 $/ q $end
$var wire 1 L" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %/ state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 (* Bitline1 $end
$var wire 1 l, Bitline2 $end
$var wire 1 &/ q $end

$scope module ff $end
$var wire 1 &/ q $end
$var wire 1 K" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '/ state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 )* Bitline1 $end
$var wire 1 m, Bitline2 $end
$var wire 1 (/ q $end

$scope module ff $end
$var wire 1 (/ q $end
$var wire 1 J" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 )/ state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 ** Bitline1 $end
$var wire 1 n, Bitline2 $end
$var wire 1 */ q $end

$scope module ff $end
$var wire 1 */ q $end
$var wire 1 I" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +/ state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 +* Bitline1 $end
$var wire 1 o, Bitline2 $end
$var wire 1 ,/ q $end

$scope module ff $end
$var wire 1 ,/ q $end
$var wire 1 H" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -/ state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 ,* Bitline1 $end
$var wire 1 p, Bitline2 $end
$var wire 1 ./ q $end

$scope module ff $end
$var wire 1 ./ q $end
$var wire 1 G" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 // state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 -* Bitline1 $end
$var wire 1 q, Bitline2 $end
$var wire 1 0/ q $end

$scope module ff $end
$var wire 1 0/ q $end
$var wire 1 F" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 1/ state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 .* Bitline1 $end
$var wire 1 r, Bitline2 $end
$var wire 1 2/ q $end

$scope module ff $end
$var wire 1 2/ q $end
$var wire 1 E" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 3/ state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 /* Bitline1 $end
$var wire 1 s, Bitline2 $end
$var wire 1 4/ q $end

$scope module ff $end
$var wire 1 4/ q $end
$var wire 1 D" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 5/ state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 0* Bitline1 $end
$var wire 1 t, Bitline2 $end
$var wire 1 6/ q $end

$scope module ff $end
$var wire 1 6/ q $end
$var wire 1 C" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 7/ state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 1* Bitline1 $end
$var wire 1 u, Bitline2 $end
$var wire 1 8/ q $end

$scope module ff $end
$var wire 1 8/ q $end
$var wire 1 B" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 9/ state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 2* Bitline1 $end
$var wire 1 v, Bitline2 $end
$var wire 1 :/ q $end

$scope module ff $end
$var wire 1 :/ q $end
$var wire 1 A" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;/ state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 3* Bitline1 $end
$var wire 1 w, Bitline2 $end
$var wire 1 </ q $end

$scope module ff $end
$var wire 1 </ q $end
$var wire 1 @" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =/ state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 [' WriteEnable $end
$var wire 1 k' ReadEnable1 $end
$var wire 1 {' ReadEnable2 $end
$var wire 1 4* Bitline1 $end
$var wire 1 x, Bitline2 $end
$var wire 1 >/ q $end

$scope module ff $end
$var wire 1 >/ q $end
$var wire 1 ?" d $end
$var wire 1 [' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?/ state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 Z' WriteReg $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 $* Bitline1 [15] $end
$var wire 1 #* Bitline1 [14] $end
$var wire 1 "* Bitline1 [13] $end
$var wire 1 !* Bitline1 [12] $end
$var wire 1 ~) Bitline1 [11] $end
$var wire 1 }) Bitline1 [10] $end
$var wire 1 |) Bitline1 [9] $end
$var wire 1 {) Bitline1 [8] $end
$var wire 1 z) Bitline1 [7] $end
$var wire 1 y) Bitline1 [6] $end
$var wire 1 x) Bitline1 [5] $end
$var wire 1 w) Bitline1 [4] $end
$var wire 1 v) Bitline1 [3] $end
$var wire 1 u) Bitline1 [2] $end
$var wire 1 t) Bitline1 [1] $end
$var wire 1 s) Bitline1 [0] $end
$var wire 1 h, Bitline2 [15] $end
$var wire 1 g, Bitline2 [14] $end
$var wire 1 f, Bitline2 [13] $end
$var wire 1 e, Bitline2 [12] $end
$var wire 1 d, Bitline2 [11] $end
$var wire 1 c, Bitline2 [10] $end
$var wire 1 b, Bitline2 [9] $end
$var wire 1 a, Bitline2 [8] $end
$var wire 1 `, Bitline2 [7] $end
$var wire 1 _, Bitline2 [6] $end
$var wire 1 ^, Bitline2 [5] $end
$var wire 1 ], Bitline2 [4] $end
$var wire 1 \, Bitline2 [3] $end
$var wire 1 [, Bitline2 [2] $end
$var wire 1 Z, Bitline2 [1] $end
$var wire 1 Y, Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 s) Bitline1 $end
$var wire 1 Y, Bitline2 $end
$var wire 1 @/ q $end

$scope module ff $end
$var wire 1 @/ q $end
$var wire 1 N" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A/ state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 t) Bitline1 $end
$var wire 1 Z, Bitline2 $end
$var wire 1 B/ q $end

$scope module ff $end
$var wire 1 B/ q $end
$var wire 1 M" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C/ state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 u) Bitline1 $end
$var wire 1 [, Bitline2 $end
$var wire 1 D/ q $end

$scope module ff $end
$var wire 1 D/ q $end
$var wire 1 L" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E/ state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 v) Bitline1 $end
$var wire 1 \, Bitline2 $end
$var wire 1 F/ q $end

$scope module ff $end
$var wire 1 F/ q $end
$var wire 1 K" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G/ state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 w) Bitline1 $end
$var wire 1 ], Bitline2 $end
$var wire 1 H/ q $end

$scope module ff $end
$var wire 1 H/ q $end
$var wire 1 J" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 I/ state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 x) Bitline1 $end
$var wire 1 ^, Bitline2 $end
$var wire 1 J/ q $end

$scope module ff $end
$var wire 1 J/ q $end
$var wire 1 I" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 K/ state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 y) Bitline1 $end
$var wire 1 _, Bitline2 $end
$var wire 1 L/ q $end

$scope module ff $end
$var wire 1 L/ q $end
$var wire 1 H" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 M/ state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 z) Bitline1 $end
$var wire 1 `, Bitline2 $end
$var wire 1 N/ q $end

$scope module ff $end
$var wire 1 N/ q $end
$var wire 1 G" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 O/ state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 {) Bitline1 $end
$var wire 1 a, Bitline2 $end
$var wire 1 P/ q $end

$scope module ff $end
$var wire 1 P/ q $end
$var wire 1 F" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Q/ state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 |) Bitline1 $end
$var wire 1 b, Bitline2 $end
$var wire 1 R/ q $end

$scope module ff $end
$var wire 1 R/ q $end
$var wire 1 E" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 S/ state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 }) Bitline1 $end
$var wire 1 c, Bitline2 $end
$var wire 1 T/ q $end

$scope module ff $end
$var wire 1 T/ q $end
$var wire 1 D" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 U/ state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 ~) Bitline1 $end
$var wire 1 d, Bitline2 $end
$var wire 1 V/ q $end

$scope module ff $end
$var wire 1 V/ q $end
$var wire 1 C" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 W/ state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 !* Bitline1 $end
$var wire 1 e, Bitline2 $end
$var wire 1 X/ q $end

$scope module ff $end
$var wire 1 X/ q $end
$var wire 1 B" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Y/ state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 "* Bitline1 $end
$var wire 1 f, Bitline2 $end
$var wire 1 Z/ q $end

$scope module ff $end
$var wire 1 Z/ q $end
$var wire 1 A" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 [/ state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 #* Bitline1 $end
$var wire 1 g, Bitline2 $end
$var wire 1 \/ q $end

$scope module ff $end
$var wire 1 \/ q $end
$var wire 1 @" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ]/ state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 Z' WriteEnable $end
$var wire 1 j' ReadEnable1 $end
$var wire 1 z' ReadEnable2 $end
$var wire 1 $* Bitline1 $end
$var wire 1 h, Bitline2 $end
$var wire 1 ^/ q $end

$scope module ff $end
$var wire 1 ^/ q $end
$var wire 1 ?" d $end
$var wire 1 Z' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 _/ state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 Y' WriteReg $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 r) Bitline1 [15] $end
$var wire 1 q) Bitline1 [14] $end
$var wire 1 p) Bitline1 [13] $end
$var wire 1 o) Bitline1 [12] $end
$var wire 1 n) Bitline1 [11] $end
$var wire 1 m) Bitline1 [10] $end
$var wire 1 l) Bitline1 [9] $end
$var wire 1 k) Bitline1 [8] $end
$var wire 1 j) Bitline1 [7] $end
$var wire 1 i) Bitline1 [6] $end
$var wire 1 h) Bitline1 [5] $end
$var wire 1 g) Bitline1 [4] $end
$var wire 1 f) Bitline1 [3] $end
$var wire 1 e) Bitline1 [2] $end
$var wire 1 d) Bitline1 [1] $end
$var wire 1 c) Bitline1 [0] $end
$var wire 1 X, Bitline2 [15] $end
$var wire 1 W, Bitline2 [14] $end
$var wire 1 V, Bitline2 [13] $end
$var wire 1 U, Bitline2 [12] $end
$var wire 1 T, Bitline2 [11] $end
$var wire 1 S, Bitline2 [10] $end
$var wire 1 R, Bitline2 [9] $end
$var wire 1 Q, Bitline2 [8] $end
$var wire 1 P, Bitline2 [7] $end
$var wire 1 O, Bitline2 [6] $end
$var wire 1 N, Bitline2 [5] $end
$var wire 1 M, Bitline2 [4] $end
$var wire 1 L, Bitline2 [3] $end
$var wire 1 K, Bitline2 [2] $end
$var wire 1 J, Bitline2 [1] $end
$var wire 1 I, Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 c) Bitline1 $end
$var wire 1 I, Bitline2 $end
$var wire 1 `/ q $end

$scope module ff $end
$var wire 1 `/ q $end
$var wire 1 N" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 a/ state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 d) Bitline1 $end
$var wire 1 J, Bitline2 $end
$var wire 1 b/ q $end

$scope module ff $end
$var wire 1 b/ q $end
$var wire 1 M" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c/ state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 e) Bitline1 $end
$var wire 1 K, Bitline2 $end
$var wire 1 d/ q $end

$scope module ff $end
$var wire 1 d/ q $end
$var wire 1 L" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e/ state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 f) Bitline1 $end
$var wire 1 L, Bitline2 $end
$var wire 1 f/ q $end

$scope module ff $end
$var wire 1 f/ q $end
$var wire 1 K" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g/ state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 g) Bitline1 $end
$var wire 1 M, Bitline2 $end
$var wire 1 h/ q $end

$scope module ff $end
$var wire 1 h/ q $end
$var wire 1 J" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i/ state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 h) Bitline1 $end
$var wire 1 N, Bitline2 $end
$var wire 1 j/ q $end

$scope module ff $end
$var wire 1 j/ q $end
$var wire 1 I" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k/ state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 i) Bitline1 $end
$var wire 1 O, Bitline2 $end
$var wire 1 l/ q $end

$scope module ff $end
$var wire 1 l/ q $end
$var wire 1 H" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m/ state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 j) Bitline1 $end
$var wire 1 P, Bitline2 $end
$var wire 1 n/ q $end

$scope module ff $end
$var wire 1 n/ q $end
$var wire 1 G" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o/ state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 k) Bitline1 $end
$var wire 1 Q, Bitline2 $end
$var wire 1 p/ q $end

$scope module ff $end
$var wire 1 p/ q $end
$var wire 1 F" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q/ state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 l) Bitline1 $end
$var wire 1 R, Bitline2 $end
$var wire 1 r/ q $end

$scope module ff $end
$var wire 1 r/ q $end
$var wire 1 E" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s/ state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 m) Bitline1 $end
$var wire 1 S, Bitline2 $end
$var wire 1 t/ q $end

$scope module ff $end
$var wire 1 t/ q $end
$var wire 1 D" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u/ state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 n) Bitline1 $end
$var wire 1 T, Bitline2 $end
$var wire 1 v/ q $end

$scope module ff $end
$var wire 1 v/ q $end
$var wire 1 C" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w/ state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 o) Bitline1 $end
$var wire 1 U, Bitline2 $end
$var wire 1 x/ q $end

$scope module ff $end
$var wire 1 x/ q $end
$var wire 1 B" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y/ state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 p) Bitline1 $end
$var wire 1 V, Bitline2 $end
$var wire 1 z/ q $end

$scope module ff $end
$var wire 1 z/ q $end
$var wire 1 A" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {/ state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 q) Bitline1 $end
$var wire 1 W, Bitline2 $end
$var wire 1 |/ q $end

$scope module ff $end
$var wire 1 |/ q $end
$var wire 1 @" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }/ state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 Y' WriteEnable $end
$var wire 1 i' ReadEnable1 $end
$var wire 1 y' ReadEnable2 $end
$var wire 1 r) Bitline1 $end
$var wire 1 X, Bitline2 $end
$var wire 1 ~/ q $end

$scope module ff $end
$var wire 1 ~/ q $end
$var wire 1 ?" d $end
$var wire 1 Y' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !0 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 X' WriteReg $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 b) Bitline1 [15] $end
$var wire 1 a) Bitline1 [14] $end
$var wire 1 `) Bitline1 [13] $end
$var wire 1 _) Bitline1 [12] $end
$var wire 1 ^) Bitline1 [11] $end
$var wire 1 ]) Bitline1 [10] $end
$var wire 1 \) Bitline1 [9] $end
$var wire 1 [) Bitline1 [8] $end
$var wire 1 Z) Bitline1 [7] $end
$var wire 1 Y) Bitline1 [6] $end
$var wire 1 X) Bitline1 [5] $end
$var wire 1 W) Bitline1 [4] $end
$var wire 1 V) Bitline1 [3] $end
$var wire 1 U) Bitline1 [2] $end
$var wire 1 T) Bitline1 [1] $end
$var wire 1 S) Bitline1 [0] $end
$var wire 1 H, Bitline2 [15] $end
$var wire 1 G, Bitline2 [14] $end
$var wire 1 F, Bitline2 [13] $end
$var wire 1 E, Bitline2 [12] $end
$var wire 1 D, Bitline2 [11] $end
$var wire 1 C, Bitline2 [10] $end
$var wire 1 B, Bitline2 [9] $end
$var wire 1 A, Bitline2 [8] $end
$var wire 1 @, Bitline2 [7] $end
$var wire 1 ?, Bitline2 [6] $end
$var wire 1 >, Bitline2 [5] $end
$var wire 1 =, Bitline2 [4] $end
$var wire 1 <, Bitline2 [3] $end
$var wire 1 ;, Bitline2 [2] $end
$var wire 1 :, Bitline2 [1] $end
$var wire 1 9, Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 S) Bitline1 $end
$var wire 1 9, Bitline2 $end
$var wire 1 "0 q $end

$scope module ff $end
$var wire 1 "0 q $end
$var wire 1 N" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #0 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 T) Bitline1 $end
$var wire 1 :, Bitline2 $end
$var wire 1 $0 q $end

$scope module ff $end
$var wire 1 $0 q $end
$var wire 1 M" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %0 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 U) Bitline1 $end
$var wire 1 ;, Bitline2 $end
$var wire 1 &0 q $end

$scope module ff $end
$var wire 1 &0 q $end
$var wire 1 L" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '0 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 V) Bitline1 $end
$var wire 1 <, Bitline2 $end
$var wire 1 (0 q $end

$scope module ff $end
$var wire 1 (0 q $end
$var wire 1 K" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 )0 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 W) Bitline1 $end
$var wire 1 =, Bitline2 $end
$var wire 1 *0 q $end

$scope module ff $end
$var wire 1 *0 q $end
$var wire 1 J" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +0 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 X) Bitline1 $end
$var wire 1 >, Bitline2 $end
$var wire 1 ,0 q $end

$scope module ff $end
$var wire 1 ,0 q $end
$var wire 1 I" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -0 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 Y) Bitline1 $end
$var wire 1 ?, Bitline2 $end
$var wire 1 .0 q $end

$scope module ff $end
$var wire 1 .0 q $end
$var wire 1 H" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 /0 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 Z) Bitline1 $end
$var wire 1 @, Bitline2 $end
$var wire 1 00 q $end

$scope module ff $end
$var wire 1 00 q $end
$var wire 1 G" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 10 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 [) Bitline1 $end
$var wire 1 A, Bitline2 $end
$var wire 1 20 q $end

$scope module ff $end
$var wire 1 20 q $end
$var wire 1 F" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 30 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 \) Bitline1 $end
$var wire 1 B, Bitline2 $end
$var wire 1 40 q $end

$scope module ff $end
$var wire 1 40 q $end
$var wire 1 E" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 50 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 ]) Bitline1 $end
$var wire 1 C, Bitline2 $end
$var wire 1 60 q $end

$scope module ff $end
$var wire 1 60 q $end
$var wire 1 D" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 70 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 ^) Bitline1 $end
$var wire 1 D, Bitline2 $end
$var wire 1 80 q $end

$scope module ff $end
$var wire 1 80 q $end
$var wire 1 C" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 90 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 _) Bitline1 $end
$var wire 1 E, Bitline2 $end
$var wire 1 :0 q $end

$scope module ff $end
$var wire 1 :0 q $end
$var wire 1 B" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;0 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 `) Bitline1 $end
$var wire 1 F, Bitline2 $end
$var wire 1 <0 q $end

$scope module ff $end
$var wire 1 <0 q $end
$var wire 1 A" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =0 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 a) Bitline1 $end
$var wire 1 G, Bitline2 $end
$var wire 1 >0 q $end

$scope module ff $end
$var wire 1 >0 q $end
$var wire 1 @" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?0 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 X' WriteEnable $end
$var wire 1 h' ReadEnable1 $end
$var wire 1 x' ReadEnable2 $end
$var wire 1 b) Bitline1 $end
$var wire 1 H, Bitline2 $end
$var wire 1 @0 q $end

$scope module ff $end
$var wire 1 @0 q $end
$var wire 1 ?" d $end
$var wire 1 X' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A0 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 W' WriteReg $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 R) Bitline1 [15] $end
$var wire 1 Q) Bitline1 [14] $end
$var wire 1 P) Bitline1 [13] $end
$var wire 1 O) Bitline1 [12] $end
$var wire 1 N) Bitline1 [11] $end
$var wire 1 M) Bitline1 [10] $end
$var wire 1 L) Bitline1 [9] $end
$var wire 1 K) Bitline1 [8] $end
$var wire 1 J) Bitline1 [7] $end
$var wire 1 I) Bitline1 [6] $end
$var wire 1 H) Bitline1 [5] $end
$var wire 1 G) Bitline1 [4] $end
$var wire 1 F) Bitline1 [3] $end
$var wire 1 E) Bitline1 [2] $end
$var wire 1 D) Bitline1 [1] $end
$var wire 1 C) Bitline1 [0] $end
$var wire 1 8, Bitline2 [15] $end
$var wire 1 7, Bitline2 [14] $end
$var wire 1 6, Bitline2 [13] $end
$var wire 1 5, Bitline2 [12] $end
$var wire 1 4, Bitline2 [11] $end
$var wire 1 3, Bitline2 [10] $end
$var wire 1 2, Bitline2 [9] $end
$var wire 1 1, Bitline2 [8] $end
$var wire 1 0, Bitline2 [7] $end
$var wire 1 /, Bitline2 [6] $end
$var wire 1 ., Bitline2 [5] $end
$var wire 1 -, Bitline2 [4] $end
$var wire 1 ,, Bitline2 [3] $end
$var wire 1 +, Bitline2 [2] $end
$var wire 1 *, Bitline2 [1] $end
$var wire 1 ), Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 C) Bitline1 $end
$var wire 1 ), Bitline2 $end
$var wire 1 B0 q $end

$scope module ff $end
$var wire 1 B0 q $end
$var wire 1 N" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C0 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 D) Bitline1 $end
$var wire 1 *, Bitline2 $end
$var wire 1 D0 q $end

$scope module ff $end
$var wire 1 D0 q $end
$var wire 1 M" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E0 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 E) Bitline1 $end
$var wire 1 +, Bitline2 $end
$var wire 1 F0 q $end

$scope module ff $end
$var wire 1 F0 q $end
$var wire 1 L" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G0 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 F) Bitline1 $end
$var wire 1 ,, Bitline2 $end
$var wire 1 H0 q $end

$scope module ff $end
$var wire 1 H0 q $end
$var wire 1 K" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 I0 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 G) Bitline1 $end
$var wire 1 -, Bitline2 $end
$var wire 1 J0 q $end

$scope module ff $end
$var wire 1 J0 q $end
$var wire 1 J" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 K0 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 H) Bitline1 $end
$var wire 1 ., Bitline2 $end
$var wire 1 L0 q $end

$scope module ff $end
$var wire 1 L0 q $end
$var wire 1 I" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 M0 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 I) Bitline1 $end
$var wire 1 /, Bitline2 $end
$var wire 1 N0 q $end

$scope module ff $end
$var wire 1 N0 q $end
$var wire 1 H" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 O0 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 J) Bitline1 $end
$var wire 1 0, Bitline2 $end
$var wire 1 P0 q $end

$scope module ff $end
$var wire 1 P0 q $end
$var wire 1 G" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Q0 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 K) Bitline1 $end
$var wire 1 1, Bitline2 $end
$var wire 1 R0 q $end

$scope module ff $end
$var wire 1 R0 q $end
$var wire 1 F" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 S0 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 L) Bitline1 $end
$var wire 1 2, Bitline2 $end
$var wire 1 T0 q $end

$scope module ff $end
$var wire 1 T0 q $end
$var wire 1 E" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 U0 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 M) Bitline1 $end
$var wire 1 3, Bitline2 $end
$var wire 1 V0 q $end

$scope module ff $end
$var wire 1 V0 q $end
$var wire 1 D" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 W0 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 N) Bitline1 $end
$var wire 1 4, Bitline2 $end
$var wire 1 X0 q $end

$scope module ff $end
$var wire 1 X0 q $end
$var wire 1 C" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Y0 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 O) Bitline1 $end
$var wire 1 5, Bitline2 $end
$var wire 1 Z0 q $end

$scope module ff $end
$var wire 1 Z0 q $end
$var wire 1 B" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 [0 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 P) Bitline1 $end
$var wire 1 6, Bitline2 $end
$var wire 1 \0 q $end

$scope module ff $end
$var wire 1 \0 q $end
$var wire 1 A" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ]0 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 Q) Bitline1 $end
$var wire 1 7, Bitline2 $end
$var wire 1 ^0 q $end

$scope module ff $end
$var wire 1 ^0 q $end
$var wire 1 @" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 _0 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 W' WriteEnable $end
$var wire 1 g' ReadEnable1 $end
$var wire 1 w' ReadEnable2 $end
$var wire 1 R) Bitline1 $end
$var wire 1 8, Bitline2 $end
$var wire 1 `0 q $end

$scope module ff $end
$var wire 1 `0 q $end
$var wire 1 ?" d $end
$var wire 1 W' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 a0 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 V' WriteReg $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 B) Bitline1 [15] $end
$var wire 1 A) Bitline1 [14] $end
$var wire 1 @) Bitline1 [13] $end
$var wire 1 ?) Bitline1 [12] $end
$var wire 1 >) Bitline1 [11] $end
$var wire 1 =) Bitline1 [10] $end
$var wire 1 <) Bitline1 [9] $end
$var wire 1 ;) Bitline1 [8] $end
$var wire 1 :) Bitline1 [7] $end
$var wire 1 9) Bitline1 [6] $end
$var wire 1 8) Bitline1 [5] $end
$var wire 1 7) Bitline1 [4] $end
$var wire 1 6) Bitline1 [3] $end
$var wire 1 5) Bitline1 [2] $end
$var wire 1 4) Bitline1 [1] $end
$var wire 1 3) Bitline1 [0] $end
$var wire 1 (, Bitline2 [15] $end
$var wire 1 ', Bitline2 [14] $end
$var wire 1 &, Bitline2 [13] $end
$var wire 1 %, Bitline2 [12] $end
$var wire 1 $, Bitline2 [11] $end
$var wire 1 #, Bitline2 [10] $end
$var wire 1 ", Bitline2 [9] $end
$var wire 1 !, Bitline2 [8] $end
$var wire 1 ~+ Bitline2 [7] $end
$var wire 1 }+ Bitline2 [6] $end
$var wire 1 |+ Bitline2 [5] $end
$var wire 1 {+ Bitline2 [4] $end
$var wire 1 z+ Bitline2 [3] $end
$var wire 1 y+ Bitline2 [2] $end
$var wire 1 x+ Bitline2 [1] $end
$var wire 1 w+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 3) Bitline1 $end
$var wire 1 w+ Bitline2 $end
$var wire 1 b0 q $end

$scope module ff $end
$var wire 1 b0 q $end
$var wire 1 N" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c0 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 4) Bitline1 $end
$var wire 1 x+ Bitline2 $end
$var wire 1 d0 q $end

$scope module ff $end
$var wire 1 d0 q $end
$var wire 1 M" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e0 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 5) Bitline1 $end
$var wire 1 y+ Bitline2 $end
$var wire 1 f0 q $end

$scope module ff $end
$var wire 1 f0 q $end
$var wire 1 L" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g0 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 6) Bitline1 $end
$var wire 1 z+ Bitline2 $end
$var wire 1 h0 q $end

$scope module ff $end
$var wire 1 h0 q $end
$var wire 1 K" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i0 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 7) Bitline1 $end
$var wire 1 {+ Bitline2 $end
$var wire 1 j0 q $end

$scope module ff $end
$var wire 1 j0 q $end
$var wire 1 J" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k0 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 8) Bitline1 $end
$var wire 1 |+ Bitline2 $end
$var wire 1 l0 q $end

$scope module ff $end
$var wire 1 l0 q $end
$var wire 1 I" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m0 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 9) Bitline1 $end
$var wire 1 }+ Bitline2 $end
$var wire 1 n0 q $end

$scope module ff $end
$var wire 1 n0 q $end
$var wire 1 H" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o0 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 :) Bitline1 $end
$var wire 1 ~+ Bitline2 $end
$var wire 1 p0 q $end

$scope module ff $end
$var wire 1 p0 q $end
$var wire 1 G" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q0 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 ;) Bitline1 $end
$var wire 1 !, Bitline2 $end
$var wire 1 r0 q $end

$scope module ff $end
$var wire 1 r0 q $end
$var wire 1 F" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s0 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 <) Bitline1 $end
$var wire 1 ", Bitline2 $end
$var wire 1 t0 q $end

$scope module ff $end
$var wire 1 t0 q $end
$var wire 1 E" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u0 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 =) Bitline1 $end
$var wire 1 #, Bitline2 $end
$var wire 1 v0 q $end

$scope module ff $end
$var wire 1 v0 q $end
$var wire 1 D" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w0 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 >) Bitline1 $end
$var wire 1 $, Bitline2 $end
$var wire 1 x0 q $end

$scope module ff $end
$var wire 1 x0 q $end
$var wire 1 C" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y0 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 ?) Bitline1 $end
$var wire 1 %, Bitline2 $end
$var wire 1 z0 q $end

$scope module ff $end
$var wire 1 z0 q $end
$var wire 1 B" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {0 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 @) Bitline1 $end
$var wire 1 &, Bitline2 $end
$var wire 1 |0 q $end

$scope module ff $end
$var wire 1 |0 q $end
$var wire 1 A" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }0 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 A) Bitline1 $end
$var wire 1 ', Bitline2 $end
$var wire 1 ~0 q $end

$scope module ff $end
$var wire 1 ~0 q $end
$var wire 1 @" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !1 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 V' WriteEnable $end
$var wire 1 f' ReadEnable1 $end
$var wire 1 v' ReadEnable2 $end
$var wire 1 B) Bitline1 $end
$var wire 1 (, Bitline2 $end
$var wire 1 "1 q $end

$scope module ff $end
$var wire 1 "1 q $end
$var wire 1 ?" d $end
$var wire 1 V' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #1 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 U' WriteReg $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 2) Bitline1 [15] $end
$var wire 1 1) Bitline1 [14] $end
$var wire 1 0) Bitline1 [13] $end
$var wire 1 /) Bitline1 [12] $end
$var wire 1 .) Bitline1 [11] $end
$var wire 1 -) Bitline1 [10] $end
$var wire 1 ,) Bitline1 [9] $end
$var wire 1 +) Bitline1 [8] $end
$var wire 1 *) Bitline1 [7] $end
$var wire 1 )) Bitline1 [6] $end
$var wire 1 () Bitline1 [5] $end
$var wire 1 ') Bitline1 [4] $end
$var wire 1 &) Bitline1 [3] $end
$var wire 1 %) Bitline1 [2] $end
$var wire 1 $) Bitline1 [1] $end
$var wire 1 #) Bitline1 [0] $end
$var wire 1 v+ Bitline2 [15] $end
$var wire 1 u+ Bitline2 [14] $end
$var wire 1 t+ Bitline2 [13] $end
$var wire 1 s+ Bitline2 [12] $end
$var wire 1 r+ Bitline2 [11] $end
$var wire 1 q+ Bitline2 [10] $end
$var wire 1 p+ Bitline2 [9] $end
$var wire 1 o+ Bitline2 [8] $end
$var wire 1 n+ Bitline2 [7] $end
$var wire 1 m+ Bitline2 [6] $end
$var wire 1 l+ Bitline2 [5] $end
$var wire 1 k+ Bitline2 [4] $end
$var wire 1 j+ Bitline2 [3] $end
$var wire 1 i+ Bitline2 [2] $end
$var wire 1 h+ Bitline2 [1] $end
$var wire 1 g+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 #) Bitline1 $end
$var wire 1 g+ Bitline2 $end
$var wire 1 $1 q $end

$scope module ff $end
$var wire 1 $1 q $end
$var wire 1 N" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %1 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 $) Bitline1 $end
$var wire 1 h+ Bitline2 $end
$var wire 1 &1 q $end

$scope module ff $end
$var wire 1 &1 q $end
$var wire 1 M" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '1 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 %) Bitline1 $end
$var wire 1 i+ Bitline2 $end
$var wire 1 (1 q $end

$scope module ff $end
$var wire 1 (1 q $end
$var wire 1 L" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 )1 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 &) Bitline1 $end
$var wire 1 j+ Bitline2 $end
$var wire 1 *1 q $end

$scope module ff $end
$var wire 1 *1 q $end
$var wire 1 K" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +1 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 ') Bitline1 $end
$var wire 1 k+ Bitline2 $end
$var wire 1 ,1 q $end

$scope module ff $end
$var wire 1 ,1 q $end
$var wire 1 J" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -1 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 () Bitline1 $end
$var wire 1 l+ Bitline2 $end
$var wire 1 .1 q $end

$scope module ff $end
$var wire 1 .1 q $end
$var wire 1 I" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 /1 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 )) Bitline1 $end
$var wire 1 m+ Bitline2 $end
$var wire 1 01 q $end

$scope module ff $end
$var wire 1 01 q $end
$var wire 1 H" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 11 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 *) Bitline1 $end
$var wire 1 n+ Bitline2 $end
$var wire 1 21 q $end

$scope module ff $end
$var wire 1 21 q $end
$var wire 1 G" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 31 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 +) Bitline1 $end
$var wire 1 o+ Bitline2 $end
$var wire 1 41 q $end

$scope module ff $end
$var wire 1 41 q $end
$var wire 1 F" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 51 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 ,) Bitline1 $end
$var wire 1 p+ Bitline2 $end
$var wire 1 61 q $end

$scope module ff $end
$var wire 1 61 q $end
$var wire 1 E" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 71 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 -) Bitline1 $end
$var wire 1 q+ Bitline2 $end
$var wire 1 81 q $end

$scope module ff $end
$var wire 1 81 q $end
$var wire 1 D" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 91 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 .) Bitline1 $end
$var wire 1 r+ Bitline2 $end
$var wire 1 :1 q $end

$scope module ff $end
$var wire 1 :1 q $end
$var wire 1 C" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;1 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 /) Bitline1 $end
$var wire 1 s+ Bitline2 $end
$var wire 1 <1 q $end

$scope module ff $end
$var wire 1 <1 q $end
$var wire 1 B" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =1 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 0) Bitline1 $end
$var wire 1 t+ Bitline2 $end
$var wire 1 >1 q $end

$scope module ff $end
$var wire 1 >1 q $end
$var wire 1 A" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?1 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 1) Bitline1 $end
$var wire 1 u+ Bitline2 $end
$var wire 1 @1 q $end

$scope module ff $end
$var wire 1 @1 q $end
$var wire 1 @" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A1 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 U' WriteEnable $end
$var wire 1 e' ReadEnable1 $end
$var wire 1 u' ReadEnable2 $end
$var wire 1 2) Bitline1 $end
$var wire 1 v+ Bitline2 $end
$var wire 1 B1 q $end

$scope module ff $end
$var wire 1 B1 q $end
$var wire 1 ?" d $end
$var wire 1 U' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C1 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 T' WriteReg $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 ") Bitline1 [15] $end
$var wire 1 !) Bitline1 [14] $end
$var wire 1 ~( Bitline1 [13] $end
$var wire 1 }( Bitline1 [12] $end
$var wire 1 |( Bitline1 [11] $end
$var wire 1 {( Bitline1 [10] $end
$var wire 1 z( Bitline1 [9] $end
$var wire 1 y( Bitline1 [8] $end
$var wire 1 x( Bitline1 [7] $end
$var wire 1 w( Bitline1 [6] $end
$var wire 1 v( Bitline1 [5] $end
$var wire 1 u( Bitline1 [4] $end
$var wire 1 t( Bitline1 [3] $end
$var wire 1 s( Bitline1 [2] $end
$var wire 1 r( Bitline1 [1] $end
$var wire 1 q( Bitline1 [0] $end
$var wire 1 f+ Bitline2 [15] $end
$var wire 1 e+ Bitline2 [14] $end
$var wire 1 d+ Bitline2 [13] $end
$var wire 1 c+ Bitline2 [12] $end
$var wire 1 b+ Bitline2 [11] $end
$var wire 1 a+ Bitline2 [10] $end
$var wire 1 `+ Bitline2 [9] $end
$var wire 1 _+ Bitline2 [8] $end
$var wire 1 ^+ Bitline2 [7] $end
$var wire 1 ]+ Bitline2 [6] $end
$var wire 1 \+ Bitline2 [5] $end
$var wire 1 [+ Bitline2 [4] $end
$var wire 1 Z+ Bitline2 [3] $end
$var wire 1 Y+ Bitline2 [2] $end
$var wire 1 X+ Bitline2 [1] $end
$var wire 1 W+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 q( Bitline1 $end
$var wire 1 W+ Bitline2 $end
$var wire 1 D1 q $end

$scope module ff $end
$var wire 1 D1 q $end
$var wire 1 N" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E1 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 r( Bitline1 $end
$var wire 1 X+ Bitline2 $end
$var wire 1 F1 q $end

$scope module ff $end
$var wire 1 F1 q $end
$var wire 1 M" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G1 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 s( Bitline1 $end
$var wire 1 Y+ Bitline2 $end
$var wire 1 H1 q $end

$scope module ff $end
$var wire 1 H1 q $end
$var wire 1 L" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 I1 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 t( Bitline1 $end
$var wire 1 Z+ Bitline2 $end
$var wire 1 J1 q $end

$scope module ff $end
$var wire 1 J1 q $end
$var wire 1 K" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 K1 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 u( Bitline1 $end
$var wire 1 [+ Bitline2 $end
$var wire 1 L1 q $end

$scope module ff $end
$var wire 1 L1 q $end
$var wire 1 J" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 M1 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 v( Bitline1 $end
$var wire 1 \+ Bitline2 $end
$var wire 1 N1 q $end

$scope module ff $end
$var wire 1 N1 q $end
$var wire 1 I" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 O1 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 w( Bitline1 $end
$var wire 1 ]+ Bitline2 $end
$var wire 1 P1 q $end

$scope module ff $end
$var wire 1 P1 q $end
$var wire 1 H" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Q1 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 x( Bitline1 $end
$var wire 1 ^+ Bitline2 $end
$var wire 1 R1 q $end

$scope module ff $end
$var wire 1 R1 q $end
$var wire 1 G" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 S1 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 y( Bitline1 $end
$var wire 1 _+ Bitline2 $end
$var wire 1 T1 q $end

$scope module ff $end
$var wire 1 T1 q $end
$var wire 1 F" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 U1 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 z( Bitline1 $end
$var wire 1 `+ Bitline2 $end
$var wire 1 V1 q $end

$scope module ff $end
$var wire 1 V1 q $end
$var wire 1 E" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 W1 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 {( Bitline1 $end
$var wire 1 a+ Bitline2 $end
$var wire 1 X1 q $end

$scope module ff $end
$var wire 1 X1 q $end
$var wire 1 D" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Y1 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 |( Bitline1 $end
$var wire 1 b+ Bitline2 $end
$var wire 1 Z1 q $end

$scope module ff $end
$var wire 1 Z1 q $end
$var wire 1 C" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 [1 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 }( Bitline1 $end
$var wire 1 c+ Bitline2 $end
$var wire 1 \1 q $end

$scope module ff $end
$var wire 1 \1 q $end
$var wire 1 B" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ]1 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 ~( Bitline1 $end
$var wire 1 d+ Bitline2 $end
$var wire 1 ^1 q $end

$scope module ff $end
$var wire 1 ^1 q $end
$var wire 1 A" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 _1 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 !) Bitline1 $end
$var wire 1 e+ Bitline2 $end
$var wire 1 `1 q $end

$scope module ff $end
$var wire 1 `1 q $end
$var wire 1 @" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 a1 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 T' WriteEnable $end
$var wire 1 d' ReadEnable1 $end
$var wire 1 t' ReadEnable2 $end
$var wire 1 ") Bitline1 $end
$var wire 1 f+ Bitline2 $end
$var wire 1 b1 q $end

$scope module ff $end
$var wire 1 b1 q $end
$var wire 1 ?" d $end
$var wire 1 T' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c1 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 S' WriteReg $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 p( Bitline1 [15] $end
$var wire 1 o( Bitline1 [14] $end
$var wire 1 n( Bitline1 [13] $end
$var wire 1 m( Bitline1 [12] $end
$var wire 1 l( Bitline1 [11] $end
$var wire 1 k( Bitline1 [10] $end
$var wire 1 j( Bitline1 [9] $end
$var wire 1 i( Bitline1 [8] $end
$var wire 1 h( Bitline1 [7] $end
$var wire 1 g( Bitline1 [6] $end
$var wire 1 f( Bitline1 [5] $end
$var wire 1 e( Bitline1 [4] $end
$var wire 1 d( Bitline1 [3] $end
$var wire 1 c( Bitline1 [2] $end
$var wire 1 b( Bitline1 [1] $end
$var wire 1 a( Bitline1 [0] $end
$var wire 1 V+ Bitline2 [15] $end
$var wire 1 U+ Bitline2 [14] $end
$var wire 1 T+ Bitline2 [13] $end
$var wire 1 S+ Bitline2 [12] $end
$var wire 1 R+ Bitline2 [11] $end
$var wire 1 Q+ Bitline2 [10] $end
$var wire 1 P+ Bitline2 [9] $end
$var wire 1 O+ Bitline2 [8] $end
$var wire 1 N+ Bitline2 [7] $end
$var wire 1 M+ Bitline2 [6] $end
$var wire 1 L+ Bitline2 [5] $end
$var wire 1 K+ Bitline2 [4] $end
$var wire 1 J+ Bitline2 [3] $end
$var wire 1 I+ Bitline2 [2] $end
$var wire 1 H+ Bitline2 [1] $end
$var wire 1 G+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 a( Bitline1 $end
$var wire 1 G+ Bitline2 $end
$var wire 1 d1 q $end

$scope module ff $end
$var wire 1 d1 q $end
$var wire 1 N" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e1 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 b( Bitline1 $end
$var wire 1 H+ Bitline2 $end
$var wire 1 f1 q $end

$scope module ff $end
$var wire 1 f1 q $end
$var wire 1 M" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g1 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 c( Bitline1 $end
$var wire 1 I+ Bitline2 $end
$var wire 1 h1 q $end

$scope module ff $end
$var wire 1 h1 q $end
$var wire 1 L" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i1 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 d( Bitline1 $end
$var wire 1 J+ Bitline2 $end
$var wire 1 j1 q $end

$scope module ff $end
$var wire 1 j1 q $end
$var wire 1 K" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k1 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 e( Bitline1 $end
$var wire 1 K+ Bitline2 $end
$var wire 1 l1 q $end

$scope module ff $end
$var wire 1 l1 q $end
$var wire 1 J" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m1 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 f( Bitline1 $end
$var wire 1 L+ Bitline2 $end
$var wire 1 n1 q $end

$scope module ff $end
$var wire 1 n1 q $end
$var wire 1 I" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o1 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 g( Bitline1 $end
$var wire 1 M+ Bitline2 $end
$var wire 1 p1 q $end

$scope module ff $end
$var wire 1 p1 q $end
$var wire 1 H" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q1 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 h( Bitline1 $end
$var wire 1 N+ Bitline2 $end
$var wire 1 r1 q $end

$scope module ff $end
$var wire 1 r1 q $end
$var wire 1 G" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s1 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 i( Bitline1 $end
$var wire 1 O+ Bitline2 $end
$var wire 1 t1 q $end

$scope module ff $end
$var wire 1 t1 q $end
$var wire 1 F" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u1 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 j( Bitline1 $end
$var wire 1 P+ Bitline2 $end
$var wire 1 v1 q $end

$scope module ff $end
$var wire 1 v1 q $end
$var wire 1 E" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w1 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 k( Bitline1 $end
$var wire 1 Q+ Bitline2 $end
$var wire 1 x1 q $end

$scope module ff $end
$var wire 1 x1 q $end
$var wire 1 D" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y1 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 l( Bitline1 $end
$var wire 1 R+ Bitline2 $end
$var wire 1 z1 q $end

$scope module ff $end
$var wire 1 z1 q $end
$var wire 1 C" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {1 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 m( Bitline1 $end
$var wire 1 S+ Bitline2 $end
$var wire 1 |1 q $end

$scope module ff $end
$var wire 1 |1 q $end
$var wire 1 B" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }1 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 n( Bitline1 $end
$var wire 1 T+ Bitline2 $end
$var wire 1 ~1 q $end

$scope module ff $end
$var wire 1 ~1 q $end
$var wire 1 A" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !2 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 o( Bitline1 $end
$var wire 1 U+ Bitline2 $end
$var wire 1 "2 q $end

$scope module ff $end
$var wire 1 "2 q $end
$var wire 1 @" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #2 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 S' WriteEnable $end
$var wire 1 c' ReadEnable1 $end
$var wire 1 s' ReadEnable2 $end
$var wire 1 p( Bitline1 $end
$var wire 1 V+ Bitline2 $end
$var wire 1 $2 q $end

$scope module ff $end
$var wire 1 $2 q $end
$var wire 1 ?" d $end
$var wire 1 S' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %2 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 R' WriteReg $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 `( Bitline1 [15] $end
$var wire 1 _( Bitline1 [14] $end
$var wire 1 ^( Bitline1 [13] $end
$var wire 1 ]( Bitline1 [12] $end
$var wire 1 \( Bitline1 [11] $end
$var wire 1 [( Bitline1 [10] $end
$var wire 1 Z( Bitline1 [9] $end
$var wire 1 Y( Bitline1 [8] $end
$var wire 1 X( Bitline1 [7] $end
$var wire 1 W( Bitline1 [6] $end
$var wire 1 V( Bitline1 [5] $end
$var wire 1 U( Bitline1 [4] $end
$var wire 1 T( Bitline1 [3] $end
$var wire 1 S( Bitline1 [2] $end
$var wire 1 R( Bitline1 [1] $end
$var wire 1 Q( Bitline1 [0] $end
$var wire 1 F+ Bitline2 [15] $end
$var wire 1 E+ Bitline2 [14] $end
$var wire 1 D+ Bitline2 [13] $end
$var wire 1 C+ Bitline2 [12] $end
$var wire 1 B+ Bitline2 [11] $end
$var wire 1 A+ Bitline2 [10] $end
$var wire 1 @+ Bitline2 [9] $end
$var wire 1 ?+ Bitline2 [8] $end
$var wire 1 >+ Bitline2 [7] $end
$var wire 1 =+ Bitline2 [6] $end
$var wire 1 <+ Bitline2 [5] $end
$var wire 1 ;+ Bitline2 [4] $end
$var wire 1 :+ Bitline2 [3] $end
$var wire 1 9+ Bitline2 [2] $end
$var wire 1 8+ Bitline2 [1] $end
$var wire 1 7+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 Q( Bitline1 $end
$var wire 1 7+ Bitline2 $end
$var wire 1 &2 q $end

$scope module ff $end
$var wire 1 &2 q $end
$var wire 1 N" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '2 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 R( Bitline1 $end
$var wire 1 8+ Bitline2 $end
$var wire 1 (2 q $end

$scope module ff $end
$var wire 1 (2 q $end
$var wire 1 M" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 )2 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 S( Bitline1 $end
$var wire 1 9+ Bitline2 $end
$var wire 1 *2 q $end

$scope module ff $end
$var wire 1 *2 q $end
$var wire 1 L" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +2 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 T( Bitline1 $end
$var wire 1 :+ Bitline2 $end
$var wire 1 ,2 q $end

$scope module ff $end
$var wire 1 ,2 q $end
$var wire 1 K" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -2 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 U( Bitline1 $end
$var wire 1 ;+ Bitline2 $end
$var wire 1 .2 q $end

$scope module ff $end
$var wire 1 .2 q $end
$var wire 1 J" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 /2 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 V( Bitline1 $end
$var wire 1 <+ Bitline2 $end
$var wire 1 02 q $end

$scope module ff $end
$var wire 1 02 q $end
$var wire 1 I" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 12 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 W( Bitline1 $end
$var wire 1 =+ Bitline2 $end
$var wire 1 22 q $end

$scope module ff $end
$var wire 1 22 q $end
$var wire 1 H" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 32 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 X( Bitline1 $end
$var wire 1 >+ Bitline2 $end
$var wire 1 42 q $end

$scope module ff $end
$var wire 1 42 q $end
$var wire 1 G" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 52 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 Y( Bitline1 $end
$var wire 1 ?+ Bitline2 $end
$var wire 1 62 q $end

$scope module ff $end
$var wire 1 62 q $end
$var wire 1 F" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 72 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 Z( Bitline1 $end
$var wire 1 @+ Bitline2 $end
$var wire 1 82 q $end

$scope module ff $end
$var wire 1 82 q $end
$var wire 1 E" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 92 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 [( Bitline1 $end
$var wire 1 A+ Bitline2 $end
$var wire 1 :2 q $end

$scope module ff $end
$var wire 1 :2 q $end
$var wire 1 D" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;2 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 \( Bitline1 $end
$var wire 1 B+ Bitline2 $end
$var wire 1 <2 q $end

$scope module ff $end
$var wire 1 <2 q $end
$var wire 1 C" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =2 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 ]( Bitline1 $end
$var wire 1 C+ Bitline2 $end
$var wire 1 >2 q $end

$scope module ff $end
$var wire 1 >2 q $end
$var wire 1 B" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?2 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 ^( Bitline1 $end
$var wire 1 D+ Bitline2 $end
$var wire 1 @2 q $end

$scope module ff $end
$var wire 1 @2 q $end
$var wire 1 A" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A2 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 _( Bitline1 $end
$var wire 1 E+ Bitline2 $end
$var wire 1 B2 q $end

$scope module ff $end
$var wire 1 B2 q $end
$var wire 1 @" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C2 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 R' WriteEnable $end
$var wire 1 b' ReadEnable1 $end
$var wire 1 r' ReadEnable2 $end
$var wire 1 `( Bitline1 $end
$var wire 1 F+ Bitline2 $end
$var wire 1 D2 q $end

$scope module ff $end
$var wire 1 D2 q $end
$var wire 1 ?" d $end
$var wire 1 R' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E2 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 Q' WriteReg $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 P( Bitline1 [15] $end
$var wire 1 O( Bitline1 [14] $end
$var wire 1 N( Bitline1 [13] $end
$var wire 1 M( Bitline1 [12] $end
$var wire 1 L( Bitline1 [11] $end
$var wire 1 K( Bitline1 [10] $end
$var wire 1 J( Bitline1 [9] $end
$var wire 1 I( Bitline1 [8] $end
$var wire 1 H( Bitline1 [7] $end
$var wire 1 G( Bitline1 [6] $end
$var wire 1 F( Bitline1 [5] $end
$var wire 1 E( Bitline1 [4] $end
$var wire 1 D( Bitline1 [3] $end
$var wire 1 C( Bitline1 [2] $end
$var wire 1 B( Bitline1 [1] $end
$var wire 1 A( Bitline1 [0] $end
$var wire 1 6+ Bitline2 [15] $end
$var wire 1 5+ Bitline2 [14] $end
$var wire 1 4+ Bitline2 [13] $end
$var wire 1 3+ Bitline2 [12] $end
$var wire 1 2+ Bitline2 [11] $end
$var wire 1 1+ Bitline2 [10] $end
$var wire 1 0+ Bitline2 [9] $end
$var wire 1 /+ Bitline2 [8] $end
$var wire 1 .+ Bitline2 [7] $end
$var wire 1 -+ Bitline2 [6] $end
$var wire 1 ,+ Bitline2 [5] $end
$var wire 1 ++ Bitline2 [4] $end
$var wire 1 *+ Bitline2 [3] $end
$var wire 1 )+ Bitline2 [2] $end
$var wire 1 (+ Bitline2 [1] $end
$var wire 1 '+ Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 A( Bitline1 $end
$var wire 1 '+ Bitline2 $end
$var wire 1 F2 q $end

$scope module ff $end
$var wire 1 F2 q $end
$var wire 1 N" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G2 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 B( Bitline1 $end
$var wire 1 (+ Bitline2 $end
$var wire 1 H2 q $end

$scope module ff $end
$var wire 1 H2 q $end
$var wire 1 M" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 I2 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 C( Bitline1 $end
$var wire 1 )+ Bitline2 $end
$var wire 1 J2 q $end

$scope module ff $end
$var wire 1 J2 q $end
$var wire 1 L" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 K2 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 D( Bitline1 $end
$var wire 1 *+ Bitline2 $end
$var wire 1 L2 q $end

$scope module ff $end
$var wire 1 L2 q $end
$var wire 1 K" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 M2 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 E( Bitline1 $end
$var wire 1 ++ Bitline2 $end
$var wire 1 N2 q $end

$scope module ff $end
$var wire 1 N2 q $end
$var wire 1 J" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 O2 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 F( Bitline1 $end
$var wire 1 ,+ Bitline2 $end
$var wire 1 P2 q $end

$scope module ff $end
$var wire 1 P2 q $end
$var wire 1 I" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Q2 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 G( Bitline1 $end
$var wire 1 -+ Bitline2 $end
$var wire 1 R2 q $end

$scope module ff $end
$var wire 1 R2 q $end
$var wire 1 H" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 S2 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 H( Bitline1 $end
$var wire 1 .+ Bitline2 $end
$var wire 1 T2 q $end

$scope module ff $end
$var wire 1 T2 q $end
$var wire 1 G" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 U2 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 I( Bitline1 $end
$var wire 1 /+ Bitline2 $end
$var wire 1 V2 q $end

$scope module ff $end
$var wire 1 V2 q $end
$var wire 1 F" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 W2 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 J( Bitline1 $end
$var wire 1 0+ Bitline2 $end
$var wire 1 X2 q $end

$scope module ff $end
$var wire 1 X2 q $end
$var wire 1 E" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 Y2 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 K( Bitline1 $end
$var wire 1 1+ Bitline2 $end
$var wire 1 Z2 q $end

$scope module ff $end
$var wire 1 Z2 q $end
$var wire 1 D" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 [2 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 L( Bitline1 $end
$var wire 1 2+ Bitline2 $end
$var wire 1 \2 q $end

$scope module ff $end
$var wire 1 \2 q $end
$var wire 1 C" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ]2 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 M( Bitline1 $end
$var wire 1 3+ Bitline2 $end
$var wire 1 ^2 q $end

$scope module ff $end
$var wire 1 ^2 q $end
$var wire 1 B" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 _2 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 N( Bitline1 $end
$var wire 1 4+ Bitline2 $end
$var wire 1 `2 q $end

$scope module ff $end
$var wire 1 `2 q $end
$var wire 1 A" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 a2 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 O( Bitline1 $end
$var wire 1 5+ Bitline2 $end
$var wire 1 b2 q $end

$scope module ff $end
$var wire 1 b2 q $end
$var wire 1 @" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 c2 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 Q' WriteEnable $end
$var wire 1 a' ReadEnable1 $end
$var wire 1 q' ReadEnable2 $end
$var wire 1 P( Bitline1 $end
$var wire 1 6+ Bitline2 $end
$var wire 1 d2 q $end

$scope module ff $end
$var wire 1 d2 q $end
$var wire 1 ?" d $end
$var wire 1 Q' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 e2 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 P' WriteReg $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 @( Bitline1 [15] $end
$var wire 1 ?( Bitline1 [14] $end
$var wire 1 >( Bitline1 [13] $end
$var wire 1 =( Bitline1 [12] $end
$var wire 1 <( Bitline1 [11] $end
$var wire 1 ;( Bitline1 [10] $end
$var wire 1 :( Bitline1 [9] $end
$var wire 1 9( Bitline1 [8] $end
$var wire 1 8( Bitline1 [7] $end
$var wire 1 7( Bitline1 [6] $end
$var wire 1 6( Bitline1 [5] $end
$var wire 1 5( Bitline1 [4] $end
$var wire 1 4( Bitline1 [3] $end
$var wire 1 3( Bitline1 [2] $end
$var wire 1 2( Bitline1 [1] $end
$var wire 1 1( Bitline1 [0] $end
$var wire 1 &+ Bitline2 [15] $end
$var wire 1 %+ Bitline2 [14] $end
$var wire 1 $+ Bitline2 [13] $end
$var wire 1 #+ Bitline2 [12] $end
$var wire 1 "+ Bitline2 [11] $end
$var wire 1 !+ Bitline2 [10] $end
$var wire 1 ~* Bitline2 [9] $end
$var wire 1 }* Bitline2 [8] $end
$var wire 1 |* Bitline2 [7] $end
$var wire 1 {* Bitline2 [6] $end
$var wire 1 z* Bitline2 [5] $end
$var wire 1 y* Bitline2 [4] $end
$var wire 1 x* Bitline2 [3] $end
$var wire 1 w* Bitline2 [2] $end
$var wire 1 v* Bitline2 [1] $end
$var wire 1 u* Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 1( Bitline1 $end
$var wire 1 u* Bitline2 $end
$var wire 1 f2 q $end

$scope module ff $end
$var wire 1 f2 q $end
$var wire 1 N" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 g2 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 2( Bitline1 $end
$var wire 1 v* Bitline2 $end
$var wire 1 h2 q $end

$scope module ff $end
$var wire 1 h2 q $end
$var wire 1 M" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 i2 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 3( Bitline1 $end
$var wire 1 w* Bitline2 $end
$var wire 1 j2 q $end

$scope module ff $end
$var wire 1 j2 q $end
$var wire 1 L" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 k2 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 4( Bitline1 $end
$var wire 1 x* Bitline2 $end
$var wire 1 l2 q $end

$scope module ff $end
$var wire 1 l2 q $end
$var wire 1 K" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 m2 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 5( Bitline1 $end
$var wire 1 y* Bitline2 $end
$var wire 1 n2 q $end

$scope module ff $end
$var wire 1 n2 q $end
$var wire 1 J" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 o2 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 6( Bitline1 $end
$var wire 1 z* Bitline2 $end
$var wire 1 p2 q $end

$scope module ff $end
$var wire 1 p2 q $end
$var wire 1 I" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 q2 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 7( Bitline1 $end
$var wire 1 {* Bitline2 $end
$var wire 1 r2 q $end

$scope module ff $end
$var wire 1 r2 q $end
$var wire 1 H" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 s2 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 8( Bitline1 $end
$var wire 1 |* Bitline2 $end
$var wire 1 t2 q $end

$scope module ff $end
$var wire 1 t2 q $end
$var wire 1 G" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 u2 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 9( Bitline1 $end
$var wire 1 }* Bitline2 $end
$var wire 1 v2 q $end

$scope module ff $end
$var wire 1 v2 q $end
$var wire 1 F" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 w2 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 :( Bitline1 $end
$var wire 1 ~* Bitline2 $end
$var wire 1 x2 q $end

$scope module ff $end
$var wire 1 x2 q $end
$var wire 1 E" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 y2 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 ;( Bitline1 $end
$var wire 1 !+ Bitline2 $end
$var wire 1 z2 q $end

$scope module ff $end
$var wire 1 z2 q $end
$var wire 1 D" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 {2 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 <( Bitline1 $end
$var wire 1 "+ Bitline2 $end
$var wire 1 |2 q $end

$scope module ff $end
$var wire 1 |2 q $end
$var wire 1 C" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 }2 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 =( Bitline1 $end
$var wire 1 #+ Bitline2 $end
$var wire 1 ~2 q $end

$scope module ff $end
$var wire 1 ~2 q $end
$var wire 1 B" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 !3 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 >( Bitline1 $end
$var wire 1 $+ Bitline2 $end
$var wire 1 "3 q $end

$scope module ff $end
$var wire 1 "3 q $end
$var wire 1 A" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 #3 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 ?( Bitline1 $end
$var wire 1 %+ Bitline2 $end
$var wire 1 $3 q $end

$scope module ff $end
$var wire 1 $3 q $end
$var wire 1 @" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 %3 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 P' WriteEnable $end
$var wire 1 `' ReadEnable1 $end
$var wire 1 p' ReadEnable2 $end
$var wire 1 @( Bitline1 $end
$var wire 1 &+ Bitline2 $end
$var wire 1 &3 q $end

$scope module ff $end
$var wire 1 &3 q $end
$var wire 1 ?" d $end
$var wire 1 P' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 '3 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 O' WriteReg $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 0( Bitline1 [15] $end
$var wire 1 /( Bitline1 [14] $end
$var wire 1 .( Bitline1 [13] $end
$var wire 1 -( Bitline1 [12] $end
$var wire 1 ,( Bitline1 [11] $end
$var wire 1 +( Bitline1 [10] $end
$var wire 1 *( Bitline1 [9] $end
$var wire 1 )( Bitline1 [8] $end
$var wire 1 (( Bitline1 [7] $end
$var wire 1 '( Bitline1 [6] $end
$var wire 1 &( Bitline1 [5] $end
$var wire 1 %( Bitline1 [4] $end
$var wire 1 $( Bitline1 [3] $end
$var wire 1 #( Bitline1 [2] $end
$var wire 1 "( Bitline1 [1] $end
$var wire 1 !( Bitline1 [0] $end
$var wire 1 t* Bitline2 [15] $end
$var wire 1 s* Bitline2 [14] $end
$var wire 1 r* Bitline2 [13] $end
$var wire 1 q* Bitline2 [12] $end
$var wire 1 p* Bitline2 [11] $end
$var wire 1 o* Bitline2 [10] $end
$var wire 1 n* Bitline2 [9] $end
$var wire 1 m* Bitline2 [8] $end
$var wire 1 l* Bitline2 [7] $end
$var wire 1 k* Bitline2 [6] $end
$var wire 1 j* Bitline2 [5] $end
$var wire 1 i* Bitline2 [4] $end
$var wire 1 h* Bitline2 [3] $end
$var wire 1 g* Bitline2 [2] $end
$var wire 1 f* Bitline2 [1] $end
$var wire 1 e* Bitline2 [0] $end

$scope module bc_0 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 N" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 !( Bitline1 $end
$var wire 1 e* Bitline2 $end
$var wire 1 (3 q $end

$scope module ff $end
$var wire 1 (3 q $end
$var wire 1 N" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 )3 state $end
$upscope $end
$upscope $end

$scope module bc_1 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 M" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 "( Bitline1 $end
$var wire 1 f* Bitline2 $end
$var wire 1 *3 q $end

$scope module ff $end
$var wire 1 *3 q $end
$var wire 1 M" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 +3 state $end
$upscope $end
$upscope $end

$scope module bc_2 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 L" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 #( Bitline1 $end
$var wire 1 g* Bitline2 $end
$var wire 1 ,3 q $end

$scope module ff $end
$var wire 1 ,3 q $end
$var wire 1 L" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 -3 state $end
$upscope $end
$upscope $end

$scope module bc_3 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 K" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 $( Bitline1 $end
$var wire 1 h* Bitline2 $end
$var wire 1 .3 q $end

$scope module ff $end
$var wire 1 .3 q $end
$var wire 1 K" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 /3 state $end
$upscope $end
$upscope $end

$scope module bc_4 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 J" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 %( Bitline1 $end
$var wire 1 i* Bitline2 $end
$var wire 1 03 q $end

$scope module ff $end
$var wire 1 03 q $end
$var wire 1 J" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 13 state $end
$upscope $end
$upscope $end

$scope module bc_5 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 I" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 &( Bitline1 $end
$var wire 1 j* Bitline2 $end
$var wire 1 23 q $end

$scope module ff $end
$var wire 1 23 q $end
$var wire 1 I" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 33 state $end
$upscope $end
$upscope $end

$scope module bc_6 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 H" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 '( Bitline1 $end
$var wire 1 k* Bitline2 $end
$var wire 1 43 q $end

$scope module ff $end
$var wire 1 43 q $end
$var wire 1 H" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 53 state $end
$upscope $end
$upscope $end

$scope module bc_7 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 G" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 (( Bitline1 $end
$var wire 1 l* Bitline2 $end
$var wire 1 63 q $end

$scope module ff $end
$var wire 1 63 q $end
$var wire 1 G" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 73 state $end
$upscope $end
$upscope $end

$scope module bc_8 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 )( Bitline1 $end
$var wire 1 m* Bitline2 $end
$var wire 1 83 q $end

$scope module ff $end
$var wire 1 83 q $end
$var wire 1 F" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 93 state $end
$upscope $end
$upscope $end

$scope module bc_9 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 E" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 *( Bitline1 $end
$var wire 1 n* Bitline2 $end
$var wire 1 :3 q $end

$scope module ff $end
$var wire 1 :3 q $end
$var wire 1 E" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ;3 state $end
$upscope $end
$upscope $end

$scope module bc_10 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 D" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 +( Bitline1 $end
$var wire 1 o* Bitline2 $end
$var wire 1 <3 q $end

$scope module ff $end
$var wire 1 <3 q $end
$var wire 1 D" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 =3 state $end
$upscope $end
$upscope $end

$scope module bc_11 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 C" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 ,( Bitline1 $end
$var wire 1 p* Bitline2 $end
$var wire 1 >3 q $end

$scope module ff $end
$var wire 1 >3 q $end
$var wire 1 C" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ?3 state $end
$upscope $end
$upscope $end

$scope module bc_12 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 B" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 -( Bitline1 $end
$var wire 1 q* Bitline2 $end
$var wire 1 @3 q $end

$scope module ff $end
$var wire 1 @3 q $end
$var wire 1 B" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 A3 state $end
$upscope $end
$upscope $end

$scope module bc_13 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 A" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 .( Bitline1 $end
$var wire 1 r* Bitline2 $end
$var wire 1 B3 q $end

$scope module ff $end
$var wire 1 B3 q $end
$var wire 1 A" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 C3 state $end
$upscope $end
$upscope $end

$scope module bc_14 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 @" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 /( Bitline1 $end
$var wire 1 s* Bitline2 $end
$var wire 1 D3 q $end

$scope module ff $end
$var wire 1 D3 q $end
$var wire 1 @" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 E3 state $end
$upscope $end
$upscope $end

$scope module bc_15 $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 ?" D $end
$var wire 1 O' WriteEnable $end
$var wire 1 _' ReadEnable1 $end
$var wire 1 o' ReadEnable2 $end
$var wire 1 0( Bitline1 $end
$var wire 1 t* Bitline2 $end
$var wire 1 F3 q $end

$scope module ff $end
$var wire 1 F3 q $end
$var wire 1 ?" d $end
$var wire 1 O' wen $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 G3 state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module alu $end
$var wire 1 }! ALU_in1 [15] $end
$var wire 1 ~! ALU_in1 [14] $end
$var wire 1 !" ALU_in1 [13] $end
$var wire 1 "" ALU_in1 [12] $end
$var wire 1 #" ALU_in1 [11] $end
$var wire 1 $" ALU_in1 [10] $end
$var wire 1 %" ALU_in1 [9] $end
$var wire 1 &" ALU_in1 [8] $end
$var wire 1 '" ALU_in1 [7] $end
$var wire 1 (" ALU_in1 [6] $end
$var wire 1 )" ALU_in1 [5] $end
$var wire 1 *" ALU_in1 [4] $end
$var wire 1 +" ALU_in1 [3] $end
$var wire 1 ," ALU_in1 [2] $end
$var wire 1 -" ALU_in1 [1] $end
$var wire 1 ." ALU_in1 [0] $end
$var wire 1 p" ALU_in2 [15] $end
$var wire 1 q" ALU_in2 [14] $end
$var wire 1 r" ALU_in2 [13] $end
$var wire 1 s" ALU_in2 [12] $end
$var wire 1 t" ALU_in2 [11] $end
$var wire 1 u" ALU_in2 [10] $end
$var wire 1 v" ALU_in2 [9] $end
$var wire 1 w" ALU_in2 [8] $end
$var wire 1 x" ALU_in2 [7] $end
$var wire 1 y" ALU_in2 [6] $end
$var wire 1 z" ALU_in2 [5] $end
$var wire 1 {" ALU_in2 [4] $end
$var wire 1 |" ALU_in2 [3] $end
$var wire 1 }" ALU_in2 [2] $end
$var wire 1 ~" ALU_in2 [1] $end
$var wire 1 !# ALU_in2 [0] $end
$var wire 1 j! op [2] $end
$var wire 1 k! op [1] $end
$var wire 1 l! op [0] $end
$var wire 1 "# ALU_out [15] $end
$var wire 1 ## ALU_out [14] $end
$var wire 1 $# ALU_out [13] $end
$var wire 1 %# ALU_out [12] $end
$var wire 1 &# ALU_out [11] $end
$var wire 1 '# ALU_out [10] $end
$var wire 1 (# ALU_out [9] $end
$var wire 1 )# ALU_out [8] $end
$var wire 1 *# ALU_out [7] $end
$var wire 1 +# ALU_out [6] $end
$var wire 1 ,# ALU_out [5] $end
$var wire 1 -# ALU_out [4] $end
$var wire 1 .# ALU_out [3] $end
$var wire 1 /# ALU_out [2] $end
$var wire 1 0# ALU_out [1] $end
$var wire 1 1# ALU_out [0] $end
$var wire 1 [# flag [2] $end
$var wire 1 \# flag [1] $end
$var wire 1 ]# flag [0] $end
$var wire 1 ^# flag_write [2] $end
$var wire 1 _# flag_write [1] $end
$var wire 1 `# flag_write [0] $end
$var wire 1 H3 ADDSUB_out [15] $end
$var wire 1 I3 ADDSUB_out [14] $end
$var wire 1 J3 ADDSUB_out [13] $end
$var wire 1 K3 ADDSUB_out [12] $end
$var wire 1 L3 ADDSUB_out [11] $end
$var wire 1 M3 ADDSUB_out [10] $end
$var wire 1 N3 ADDSUB_out [9] $end
$var wire 1 O3 ADDSUB_out [8] $end
$var wire 1 P3 ADDSUB_out [7] $end
$var wire 1 Q3 ADDSUB_out [6] $end
$var wire 1 R3 ADDSUB_out [5] $end
$var wire 1 S3 ADDSUB_out [4] $end
$var wire 1 T3 ADDSUB_out [3] $end
$var wire 1 U3 ADDSUB_out [2] $end
$var wire 1 V3 ADDSUB_out [1] $end
$var wire 1 W3 ADDSUB_out [0] $end
$var wire 1 X3 SHIFTER_out [15] $end
$var wire 1 Y3 SHIFTER_out [14] $end
$var wire 1 Z3 SHIFTER_out [13] $end
$var wire 1 [3 SHIFTER_out [12] $end
$var wire 1 \3 SHIFTER_out [11] $end
$var wire 1 ]3 SHIFTER_out [10] $end
$var wire 1 ^3 SHIFTER_out [9] $end
$var wire 1 _3 SHIFTER_out [8] $end
$var wire 1 `3 SHIFTER_out [7] $end
$var wire 1 a3 SHIFTER_out [6] $end
$var wire 1 b3 SHIFTER_out [5] $end
$var wire 1 c3 SHIFTER_out [4] $end
$var wire 1 d3 SHIFTER_out [3] $end
$var wire 1 e3 SHIFTER_out [2] $end
$var wire 1 f3 SHIFTER_out [1] $end
$var wire 1 g3 SHIFTER_out [0] $end
$var wire 1 h3 xor_out [15] $end
$var wire 1 i3 xor_out [14] $end
$var wire 1 j3 xor_out [13] $end
$var wire 1 k3 xor_out [12] $end
$var wire 1 l3 xor_out [11] $end
$var wire 1 m3 xor_out [10] $end
$var wire 1 n3 xor_out [9] $end
$var wire 1 o3 xor_out [8] $end
$var wire 1 p3 xor_out [7] $end
$var wire 1 q3 xor_out [6] $end
$var wire 1 r3 xor_out [5] $end
$var wire 1 s3 xor_out [4] $end
$var wire 1 t3 xor_out [3] $end
$var wire 1 u3 xor_out [2] $end
$var wire 1 v3 xor_out [1] $end
$var wire 1 w3 xor_out [0] $end
$var wire 1 x3 red [15] $end
$var wire 1 y3 red [14] $end
$var wire 1 z3 red [13] $end
$var wire 1 {3 red [12] $end
$var wire 1 |3 red [11] $end
$var wire 1 }3 red [10] $end
$var wire 1 ~3 red [9] $end
$var wire 1 !4 red [8] $end
$var wire 1 "4 red [7] $end
$var wire 1 #4 red [6] $end
$var wire 1 $4 red [5] $end
$var wire 1 %4 red [4] $end
$var wire 1 &4 red [3] $end
$var wire 1 '4 red [2] $end
$var wire 1 (4 red [1] $end
$var wire 1 )4 red [0] $end
$var wire 1 *4 paddsb [15] $end
$var wire 1 +4 paddsb [14] $end
$var wire 1 ,4 paddsb [13] $end
$var wire 1 -4 paddsb [12] $end
$var wire 1 .4 paddsb [11] $end
$var wire 1 /4 paddsb [10] $end
$var wire 1 04 paddsb [9] $end
$var wire 1 14 paddsb [8] $end
$var wire 1 24 paddsb [7] $end
$var wire 1 34 paddsb [6] $end
$var wire 1 44 paddsb [5] $end
$var wire 1 54 paddsb [4] $end
$var wire 1 64 paddsb [3] $end
$var wire 1 74 paddsb [2] $end
$var wire 1 84 paddsb [1] $end
$var wire 1 94 paddsb [0] $end

$scope module addsub_16b $end
$var wire 1 }! A [15] $end
$var wire 1 ~! A [14] $end
$var wire 1 !" A [13] $end
$var wire 1 "" A [12] $end
$var wire 1 #" A [11] $end
$var wire 1 $" A [10] $end
$var wire 1 %" A [9] $end
$var wire 1 &" A [8] $end
$var wire 1 '" A [7] $end
$var wire 1 (" A [6] $end
$var wire 1 )" A [5] $end
$var wire 1 *" A [4] $end
$var wire 1 +" A [3] $end
$var wire 1 ," A [2] $end
$var wire 1 -" A [1] $end
$var wire 1 ." A [0] $end
$var wire 1 p" B [15] $end
$var wire 1 q" B [14] $end
$var wire 1 r" B [13] $end
$var wire 1 s" B [12] $end
$var wire 1 t" B [11] $end
$var wire 1 u" B [10] $end
$var wire 1 v" B [9] $end
$var wire 1 w" B [8] $end
$var wire 1 x" B [7] $end
$var wire 1 y" B [6] $end
$var wire 1 z" B [5] $end
$var wire 1 {" B [4] $end
$var wire 1 |" B [3] $end
$var wire 1 }" B [2] $end
$var wire 1 ~" B [1] $end
$var wire 1 !# B [0] $end
$var wire 1 l! sub $end
$var wire 1 H3 S [15] $end
$var wire 1 I3 S [14] $end
$var wire 1 J3 S [13] $end
$var wire 1 K3 S [12] $end
$var wire 1 L3 S [11] $end
$var wire 1 M3 S [10] $end
$var wire 1 N3 S [9] $end
$var wire 1 O3 S [8] $end
$var wire 1 P3 S [7] $end
$var wire 1 Q3 S [6] $end
$var wire 1 R3 S [5] $end
$var wire 1 S3 S [4] $end
$var wire 1 T3 S [3] $end
$var wire 1 U3 S [2] $end
$var wire 1 V3 S [1] $end
$var wire 1 W3 S [0] $end
$var wire 1 ]# ovfl $end
$var wire 1 [# neg $end
$var wire 1 :4 B_in [15] $end
$var wire 1 ;4 B_in [14] $end
$var wire 1 <4 B_in [13] $end
$var wire 1 =4 B_in [12] $end
$var wire 1 >4 B_in [11] $end
$var wire 1 ?4 B_in [10] $end
$var wire 1 @4 B_in [9] $end
$var wire 1 A4 B_in [8] $end
$var wire 1 B4 B_in [7] $end
$var wire 1 C4 B_in [6] $end
$var wire 1 D4 B_in [5] $end
$var wire 1 E4 B_in [4] $end
$var wire 1 F4 B_in [3] $end
$var wire 1 G4 B_in [2] $end
$var wire 1 H4 B_in [1] $end
$var wire 1 I4 B_in [0] $end
$var wire 1 J4 addsub_out [15] $end
$var wire 1 K4 addsub_out [14] $end
$var wire 1 L4 addsub_out [13] $end
$var wire 1 M4 addsub_out [12] $end
$var wire 1 N4 addsub_out [11] $end
$var wire 1 O4 addsub_out [10] $end
$var wire 1 P4 addsub_out [9] $end
$var wire 1 Q4 addsub_out [8] $end
$var wire 1 R4 addsub_out [7] $end
$var wire 1 S4 addsub_out [6] $end
$var wire 1 T4 addsub_out [5] $end
$var wire 1 U4 addsub_out [4] $end
$var wire 1 V4 addsub_out [3] $end
$var wire 1 W4 addsub_out [2] $end
$var wire 1 X4 addsub_out [1] $end
$var wire 1 Y4 addsub_out [0] $end
$var wire 1 Z4 c [3] $end
$var wire 1 [4 c [2] $end
$var wire 1 \4 c [1] $end
$var wire 1 ]4 c [0] $end
$var wire 1 ^4 g [3] $end
$var wire 1 _4 g [2] $end
$var wire 1 `4 g [1] $end
$var wire 1 a4 g [0] $end
$var wire 1 b4 p [3] $end
$var wire 1 c4 p [2] $end
$var wire 1 d4 p [1] $end
$var wire 1 e4 p [0] $end
$var wire 1 f4 G $end
$var wire 1 g4 P $end
$var wire 1 h4 both_neg $end
$var wire 1 i4 both_pos $end
$var wire 1 j4 sat_neg $end
$var wire 1 k4 sat_pos $end

$scope module cla_0_3 $end
$var wire 1 +" a [3] $end
$var wire 1 ," a [2] $end
$var wire 1 -" a [1] $end
$var wire 1 ." a [0] $end
$var wire 1 F4 b [3] $end
$var wire 1 G4 b [2] $end
$var wire 1 H4 b [1] $end
$var wire 1 I4 b [0] $end
$var wire 1 ]4 c_in $end
$var wire 1 V4 s [3] $end
$var wire 1 W4 s [2] $end
$var wire 1 X4 s [1] $end
$var wire 1 Y4 s [0] $end
$var wire 1 e4 pg_out $end
$var wire 1 a4 gg_out $end
$var wire 1 l4 c [3] $end
$var wire 1 m4 c [2] $end
$var wire 1 n4 c [1] $end
$var wire 1 o4 c [0] $end
$var wire 1 p4 g [3] $end
$var wire 1 q4 g [2] $end
$var wire 1 r4 g [1] $end
$var wire 1 s4 g [0] $end
$var wire 1 t4 p [3] $end
$var wire 1 u4 p [2] $end
$var wire 1 v4 p [1] $end
$var wire 1 w4 p [0] $end

$scope module cla0 $end
$var wire 1 ." a $end
$var wire 1 I4 b $end
$var wire 1 o4 c_in $end
$var wire 1 s4 g_out $end
$var wire 1 w4 p_out $end
$var wire 1 Y4 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 -" a $end
$var wire 1 H4 b $end
$var wire 1 n4 c_in $end
$var wire 1 r4 g_out $end
$var wire 1 v4 p_out $end
$var wire 1 X4 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 ," a $end
$var wire 1 G4 b $end
$var wire 1 m4 c_in $end
$var wire 1 q4 g_out $end
$var wire 1 u4 p_out $end
$var wire 1 W4 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 +" a $end
$var wire 1 F4 b $end
$var wire 1 l4 c_in $end
$var wire 1 p4 g_out $end
$var wire 1 t4 p_out $end
$var wire 1 V4 s $end
$upscope $end
$upscope $end

$scope module cla_4_7 $end
$var wire 1 '" a [3] $end
$var wire 1 (" a [2] $end
$var wire 1 )" a [1] $end
$var wire 1 *" a [0] $end
$var wire 1 B4 b [3] $end
$var wire 1 C4 b [2] $end
$var wire 1 D4 b [1] $end
$var wire 1 E4 b [0] $end
$var wire 1 \4 c_in $end
$var wire 1 R4 s [3] $end
$var wire 1 S4 s [2] $end
$var wire 1 T4 s [1] $end
$var wire 1 U4 s [0] $end
$var wire 1 d4 pg_out $end
$var wire 1 `4 gg_out $end
$var wire 1 x4 c [3] $end
$var wire 1 y4 c [2] $end
$var wire 1 z4 c [1] $end
$var wire 1 {4 c [0] $end
$var wire 1 |4 g [3] $end
$var wire 1 }4 g [2] $end
$var wire 1 ~4 g [1] $end
$var wire 1 !5 g [0] $end
$var wire 1 "5 p [3] $end
$var wire 1 #5 p [2] $end
$var wire 1 $5 p [1] $end
$var wire 1 %5 p [0] $end

$scope module cla0 $end
$var wire 1 *" a $end
$var wire 1 E4 b $end
$var wire 1 {4 c_in $end
$var wire 1 !5 g_out $end
$var wire 1 %5 p_out $end
$var wire 1 U4 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 )" a $end
$var wire 1 D4 b $end
$var wire 1 z4 c_in $end
$var wire 1 ~4 g_out $end
$var wire 1 $5 p_out $end
$var wire 1 T4 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 (" a $end
$var wire 1 C4 b $end
$var wire 1 y4 c_in $end
$var wire 1 }4 g_out $end
$var wire 1 #5 p_out $end
$var wire 1 S4 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 '" a $end
$var wire 1 B4 b $end
$var wire 1 x4 c_in $end
$var wire 1 |4 g_out $end
$var wire 1 "5 p_out $end
$var wire 1 R4 s $end
$upscope $end
$upscope $end

$scope module cla_8_11 $end
$var wire 1 #" a [3] $end
$var wire 1 $" a [2] $end
$var wire 1 %" a [1] $end
$var wire 1 &" a [0] $end
$var wire 1 >4 b [3] $end
$var wire 1 ?4 b [2] $end
$var wire 1 @4 b [1] $end
$var wire 1 A4 b [0] $end
$var wire 1 [4 c_in $end
$var wire 1 N4 s [3] $end
$var wire 1 O4 s [2] $end
$var wire 1 P4 s [1] $end
$var wire 1 Q4 s [0] $end
$var wire 1 c4 pg_out $end
$var wire 1 _4 gg_out $end
$var wire 1 &5 c [3] $end
$var wire 1 '5 c [2] $end
$var wire 1 (5 c [1] $end
$var wire 1 )5 c [0] $end
$var wire 1 *5 g [3] $end
$var wire 1 +5 g [2] $end
$var wire 1 ,5 g [1] $end
$var wire 1 -5 g [0] $end
$var wire 1 .5 p [3] $end
$var wire 1 /5 p [2] $end
$var wire 1 05 p [1] $end
$var wire 1 15 p [0] $end

$scope module cla0 $end
$var wire 1 &" a $end
$var wire 1 A4 b $end
$var wire 1 )5 c_in $end
$var wire 1 -5 g_out $end
$var wire 1 15 p_out $end
$var wire 1 Q4 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 %" a $end
$var wire 1 @4 b $end
$var wire 1 (5 c_in $end
$var wire 1 ,5 g_out $end
$var wire 1 05 p_out $end
$var wire 1 P4 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 $" a $end
$var wire 1 ?4 b $end
$var wire 1 '5 c_in $end
$var wire 1 +5 g_out $end
$var wire 1 /5 p_out $end
$var wire 1 O4 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 #" a $end
$var wire 1 >4 b $end
$var wire 1 &5 c_in $end
$var wire 1 *5 g_out $end
$var wire 1 .5 p_out $end
$var wire 1 N4 s $end
$upscope $end
$upscope $end

$scope module cla_12_15 $end
$var wire 1 }! a [3] $end
$var wire 1 ~! a [2] $end
$var wire 1 !" a [1] $end
$var wire 1 "" a [0] $end
$var wire 1 :4 b [3] $end
$var wire 1 ;4 b [2] $end
$var wire 1 <4 b [1] $end
$var wire 1 =4 b [0] $end
$var wire 1 Z4 c_in $end
$var wire 1 J4 s [3] $end
$var wire 1 K4 s [2] $end
$var wire 1 L4 s [1] $end
$var wire 1 M4 s [0] $end
$var wire 1 b4 pg_out $end
$var wire 1 ^4 gg_out $end
$var wire 1 25 c [3] $end
$var wire 1 35 c [2] $end
$var wire 1 45 c [1] $end
$var wire 1 55 c [0] $end
$var wire 1 65 g [3] $end
$var wire 1 75 g [2] $end
$var wire 1 85 g [1] $end
$var wire 1 95 g [0] $end
$var wire 1 :5 p [3] $end
$var wire 1 ;5 p [2] $end
$var wire 1 <5 p [1] $end
$var wire 1 =5 p [0] $end

$scope module cla0 $end
$var wire 1 "" a $end
$var wire 1 =4 b $end
$var wire 1 55 c_in $end
$var wire 1 95 g_out $end
$var wire 1 =5 p_out $end
$var wire 1 M4 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 !" a $end
$var wire 1 <4 b $end
$var wire 1 45 c_in $end
$var wire 1 85 g_out $end
$var wire 1 <5 p_out $end
$var wire 1 L4 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 ~! a $end
$var wire 1 ;4 b $end
$var wire 1 35 c_in $end
$var wire 1 75 g_out $end
$var wire 1 ;5 p_out $end
$var wire 1 K4 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 }! a $end
$var wire 1 :4 b $end
$var wire 1 25 c_in $end
$var wire 1 65 g_out $end
$var wire 1 :5 p_out $end
$var wire 1 J4 s $end
$upscope $end
$upscope $end
$upscope $end

$scope module shifter_16b $end
$var wire 1 }! Shift_In [15] $end
$var wire 1 ~! Shift_In [14] $end
$var wire 1 !" Shift_In [13] $end
$var wire 1 "" Shift_In [12] $end
$var wire 1 #" Shift_In [11] $end
$var wire 1 $" Shift_In [10] $end
$var wire 1 %" Shift_In [9] $end
$var wire 1 &" Shift_In [8] $end
$var wire 1 '" Shift_In [7] $end
$var wire 1 (" Shift_In [6] $end
$var wire 1 )" Shift_In [5] $end
$var wire 1 *" Shift_In [4] $end
$var wire 1 +" Shift_In [3] $end
$var wire 1 ," Shift_In [2] $end
$var wire 1 -" Shift_In [1] $end
$var wire 1 ." Shift_In [0] $end
$var wire 1 |" Shift_Val [3] $end
$var wire 1 }" Shift_Val [2] $end
$var wire 1 ~" Shift_Val [1] $end
$var wire 1 !# Shift_Val [0] $end
$var wire 1 k! Mode [1] $end
$var wire 1 l! Mode [0] $end
$var wire 1 X3 Shift_Out [15] $end
$var wire 1 Y3 Shift_Out [14] $end
$var wire 1 Z3 Shift_Out [13] $end
$var wire 1 [3 Shift_Out [12] $end
$var wire 1 \3 Shift_Out [11] $end
$var wire 1 ]3 Shift_Out [10] $end
$var wire 1 ^3 Shift_Out [9] $end
$var wire 1 _3 Shift_Out [8] $end
$var wire 1 `3 Shift_Out [7] $end
$var wire 1 a3 Shift_Out [6] $end
$var wire 1 b3 Shift_Out [5] $end
$var wire 1 c3 Shift_Out [4] $end
$var wire 1 d3 Shift_Out [3] $end
$var wire 1 e3 Shift_Out [2] $end
$var wire 1 f3 Shift_Out [1] $end
$var wire 1 g3 Shift_Out [0] $end
$var wire 1 >5 shift1 [15] $end
$var wire 1 ?5 shift1 [14] $end
$var wire 1 @5 shift1 [13] $end
$var wire 1 A5 shift1 [12] $end
$var wire 1 B5 shift1 [11] $end
$var wire 1 C5 shift1 [10] $end
$var wire 1 D5 shift1 [9] $end
$var wire 1 E5 shift1 [8] $end
$var wire 1 F5 shift1 [7] $end
$var wire 1 G5 shift1 [6] $end
$var wire 1 H5 shift1 [5] $end
$var wire 1 I5 shift1 [4] $end
$var wire 1 J5 shift1 [3] $end
$var wire 1 K5 shift1 [2] $end
$var wire 1 L5 shift1 [1] $end
$var wire 1 M5 shift1 [0] $end
$var wire 1 N5 shift2 [15] $end
$var wire 1 O5 shift2 [14] $end
$var wire 1 P5 shift2 [13] $end
$var wire 1 Q5 shift2 [12] $end
$var wire 1 R5 shift2 [11] $end
$var wire 1 S5 shift2 [10] $end
$var wire 1 T5 shift2 [9] $end
$var wire 1 U5 shift2 [8] $end
$var wire 1 V5 shift2 [7] $end
$var wire 1 W5 shift2 [6] $end
$var wire 1 X5 shift2 [5] $end
$var wire 1 Y5 shift2 [4] $end
$var wire 1 Z5 shift2 [3] $end
$var wire 1 [5 shift2 [2] $end
$var wire 1 \5 shift2 [1] $end
$var wire 1 ]5 shift2 [0] $end
$var wire 1 ^5 shift4 [15] $end
$var wire 1 _5 shift4 [14] $end
$var wire 1 `5 shift4 [13] $end
$var wire 1 a5 shift4 [12] $end
$var wire 1 b5 shift4 [11] $end
$var wire 1 c5 shift4 [10] $end
$var wire 1 d5 shift4 [9] $end
$var wire 1 e5 shift4 [8] $end
$var wire 1 f5 shift4 [7] $end
$var wire 1 g5 shift4 [6] $end
$var wire 1 h5 shift4 [5] $end
$var wire 1 i5 shift4 [4] $end
$var wire 1 j5 shift4 [3] $end
$var wire 1 k5 shift4 [2] $end
$var wire 1 l5 shift4 [1] $end
$var wire 1 m5 shift4 [0] $end
$var wire 1 n5 shift8 [15] $end
$var wire 1 o5 shift8 [14] $end
$var wire 1 p5 shift8 [13] $end
$var wire 1 q5 shift8 [12] $end
$var wire 1 r5 shift8 [11] $end
$var wire 1 s5 shift8 [10] $end
$var wire 1 t5 shift8 [9] $end
$var wire 1 u5 shift8 [8] $end
$var wire 1 v5 shift8 [7] $end
$var wire 1 w5 shift8 [6] $end
$var wire 1 x5 shift8 [5] $end
$var wire 1 y5 shift8 [4] $end
$var wire 1 z5 shift8 [3] $end
$var wire 1 {5 shift8 [2] $end
$var wire 1 |5 shift8 [1] $end
$var wire 1 }5 shift8 [0] $end
$var wire 1 ~5 level1_out [15] $end
$var wire 1 !6 level1_out [14] $end
$var wire 1 "6 level1_out [13] $end
$var wire 1 #6 level1_out [12] $end
$var wire 1 $6 level1_out [11] $end
$var wire 1 %6 level1_out [10] $end
$var wire 1 &6 level1_out [9] $end
$var wire 1 '6 level1_out [8] $end
$var wire 1 (6 level1_out [7] $end
$var wire 1 )6 level1_out [6] $end
$var wire 1 *6 level1_out [5] $end
$var wire 1 +6 level1_out [4] $end
$var wire 1 ,6 level1_out [3] $end
$var wire 1 -6 level1_out [2] $end
$var wire 1 .6 level1_out [1] $end
$var wire 1 /6 level1_out [0] $end
$var wire 1 06 level2_out [15] $end
$var wire 1 16 level2_out [14] $end
$var wire 1 26 level2_out [13] $end
$var wire 1 36 level2_out [12] $end
$var wire 1 46 level2_out [11] $end
$var wire 1 56 level2_out [10] $end
$var wire 1 66 level2_out [9] $end
$var wire 1 76 level2_out [8] $end
$var wire 1 86 level2_out [7] $end
$var wire 1 96 level2_out [6] $end
$var wire 1 :6 level2_out [5] $end
$var wire 1 ;6 level2_out [4] $end
$var wire 1 <6 level2_out [3] $end
$var wire 1 =6 level2_out [2] $end
$var wire 1 >6 level2_out [1] $end
$var wire 1 ?6 level2_out [0] $end
$var wire 1 @6 level4_out [15] $end
$var wire 1 A6 level4_out [14] $end
$var wire 1 B6 level4_out [13] $end
$var wire 1 C6 level4_out [12] $end
$var wire 1 D6 level4_out [11] $end
$var wire 1 E6 level4_out [10] $end
$var wire 1 F6 level4_out [9] $end
$var wire 1 G6 level4_out [8] $end
$var wire 1 H6 level4_out [7] $end
$var wire 1 I6 level4_out [6] $end
$var wire 1 J6 level4_out [5] $end
$var wire 1 K6 level4_out [4] $end
$var wire 1 L6 level4_out [3] $end
$var wire 1 M6 level4_out [2] $end
$var wire 1 N6 level4_out [1] $end
$var wire 1 O6 level4_out [0] $end

$scope module m1_0 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 P6 i0 $end
$var wire 1 -" i1 $end
$var wire 1 -" i2 $end
$var wire 1 Q6 i3 $end
$var wire 1 M5 out $end
$var reg 1 R6 inter $end
$upscope $end

$scope module m1_1 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ." i0 $end
$var wire 1 ," i1 $end
$var wire 1 ," i2 $end
$var wire 1 ." i3 $end
$var wire 1 L5 out $end
$var reg 1 S6 inter $end
$upscope $end

$scope module m1_2 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 -" i0 $end
$var wire 1 +" i1 $end
$var wire 1 +" i2 $end
$var wire 1 -" i3 $end
$var wire 1 K5 out $end
$var reg 1 T6 inter $end
$upscope $end

$scope module m1_3 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ," i0 $end
$var wire 1 *" i1 $end
$var wire 1 *" i2 $end
$var wire 1 ," i3 $end
$var wire 1 J5 out $end
$var reg 1 U6 inter $end
$upscope $end

$scope module m1_4 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 +" i0 $end
$var wire 1 )" i1 $end
$var wire 1 )" i2 $end
$var wire 1 +" i3 $end
$var wire 1 I5 out $end
$var reg 1 V6 inter $end
$upscope $end

$scope module m1_5 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 *" i0 $end
$var wire 1 (" i1 $end
$var wire 1 (" i2 $end
$var wire 1 *" i3 $end
$var wire 1 H5 out $end
$var reg 1 W6 inter $end
$upscope $end

$scope module m1_6 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 )" i0 $end
$var wire 1 '" i1 $end
$var wire 1 '" i2 $end
$var wire 1 )" i3 $end
$var wire 1 G5 out $end
$var reg 1 X6 inter $end
$upscope $end

$scope module m1_7 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 (" i0 $end
$var wire 1 &" i1 $end
$var wire 1 &" i2 $end
$var wire 1 (" i3 $end
$var wire 1 F5 out $end
$var reg 1 Y6 inter $end
$upscope $end

$scope module m1_8 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 '" i0 $end
$var wire 1 %" i1 $end
$var wire 1 %" i2 $end
$var wire 1 '" i3 $end
$var wire 1 E5 out $end
$var reg 1 Z6 inter $end
$upscope $end

$scope module m1_9 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 &" i0 $end
$var wire 1 $" i1 $end
$var wire 1 $" i2 $end
$var wire 1 &" i3 $end
$var wire 1 D5 out $end
$var reg 1 [6 inter $end
$upscope $end

$scope module m1_10 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 %" i0 $end
$var wire 1 #" i1 $end
$var wire 1 #" i2 $end
$var wire 1 %" i3 $end
$var wire 1 C5 out $end
$var reg 1 \6 inter $end
$upscope $end

$scope module m1_11 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 $" i0 $end
$var wire 1 "" i1 $end
$var wire 1 "" i2 $end
$var wire 1 $" i3 $end
$var wire 1 B5 out $end
$var reg 1 ]6 inter $end
$upscope $end

$scope module m1_12 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 #" i0 $end
$var wire 1 !" i1 $end
$var wire 1 !" i2 $end
$var wire 1 #" i3 $end
$var wire 1 A5 out $end
$var reg 1 ^6 inter $end
$upscope $end

$scope module m1_13 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 "" i0 $end
$var wire 1 ~! i1 $end
$var wire 1 ~! i2 $end
$var wire 1 "" i3 $end
$var wire 1 @5 out $end
$var reg 1 _6 inter $end
$upscope $end

$scope module m1_14 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 !" i0 $end
$var wire 1 }! i1 $end
$var wire 1 }! i2 $end
$var wire 1 !" i3 $end
$var wire 1 ?5 out $end
$var reg 1 `6 inter $end
$upscope $end

$scope module m1_15 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ~! i0 $end
$var wire 1 }! i1 $end
$var wire 1 ." i2 $end
$var wire 1 ~! i3 $end
$var wire 1 >5 out $end
$var reg 1 a6 inter $end
$upscope $end

$scope module sel_shift1 $end
$var wire 1 }! i0 [15] $end
$var wire 1 ~! i0 [14] $end
$var wire 1 !" i0 [13] $end
$var wire 1 "" i0 [12] $end
$var wire 1 #" i0 [11] $end
$var wire 1 $" i0 [10] $end
$var wire 1 %" i0 [9] $end
$var wire 1 &" i0 [8] $end
$var wire 1 '" i0 [7] $end
$var wire 1 (" i0 [6] $end
$var wire 1 )" i0 [5] $end
$var wire 1 *" i0 [4] $end
$var wire 1 +" i0 [3] $end
$var wire 1 ," i0 [2] $end
$var wire 1 -" i0 [1] $end
$var wire 1 ." i0 [0] $end
$var wire 1 >5 i1 [15] $end
$var wire 1 ?5 i1 [14] $end
$var wire 1 @5 i1 [13] $end
$var wire 1 A5 i1 [12] $end
$var wire 1 B5 i1 [11] $end
$var wire 1 C5 i1 [10] $end
$var wire 1 D5 i1 [9] $end
$var wire 1 E5 i1 [8] $end
$var wire 1 F5 i1 [7] $end
$var wire 1 G5 i1 [6] $end
$var wire 1 H5 i1 [5] $end
$var wire 1 I5 i1 [4] $end
$var wire 1 J5 i1 [3] $end
$var wire 1 K5 i1 [2] $end
$var wire 1 L5 i1 [1] $end
$var wire 1 M5 i1 [0] $end
$var wire 1 !# sel $end
$var wire 1 ~5 out [15] $end
$var wire 1 !6 out [14] $end
$var wire 1 "6 out [13] $end
$var wire 1 #6 out [12] $end
$var wire 1 $6 out [11] $end
$var wire 1 %6 out [10] $end
$var wire 1 &6 out [9] $end
$var wire 1 '6 out [8] $end
$var wire 1 (6 out [7] $end
$var wire 1 )6 out [6] $end
$var wire 1 *6 out [5] $end
$var wire 1 +6 out [4] $end
$var wire 1 ,6 out [3] $end
$var wire 1 -6 out [2] $end
$var wire 1 .6 out [1] $end
$var wire 1 /6 out [0] $end
$var reg 16 b6 inter [15:0] $end
$upscope $end

$scope module m2_0 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 c6 i0 $end
$var wire 1 -6 i1 $end
$var wire 1 -6 i2 $end
$var wire 1 d6 i3 $end
$var wire 1 ]5 out $end
$var reg 1 e6 inter $end
$upscope $end

$scope module m2_1 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 f6 i0 $end
$var wire 1 ,6 i1 $end
$var wire 1 ,6 i2 $end
$var wire 1 g6 i3 $end
$var wire 1 \5 out $end
$var reg 1 h6 inter $end
$upscope $end

$scope module m2_2 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 /6 i0 $end
$var wire 1 +6 i1 $end
$var wire 1 +6 i2 $end
$var wire 1 /6 i3 $end
$var wire 1 [5 out $end
$var reg 1 i6 inter $end
$upscope $end

$scope module m2_3 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 .6 i0 $end
$var wire 1 *6 i1 $end
$var wire 1 *6 i2 $end
$var wire 1 .6 i3 $end
$var wire 1 Z5 out $end
$var reg 1 j6 inter $end
$upscope $end

$scope module m2_4 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 -6 i0 $end
$var wire 1 )6 i1 $end
$var wire 1 )6 i2 $end
$var wire 1 -6 i3 $end
$var wire 1 Y5 out $end
$var reg 1 k6 inter $end
$upscope $end

$scope module m2_5 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ,6 i0 $end
$var wire 1 (6 i1 $end
$var wire 1 (6 i2 $end
$var wire 1 ,6 i3 $end
$var wire 1 X5 out $end
$var reg 1 l6 inter $end
$upscope $end

$scope module m2_6 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 +6 i0 $end
$var wire 1 '6 i1 $end
$var wire 1 '6 i2 $end
$var wire 1 +6 i3 $end
$var wire 1 W5 out $end
$var reg 1 m6 inter $end
$upscope $end

$scope module m2_7 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 *6 i0 $end
$var wire 1 &6 i1 $end
$var wire 1 &6 i2 $end
$var wire 1 *6 i3 $end
$var wire 1 V5 out $end
$var reg 1 n6 inter $end
$upscope $end

$scope module m2_8 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 )6 i0 $end
$var wire 1 %6 i1 $end
$var wire 1 %6 i2 $end
$var wire 1 )6 i3 $end
$var wire 1 U5 out $end
$var reg 1 o6 inter $end
$upscope $end

$scope module m2_9 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 (6 i0 $end
$var wire 1 $6 i1 $end
$var wire 1 $6 i2 $end
$var wire 1 (6 i3 $end
$var wire 1 T5 out $end
$var reg 1 p6 inter $end
$upscope $end

$scope module m2_10 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 '6 i0 $end
$var wire 1 #6 i1 $end
$var wire 1 #6 i2 $end
$var wire 1 '6 i3 $end
$var wire 1 S5 out $end
$var reg 1 q6 inter $end
$upscope $end

$scope module m2_11 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 &6 i0 $end
$var wire 1 "6 i1 $end
$var wire 1 "6 i2 $end
$var wire 1 &6 i3 $end
$var wire 1 R5 out $end
$var reg 1 r6 inter $end
$upscope $end

$scope module m2_12 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 %6 i0 $end
$var wire 1 !6 i1 $end
$var wire 1 !6 i2 $end
$var wire 1 %6 i3 $end
$var wire 1 Q5 out $end
$var reg 1 s6 inter $end
$upscope $end

$scope module m2_13 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 $6 i0 $end
$var wire 1 ~5 i1 $end
$var wire 1 ~5 i2 $end
$var wire 1 $6 i3 $end
$var wire 1 P5 out $end
$var reg 1 t6 inter $end
$upscope $end

$scope module m2_14 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 #6 i0 $end
$var wire 1 ~5 i1 $end
$var wire 1 /6 i2 $end
$var wire 1 #6 i3 $end
$var wire 1 O5 out $end
$var reg 1 u6 inter $end
$upscope $end

$scope module m2_15 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 "6 i0 $end
$var wire 1 ~5 i1 $end
$var wire 1 .6 i2 $end
$var wire 1 "6 i3 $end
$var wire 1 N5 out $end
$var reg 1 v6 inter $end
$upscope $end

$scope module sel_shift2 $end
$var wire 1 ~5 i0 [15] $end
$var wire 1 !6 i0 [14] $end
$var wire 1 "6 i0 [13] $end
$var wire 1 #6 i0 [12] $end
$var wire 1 $6 i0 [11] $end
$var wire 1 %6 i0 [10] $end
$var wire 1 &6 i0 [9] $end
$var wire 1 '6 i0 [8] $end
$var wire 1 (6 i0 [7] $end
$var wire 1 )6 i0 [6] $end
$var wire 1 *6 i0 [5] $end
$var wire 1 +6 i0 [4] $end
$var wire 1 ,6 i0 [3] $end
$var wire 1 -6 i0 [2] $end
$var wire 1 .6 i0 [1] $end
$var wire 1 /6 i0 [0] $end
$var wire 1 N5 i1 [15] $end
$var wire 1 O5 i1 [14] $end
$var wire 1 P5 i1 [13] $end
$var wire 1 Q5 i1 [12] $end
$var wire 1 R5 i1 [11] $end
$var wire 1 S5 i1 [10] $end
$var wire 1 T5 i1 [9] $end
$var wire 1 U5 i1 [8] $end
$var wire 1 V5 i1 [7] $end
$var wire 1 W5 i1 [6] $end
$var wire 1 X5 i1 [5] $end
$var wire 1 Y5 i1 [4] $end
$var wire 1 Z5 i1 [3] $end
$var wire 1 [5 i1 [2] $end
$var wire 1 \5 i1 [1] $end
$var wire 1 ]5 i1 [0] $end
$var wire 1 ~" sel $end
$var wire 1 06 out [15] $end
$var wire 1 16 out [14] $end
$var wire 1 26 out [13] $end
$var wire 1 36 out [12] $end
$var wire 1 46 out [11] $end
$var wire 1 56 out [10] $end
$var wire 1 66 out [9] $end
$var wire 1 76 out [8] $end
$var wire 1 86 out [7] $end
$var wire 1 96 out [6] $end
$var wire 1 :6 out [5] $end
$var wire 1 ;6 out [4] $end
$var wire 1 <6 out [3] $end
$var wire 1 =6 out [2] $end
$var wire 1 >6 out [1] $end
$var wire 1 ?6 out [0] $end
$var reg 16 w6 inter [15:0] $end
$upscope $end

$scope module m3_0 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 x6 i0 $end
$var wire 1 ;6 i1 $end
$var wire 1 ;6 i2 $end
$var wire 1 y6 i3 $end
$var wire 1 m5 out $end
$var reg 1 z6 inter $end
$upscope $end

$scope module m3_1 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 {6 i0 $end
$var wire 1 :6 i1 $end
$var wire 1 :6 i2 $end
$var wire 1 |6 i3 $end
$var wire 1 l5 out $end
$var reg 1 }6 inter $end
$upscope $end

$scope module m3_2 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ~6 i0 $end
$var wire 1 96 i1 $end
$var wire 1 96 i2 $end
$var wire 1 !7 i3 $end
$var wire 1 k5 out $end
$var reg 1 "7 inter $end
$upscope $end

$scope module m3_3 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 #7 i0 $end
$var wire 1 86 i1 $end
$var wire 1 86 i2 $end
$var wire 1 $7 i3 $end
$var wire 1 j5 out $end
$var reg 1 %7 inter $end
$upscope $end

$scope module m3_4 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ?6 i0 $end
$var wire 1 76 i1 $end
$var wire 1 76 i2 $end
$var wire 1 ?6 i3 $end
$var wire 1 i5 out $end
$var reg 1 &7 inter $end
$upscope $end

$scope module m3_5 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 >6 i0 $end
$var wire 1 66 i1 $end
$var wire 1 66 i2 $end
$var wire 1 >6 i3 $end
$var wire 1 h5 out $end
$var reg 1 '7 inter $end
$upscope $end

$scope module m3_6 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 =6 i0 $end
$var wire 1 56 i1 $end
$var wire 1 56 i2 $end
$var wire 1 =6 i3 $end
$var wire 1 g5 out $end
$var reg 1 (7 inter $end
$upscope $end

$scope module m3_7 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 <6 i0 $end
$var wire 1 46 i1 $end
$var wire 1 46 i2 $end
$var wire 1 <6 i3 $end
$var wire 1 f5 out $end
$var reg 1 )7 inter $end
$upscope $end

$scope module m3_8 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ;6 i0 $end
$var wire 1 36 i1 $end
$var wire 1 36 i2 $end
$var wire 1 ;6 i3 $end
$var wire 1 e5 out $end
$var reg 1 *7 inter $end
$upscope $end

$scope module m3_9 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 :6 i0 $end
$var wire 1 26 i1 $end
$var wire 1 26 i2 $end
$var wire 1 :6 i3 $end
$var wire 1 d5 out $end
$var reg 1 +7 inter $end
$upscope $end

$scope module m3_10 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 96 i0 $end
$var wire 1 16 i1 $end
$var wire 1 16 i2 $end
$var wire 1 96 i3 $end
$var wire 1 c5 out $end
$var reg 1 ,7 inter $end
$upscope $end

$scope module m3_11 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 86 i0 $end
$var wire 1 06 i1 $end
$var wire 1 06 i2 $end
$var wire 1 86 i3 $end
$var wire 1 b5 out $end
$var reg 1 -7 inter $end
$upscope $end

$scope module m3_12 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 76 i0 $end
$var wire 1 06 i1 $end
$var wire 1 ?6 i2 $end
$var wire 1 76 i3 $end
$var wire 1 a5 out $end
$var reg 1 .7 inter $end
$upscope $end

$scope module m3_13 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 66 i0 $end
$var wire 1 06 i1 $end
$var wire 1 >6 i2 $end
$var wire 1 66 i3 $end
$var wire 1 `5 out $end
$var reg 1 /7 inter $end
$upscope $end

$scope module m3_14 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 56 i0 $end
$var wire 1 06 i1 $end
$var wire 1 =6 i2 $end
$var wire 1 56 i3 $end
$var wire 1 _5 out $end
$var reg 1 07 inter $end
$upscope $end

$scope module m3_15 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 46 i0 $end
$var wire 1 06 i1 $end
$var wire 1 <6 i2 $end
$var wire 1 46 i3 $end
$var wire 1 ^5 out $end
$var reg 1 17 inter $end
$upscope $end

$scope module sel_shift4 $end
$var wire 1 06 i0 [15] $end
$var wire 1 16 i0 [14] $end
$var wire 1 26 i0 [13] $end
$var wire 1 36 i0 [12] $end
$var wire 1 46 i0 [11] $end
$var wire 1 56 i0 [10] $end
$var wire 1 66 i0 [9] $end
$var wire 1 76 i0 [8] $end
$var wire 1 86 i0 [7] $end
$var wire 1 96 i0 [6] $end
$var wire 1 :6 i0 [5] $end
$var wire 1 ;6 i0 [4] $end
$var wire 1 <6 i0 [3] $end
$var wire 1 =6 i0 [2] $end
$var wire 1 >6 i0 [1] $end
$var wire 1 ?6 i0 [0] $end
$var wire 1 ^5 i1 [15] $end
$var wire 1 _5 i1 [14] $end
$var wire 1 `5 i1 [13] $end
$var wire 1 a5 i1 [12] $end
$var wire 1 b5 i1 [11] $end
$var wire 1 c5 i1 [10] $end
$var wire 1 d5 i1 [9] $end
$var wire 1 e5 i1 [8] $end
$var wire 1 f5 i1 [7] $end
$var wire 1 g5 i1 [6] $end
$var wire 1 h5 i1 [5] $end
$var wire 1 i5 i1 [4] $end
$var wire 1 j5 i1 [3] $end
$var wire 1 k5 i1 [2] $end
$var wire 1 l5 i1 [1] $end
$var wire 1 m5 i1 [0] $end
$var wire 1 }" sel $end
$var wire 1 @6 out [15] $end
$var wire 1 A6 out [14] $end
$var wire 1 B6 out [13] $end
$var wire 1 C6 out [12] $end
$var wire 1 D6 out [11] $end
$var wire 1 E6 out [10] $end
$var wire 1 F6 out [9] $end
$var wire 1 G6 out [8] $end
$var wire 1 H6 out [7] $end
$var wire 1 I6 out [6] $end
$var wire 1 J6 out [5] $end
$var wire 1 K6 out [4] $end
$var wire 1 L6 out [3] $end
$var wire 1 M6 out [2] $end
$var wire 1 N6 out [1] $end
$var wire 1 O6 out [0] $end
$var reg 16 27 inter [15:0] $end
$upscope $end

$scope module m4_0 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 37 i0 $end
$var wire 1 G6 i1 $end
$var wire 1 G6 i2 $end
$var wire 1 47 i3 $end
$var wire 1 }5 out $end
$var reg 1 57 inter $end
$upscope $end

$scope module m4_1 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 67 i0 $end
$var wire 1 F6 i1 $end
$var wire 1 F6 i2 $end
$var wire 1 77 i3 $end
$var wire 1 |5 out $end
$var reg 1 87 inter $end
$upscope $end

$scope module m4_2 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 97 i0 $end
$var wire 1 E6 i1 $end
$var wire 1 E6 i2 $end
$var wire 1 :7 i3 $end
$var wire 1 {5 out $end
$var reg 1 ;7 inter $end
$upscope $end

$scope module m4_3 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 <7 i0 $end
$var wire 1 D6 i1 $end
$var wire 1 D6 i2 $end
$var wire 1 =7 i3 $end
$var wire 1 z5 out $end
$var reg 1 >7 inter $end
$upscope $end

$scope module m4_4 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 ?7 i0 $end
$var wire 1 C6 i1 $end
$var wire 1 C6 i2 $end
$var wire 1 @7 i3 $end
$var wire 1 y5 out $end
$var reg 1 A7 inter $end
$upscope $end

$scope module m4_5 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 B7 i0 $end
$var wire 1 B6 i1 $end
$var wire 1 B6 i2 $end
$var wire 1 C7 i3 $end
$var wire 1 x5 out $end
$var reg 1 D7 inter $end
$upscope $end

$scope module m4_6 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 E7 i0 $end
$var wire 1 A6 i1 $end
$var wire 1 A6 i2 $end
$var wire 1 F7 i3 $end
$var wire 1 w5 out $end
$var reg 1 G7 inter $end
$upscope $end

$scope module m4_7 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 H7 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 @6 i2 $end
$var wire 1 I7 i3 $end
$var wire 1 v5 out $end
$var reg 1 J7 inter $end
$upscope $end

$scope module m4_8 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 O6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 O6 i2 $end
$var wire 1 O6 i3 $end
$var wire 1 u5 out $end
$var reg 1 K7 inter $end
$upscope $end

$scope module m4_9 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 N6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 N6 i2 $end
$var wire 1 N6 i3 $end
$var wire 1 t5 out $end
$var reg 1 L7 inter $end
$upscope $end

$scope module m4_10 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 M6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 M6 i2 $end
$var wire 1 M6 i3 $end
$var wire 1 s5 out $end
$var reg 1 M7 inter $end
$upscope $end

$scope module m4_11 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 L6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 L6 i2 $end
$var wire 1 L6 i3 $end
$var wire 1 r5 out $end
$var reg 1 N7 inter $end
$upscope $end

$scope module m4_12 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 K6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 K6 i2 $end
$var wire 1 K6 i3 $end
$var wire 1 q5 out $end
$var reg 1 O7 inter $end
$upscope $end

$scope module m4_13 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 J6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 J6 i2 $end
$var wire 1 J6 i3 $end
$var wire 1 p5 out $end
$var reg 1 P7 inter $end
$upscope $end

$scope module m4_14 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 I6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 I6 i2 $end
$var wire 1 I6 i3 $end
$var wire 1 o5 out $end
$var reg 1 Q7 inter $end
$upscope $end

$scope module m4_15 $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 H6 i0 $end
$var wire 1 @6 i1 $end
$var wire 1 H6 i2 $end
$var wire 1 H6 i3 $end
$var wire 1 n5 out $end
$var reg 1 R7 inter $end
$upscope $end

$scope module sel_shift8 $end
$var wire 1 @6 i0 [15] $end
$var wire 1 A6 i0 [14] $end
$var wire 1 B6 i0 [13] $end
$var wire 1 C6 i0 [12] $end
$var wire 1 D6 i0 [11] $end
$var wire 1 E6 i0 [10] $end
$var wire 1 F6 i0 [9] $end
$var wire 1 G6 i0 [8] $end
$var wire 1 H6 i0 [7] $end
$var wire 1 I6 i0 [6] $end
$var wire 1 J6 i0 [5] $end
$var wire 1 K6 i0 [4] $end
$var wire 1 L6 i0 [3] $end
$var wire 1 M6 i0 [2] $end
$var wire 1 N6 i0 [1] $end
$var wire 1 O6 i0 [0] $end
$var wire 1 n5 i1 [15] $end
$var wire 1 o5 i1 [14] $end
$var wire 1 p5 i1 [13] $end
$var wire 1 q5 i1 [12] $end
$var wire 1 r5 i1 [11] $end
$var wire 1 s5 i1 [10] $end
$var wire 1 t5 i1 [9] $end
$var wire 1 u5 i1 [8] $end
$var wire 1 v5 i1 [7] $end
$var wire 1 w5 i1 [6] $end
$var wire 1 x5 i1 [5] $end
$var wire 1 y5 i1 [4] $end
$var wire 1 z5 i1 [3] $end
$var wire 1 {5 i1 [2] $end
$var wire 1 |5 i1 [1] $end
$var wire 1 }5 i1 [0] $end
$var wire 1 |" sel $end
$var wire 1 X3 out [15] $end
$var wire 1 Y3 out [14] $end
$var wire 1 Z3 out [13] $end
$var wire 1 [3 out [12] $end
$var wire 1 \3 out [11] $end
$var wire 1 ]3 out [10] $end
$var wire 1 ^3 out [9] $end
$var wire 1 _3 out [8] $end
$var wire 1 `3 out [7] $end
$var wire 1 a3 out [6] $end
$var wire 1 b3 out [5] $end
$var wire 1 c3 out [4] $end
$var wire 1 d3 out [3] $end
$var wire 1 e3 out [2] $end
$var wire 1 f3 out [1] $end
$var wire 1 g3 out [0] $end
$var reg 16 S7 inter [15:0] $end
$upscope $end
$upscope $end

$scope module red_16b $end
$var wire 1 }! SrcData1 [15] $end
$var wire 1 ~! SrcData1 [14] $end
$var wire 1 !" SrcData1 [13] $end
$var wire 1 "" SrcData1 [12] $end
$var wire 1 #" SrcData1 [11] $end
$var wire 1 $" SrcData1 [10] $end
$var wire 1 %" SrcData1 [9] $end
$var wire 1 &" SrcData1 [8] $end
$var wire 1 '" SrcData1 [7] $end
$var wire 1 (" SrcData1 [6] $end
$var wire 1 )" SrcData1 [5] $end
$var wire 1 *" SrcData1 [4] $end
$var wire 1 +" SrcData1 [3] $end
$var wire 1 ," SrcData1 [2] $end
$var wire 1 -" SrcData1 [1] $end
$var wire 1 ." SrcData1 [0] $end
$var wire 1 p" SrcData2 [15] $end
$var wire 1 q" SrcData2 [14] $end
$var wire 1 r" SrcData2 [13] $end
$var wire 1 s" SrcData2 [12] $end
$var wire 1 t" SrcData2 [11] $end
$var wire 1 u" SrcData2 [10] $end
$var wire 1 v" SrcData2 [9] $end
$var wire 1 w" SrcData2 [8] $end
$var wire 1 x" SrcData2 [7] $end
$var wire 1 y" SrcData2 [6] $end
$var wire 1 z" SrcData2 [5] $end
$var wire 1 {" SrcData2 [4] $end
$var wire 1 |" SrcData2 [3] $end
$var wire 1 }" SrcData2 [2] $end
$var wire 1 ~" SrcData2 [1] $end
$var wire 1 !# SrcData2 [0] $end
$var wire 1 x3 DesData [15] $end
$var wire 1 y3 DesData [14] $end
$var wire 1 z3 DesData [13] $end
$var wire 1 {3 DesData [12] $end
$var wire 1 |3 DesData [11] $end
$var wire 1 }3 DesData [10] $end
$var wire 1 ~3 DesData [9] $end
$var wire 1 !4 DesData [8] $end
$var wire 1 "4 DesData [7] $end
$var wire 1 #4 DesData [6] $end
$var wire 1 $4 DesData [5] $end
$var wire 1 %4 DesData [4] $end
$var wire 1 &4 DesData [3] $end
$var wire 1 '4 DesData [2] $end
$var wire 1 (4 DesData [1] $end
$var wire 1 )4 DesData [0] $end
$var wire 1 T7 pg [6] $end
$var wire 1 U7 pg [5] $end
$var wire 1 V7 pg [4] $end
$var wire 1 W7 pg [3] $end
$var wire 1 X7 pg [2] $end
$var wire 1 Y7 pg [1] $end
$var wire 1 Z7 pg [0] $end
$var wire 1 [7 gg [6] $end
$var wire 1 \7 gg [5] $end
$var wire 1 ]7 gg [4] $end
$var wire 1 ^7 gg [3] $end
$var wire 1 _7 gg [2] $end
$var wire 1 `7 gg [1] $end
$var wire 1 a7 gg [0] $end
$var wire 1 b7 reg11 [3] $end
$var wire 1 c7 reg11 [2] $end
$var wire 1 d7 reg11 [1] $end
$var wire 1 e7 reg11 [0] $end
$var wire 1 f7 reg22 [3] $end
$var wire 1 g7 reg22 [2] $end
$var wire 1 h7 reg22 [1] $end
$var wire 1 i7 reg22 [0] $end
$var wire 1 j7 reg33 [3] $end
$var wire 1 k7 reg33 [2] $end
$var wire 1 l7 reg33 [1] $end
$var wire 1 m7 reg33 [0] $end
$var wire 1 n7 reg44 [3] $end
$var wire 1 o7 reg44 [2] $end
$var wire 1 p7 reg44 [1] $end
$var wire 1 q7 reg44 [0] $end
$var wire 1 r7 reg12 [3] $end
$var wire 1 s7 reg12 [2] $end
$var wire 1 t7 reg12 [1] $end
$var wire 1 u7 reg12 [0] $end
$var wire 1 v7 reg34 [3] $end
$var wire 1 w7 reg34 [2] $end
$var wire 1 x7 reg34 [1] $end
$var wire 1 y7 reg34 [0] $end
$var wire 1 z7 reg1234 [3] $end
$var wire 1 {7 reg1234 [2] $end
$var wire 1 |7 reg1234 [1] $end
$var wire 1 }7 reg1234 [0] $end
$var wire 1 ~7 cout_csa [4] $end
$var wire 1 !8 cout_csa [3] $end
$var wire 1 "8 cout_csa [2] $end
$var wire 1 #8 cout_csa [1] $end
$var wire 1 $8 cout_csa [0] $end
$var wire 1 %8 sum_1bcsa [4] $end
$var wire 1 &8 sum_1bcsa [3] $end
$var wire 1 '8 sum_1bcsa [2] $end
$var wire 1 (8 sum_1bcsa [1] $end
$var wire 1 )8 sum_1bcsa [0] $end
$var wire 1 *8 sum_2bcsa [1] $end
$var wire 1 +8 sum_2bcsa [0] $end
$var wire 1 ,8 cout_2bcsa [1] $end
$var wire 1 -8 cout_2bcsa [0] $end
$var wire 1 .8 sum_4bcsa [3] $end
$var wire 1 /8 sum_4bcsa [2] $end
$var wire 1 08 sum_4bcsa [1] $end
$var wire 1 18 sum_4bcsa [0] $end
$var wire 1 28 cout_4bcsa [3] $end
$var wire 1 38 cout_4bcsa [2] $end
$var wire 1 48 cout_4bcsa [1] $end
$var wire 1 58 cout_4bcsa [0] $end

$scope module add0 $end
$var wire 1 +" a [3] $end
$var wire 1 ," a [2] $end
$var wire 1 -" a [1] $end
$var wire 1 ." a [0] $end
$var wire 1 |" b [3] $end
$var wire 1 }" b [2] $end
$var wire 1 ~" b [1] $end
$var wire 1 !# b [0] $end
$var wire 1 68 c_in $end
$var wire 1 b7 s [3] $end
$var wire 1 c7 s [2] $end
$var wire 1 d7 s [1] $end
$var wire 1 e7 s [0] $end
$var wire 1 Z7 pg_out $end
$var wire 1 a7 gg_out $end
$var wire 1 78 c [3] $end
$var wire 1 88 c [2] $end
$var wire 1 98 c [1] $end
$var wire 1 :8 c [0] $end
$var wire 1 ;8 g [3] $end
$var wire 1 <8 g [2] $end
$var wire 1 =8 g [1] $end
$var wire 1 >8 g [0] $end
$var wire 1 ?8 p [3] $end
$var wire 1 @8 p [2] $end
$var wire 1 A8 p [1] $end
$var wire 1 B8 p [0] $end

$scope module cla0 $end
$var wire 1 ." a $end
$var wire 1 !# b $end
$var wire 1 :8 c_in $end
$var wire 1 >8 g_out $end
$var wire 1 B8 p_out $end
$var wire 1 e7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 -" a $end
$var wire 1 ~" b $end
$var wire 1 98 c_in $end
$var wire 1 =8 g_out $end
$var wire 1 A8 p_out $end
$var wire 1 d7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 ," a $end
$var wire 1 }" b $end
$var wire 1 88 c_in $end
$var wire 1 <8 g_out $end
$var wire 1 @8 p_out $end
$var wire 1 c7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 +" a $end
$var wire 1 |" b $end
$var wire 1 78 c_in $end
$var wire 1 ;8 g_out $end
$var wire 1 ?8 p_out $end
$var wire 1 b7 s $end
$upscope $end
$upscope $end

$scope module add1 $end
$var wire 1 '" a [3] $end
$var wire 1 (" a [2] $end
$var wire 1 )" a [1] $end
$var wire 1 *" a [0] $end
$var wire 1 x" b [3] $end
$var wire 1 y" b [2] $end
$var wire 1 z" b [1] $end
$var wire 1 {" b [0] $end
$var wire 1 C8 c_in $end
$var wire 1 f7 s [3] $end
$var wire 1 g7 s [2] $end
$var wire 1 h7 s [1] $end
$var wire 1 i7 s [0] $end
$var wire 1 Y7 pg_out $end
$var wire 1 `7 gg_out $end
$var wire 1 D8 c [3] $end
$var wire 1 E8 c [2] $end
$var wire 1 F8 c [1] $end
$var wire 1 G8 c [0] $end
$var wire 1 H8 g [3] $end
$var wire 1 I8 g [2] $end
$var wire 1 J8 g [1] $end
$var wire 1 K8 g [0] $end
$var wire 1 L8 p [3] $end
$var wire 1 M8 p [2] $end
$var wire 1 N8 p [1] $end
$var wire 1 O8 p [0] $end

$scope module cla0 $end
$var wire 1 *" a $end
$var wire 1 {" b $end
$var wire 1 G8 c_in $end
$var wire 1 K8 g_out $end
$var wire 1 O8 p_out $end
$var wire 1 i7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 )" a $end
$var wire 1 z" b $end
$var wire 1 F8 c_in $end
$var wire 1 J8 g_out $end
$var wire 1 N8 p_out $end
$var wire 1 h7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 (" a $end
$var wire 1 y" b $end
$var wire 1 E8 c_in $end
$var wire 1 I8 g_out $end
$var wire 1 M8 p_out $end
$var wire 1 g7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 '" a $end
$var wire 1 x" b $end
$var wire 1 D8 c_in $end
$var wire 1 H8 g_out $end
$var wire 1 L8 p_out $end
$var wire 1 f7 s $end
$upscope $end
$upscope $end

$scope module add2 $end
$var wire 1 #" a [3] $end
$var wire 1 $" a [2] $end
$var wire 1 %" a [1] $end
$var wire 1 &" a [0] $end
$var wire 1 t" b [3] $end
$var wire 1 u" b [2] $end
$var wire 1 v" b [1] $end
$var wire 1 w" b [0] $end
$var wire 1 P8 c_in $end
$var wire 1 j7 s [3] $end
$var wire 1 k7 s [2] $end
$var wire 1 l7 s [1] $end
$var wire 1 m7 s [0] $end
$var wire 1 X7 pg_out $end
$var wire 1 _7 gg_out $end
$var wire 1 Q8 c [3] $end
$var wire 1 R8 c [2] $end
$var wire 1 S8 c [1] $end
$var wire 1 T8 c [0] $end
$var wire 1 U8 g [3] $end
$var wire 1 V8 g [2] $end
$var wire 1 W8 g [1] $end
$var wire 1 X8 g [0] $end
$var wire 1 Y8 p [3] $end
$var wire 1 Z8 p [2] $end
$var wire 1 [8 p [1] $end
$var wire 1 \8 p [0] $end

$scope module cla0 $end
$var wire 1 &" a $end
$var wire 1 w" b $end
$var wire 1 T8 c_in $end
$var wire 1 X8 g_out $end
$var wire 1 \8 p_out $end
$var wire 1 m7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 %" a $end
$var wire 1 v" b $end
$var wire 1 S8 c_in $end
$var wire 1 W8 g_out $end
$var wire 1 [8 p_out $end
$var wire 1 l7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 $" a $end
$var wire 1 u" b $end
$var wire 1 R8 c_in $end
$var wire 1 V8 g_out $end
$var wire 1 Z8 p_out $end
$var wire 1 k7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 #" a $end
$var wire 1 t" b $end
$var wire 1 Q8 c_in $end
$var wire 1 U8 g_out $end
$var wire 1 Y8 p_out $end
$var wire 1 j7 s $end
$upscope $end
$upscope $end

$scope module add3 $end
$var wire 1 }! a [3] $end
$var wire 1 ~! a [2] $end
$var wire 1 !" a [1] $end
$var wire 1 "" a [0] $end
$var wire 1 p" b [3] $end
$var wire 1 q" b [2] $end
$var wire 1 r" b [1] $end
$var wire 1 s" b [0] $end
$var wire 1 ]8 c_in $end
$var wire 1 n7 s [3] $end
$var wire 1 o7 s [2] $end
$var wire 1 p7 s [1] $end
$var wire 1 q7 s [0] $end
$var wire 1 W7 pg_out $end
$var wire 1 ^7 gg_out $end
$var wire 1 ^8 c [3] $end
$var wire 1 _8 c [2] $end
$var wire 1 `8 c [1] $end
$var wire 1 a8 c [0] $end
$var wire 1 b8 g [3] $end
$var wire 1 c8 g [2] $end
$var wire 1 d8 g [1] $end
$var wire 1 e8 g [0] $end
$var wire 1 f8 p [3] $end
$var wire 1 g8 p [2] $end
$var wire 1 h8 p [1] $end
$var wire 1 i8 p [0] $end

$scope module cla0 $end
$var wire 1 "" a $end
$var wire 1 s" b $end
$var wire 1 a8 c_in $end
$var wire 1 e8 g_out $end
$var wire 1 i8 p_out $end
$var wire 1 q7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 !" a $end
$var wire 1 r" b $end
$var wire 1 `8 c_in $end
$var wire 1 d8 g_out $end
$var wire 1 h8 p_out $end
$var wire 1 p7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 ~! a $end
$var wire 1 q" b $end
$var wire 1 _8 c_in $end
$var wire 1 c8 g_out $end
$var wire 1 g8 p_out $end
$var wire 1 o7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 }! a $end
$var wire 1 p" b $end
$var wire 1 ^8 c_in $end
$var wire 1 b8 g_out $end
$var wire 1 f8 p_out $end
$var wire 1 n7 s $end
$upscope $end
$upscope $end

$scope module add4 $end
$var wire 1 b7 a [3] $end
$var wire 1 c7 a [2] $end
$var wire 1 d7 a [1] $end
$var wire 1 e7 a [0] $end
$var wire 1 f7 b [3] $end
$var wire 1 g7 b [2] $end
$var wire 1 h7 b [1] $end
$var wire 1 i7 b [0] $end
$var wire 1 j8 c_in $end
$var wire 1 r7 s [3] $end
$var wire 1 s7 s [2] $end
$var wire 1 t7 s [1] $end
$var wire 1 u7 s [0] $end
$var wire 1 V7 pg_out $end
$var wire 1 ]7 gg_out $end
$var wire 1 k8 c [3] $end
$var wire 1 l8 c [2] $end
$var wire 1 m8 c [1] $end
$var wire 1 n8 c [0] $end
$var wire 1 o8 g [3] $end
$var wire 1 p8 g [2] $end
$var wire 1 q8 g [1] $end
$var wire 1 r8 g [0] $end
$var wire 1 s8 p [3] $end
$var wire 1 t8 p [2] $end
$var wire 1 u8 p [1] $end
$var wire 1 v8 p [0] $end

$scope module cla0 $end
$var wire 1 e7 a $end
$var wire 1 i7 b $end
$var wire 1 n8 c_in $end
$var wire 1 r8 g_out $end
$var wire 1 v8 p_out $end
$var wire 1 u7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 d7 a $end
$var wire 1 h7 b $end
$var wire 1 m8 c_in $end
$var wire 1 q8 g_out $end
$var wire 1 u8 p_out $end
$var wire 1 t7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 c7 a $end
$var wire 1 g7 b $end
$var wire 1 l8 c_in $end
$var wire 1 p8 g_out $end
$var wire 1 t8 p_out $end
$var wire 1 s7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 b7 a $end
$var wire 1 f7 b $end
$var wire 1 k8 c_in $end
$var wire 1 o8 g_out $end
$var wire 1 s8 p_out $end
$var wire 1 r7 s $end
$upscope $end
$upscope $end

$scope module add5 $end
$var wire 1 j7 a [3] $end
$var wire 1 k7 a [2] $end
$var wire 1 l7 a [1] $end
$var wire 1 m7 a [0] $end
$var wire 1 n7 b [3] $end
$var wire 1 o7 b [2] $end
$var wire 1 p7 b [1] $end
$var wire 1 q7 b [0] $end
$var wire 1 w8 c_in $end
$var wire 1 v7 s [3] $end
$var wire 1 w7 s [2] $end
$var wire 1 x7 s [1] $end
$var wire 1 y7 s [0] $end
$var wire 1 U7 pg_out $end
$var wire 1 \7 gg_out $end
$var wire 1 x8 c [3] $end
$var wire 1 y8 c [2] $end
$var wire 1 z8 c [1] $end
$var wire 1 {8 c [0] $end
$var wire 1 |8 g [3] $end
$var wire 1 }8 g [2] $end
$var wire 1 ~8 g [1] $end
$var wire 1 !9 g [0] $end
$var wire 1 "9 p [3] $end
$var wire 1 #9 p [2] $end
$var wire 1 $9 p [1] $end
$var wire 1 %9 p [0] $end

$scope module cla0 $end
$var wire 1 m7 a $end
$var wire 1 q7 b $end
$var wire 1 {8 c_in $end
$var wire 1 !9 g_out $end
$var wire 1 %9 p_out $end
$var wire 1 y7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 l7 a $end
$var wire 1 p7 b $end
$var wire 1 z8 c_in $end
$var wire 1 ~8 g_out $end
$var wire 1 $9 p_out $end
$var wire 1 x7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 k7 a $end
$var wire 1 o7 b $end
$var wire 1 y8 c_in $end
$var wire 1 }8 g_out $end
$var wire 1 #9 p_out $end
$var wire 1 w7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 j7 a $end
$var wire 1 n7 b $end
$var wire 1 x8 c_in $end
$var wire 1 |8 g_out $end
$var wire 1 "9 p_out $end
$var wire 1 v7 s $end
$upscope $end
$upscope $end

$scope module add6 $end
$var wire 1 r7 a [3] $end
$var wire 1 s7 a [2] $end
$var wire 1 t7 a [1] $end
$var wire 1 u7 a [0] $end
$var wire 1 v7 b [3] $end
$var wire 1 w7 b [2] $end
$var wire 1 x7 b [1] $end
$var wire 1 y7 b [0] $end
$var wire 1 &9 c_in $end
$var wire 1 z7 s [3] $end
$var wire 1 {7 s [2] $end
$var wire 1 |7 s [1] $end
$var wire 1 }7 s [0] $end
$var wire 1 T7 pg_out $end
$var wire 1 [7 gg_out $end
$var wire 1 '9 c [3] $end
$var wire 1 (9 c [2] $end
$var wire 1 )9 c [1] $end
$var wire 1 *9 c [0] $end
$var wire 1 +9 g [3] $end
$var wire 1 ,9 g [2] $end
$var wire 1 -9 g [1] $end
$var wire 1 .9 g [0] $end
$var wire 1 /9 p [3] $end
$var wire 1 09 p [2] $end
$var wire 1 19 p [1] $end
$var wire 1 29 p [0] $end

$scope module cla0 $end
$var wire 1 u7 a $end
$var wire 1 y7 b $end
$var wire 1 *9 c_in $end
$var wire 1 .9 g_out $end
$var wire 1 29 p_out $end
$var wire 1 }7 s $end
$upscope $end

$scope module cla1 $end
$var wire 1 t7 a $end
$var wire 1 x7 b $end
$var wire 1 )9 c_in $end
$var wire 1 -9 g_out $end
$var wire 1 19 p_out $end
$var wire 1 |7 s $end
$upscope $end

$scope module cla2 $end
$var wire 1 s7 a $end
$var wire 1 w7 b $end
$var wire 1 (9 c_in $end
$var wire 1 ,9 g_out $end
$var wire 1 09 p_out $end
$var wire 1 {7 s $end
$upscope $end

$scope module cla3 $end
$var wire 1 r7 a $end
$var wire 1 v7 b $end
$var wire 1 '9 c_in $end
$var wire 1 +9 g_out $end
$var wire 1 /9 p_out $end
$var wire 1 z7 s $end
$upscope $end
$upscope $end

$scope module FA10 $end
$var wire 1 )8 s $end
$var wire 1 $8 cout $end
$var wire 1 a7 a $end
$var wire 1 `7 b $end
$var wire 1 39 cin $end
$upscope $end

$scope module FA11 $end
$var wire 1 (8 s $end
$var wire 1 #8 cout $end
$var wire 1 _7 a $end
$var wire 1 ^7 b $end
$var wire 1 49 cin $end
$upscope $end

$scope module FA12 $end
$var wire 1 '8 s $end
$var wire 1 "8 cout $end
$var wire 1 [7 a $end
$var wire 1 ]7 b $end
$var wire 1 \7 cin $end
$upscope $end

$scope module FA13 $end
$var wire 1 &8 s $end
$var wire 1 !8 cout $end
$var wire 1 $8 a $end
$var wire 1 #8 b $end
$var wire 1 "8 cin $end
$upscope $end

$scope module FA14 $end
$var wire 1 %8 s $end
$var wire 1 ~7 cout $end
$var wire 1 )8 a $end
$var wire 1 (8 b $end
$var wire 1 '8 cin $end
$upscope $end

$scope module csa20 $end
$var wire 1 59 x [1] $end
$var wire 1 69 x [0] $end
$var wire 1 79 y [1] $end
$var wire 1 &8 y [0] $end
$var wire 1 89 z [1] $end
$var wire 1 ~7 z [0] $end
$var wire 1 *8 s [1] $end
$var wire 1 +8 s [0] $end
$var wire 1 ,8 cout [1] $end
$var wire 1 -8 cout [0] $end

$scope module fa_inst10 $end
$var wire 1 +8 s $end
$var wire 1 -8 cout $end
$var wire 1 69 a $end
$var wire 1 &8 b $end
$var wire 1 ~7 cin $end
$upscope $end

$scope module fa_inst11 $end
$var wire 1 *8 s $end
$var wire 1 ,8 cout $end
$var wire 1 59 a $end
$var wire 1 79 b $end
$var wire 1 89 cin $end
$upscope $end
$upscope $end

$scope module csa40 $end
$var wire 1 99 x [3] $end
$var wire 1 :9 x [2] $end
$var wire 1 ;9 x [1] $end
$var wire 1 <9 x [0] $end
$var wire 1 =9 y [3] $end
$var wire 1 >9 y [2] $end
$var wire 1 ?9 y [1] $end
$var wire 1 @9 y [0] $end
$var wire 1 A9 z [3] $end
$var wire 1 B9 z [2] $end
$var wire 1 C9 z [1] $end
$var wire 1 %8 z [0] $end
$var wire 1 .8 s [3] $end
$var wire 1 /8 s [2] $end
$var wire 1 08 s [1] $end
$var wire 1 18 s [0] $end
$var wire 1 28 cout [3] $end
$var wire 1 38 cout [2] $end
$var wire 1 48 cout [1] $end
$var wire 1 58 cout [0] $end

$scope module fa_inst10 $end
$var wire 1 18 s $end
$var wire 1 58 cout $end
$var wire 1 <9 a $end
$var wire 1 @9 b $end
$var wire 1 %8 cin $end
$upscope $end

$scope module fa_inst11 $end
$var wire 1 08 s $end
$var wire 1 48 cout $end
$var wire 1 ;9 a $end
$var wire 1 ?9 b $end
$var wire 1 C9 cin $end
$upscope $end

$scope module fa_inst12 $end
$var wire 1 /8 s $end
$var wire 1 38 cout $end
$var wire 1 :9 a $end
$var wire 1 >9 b $end
$var wire 1 B9 cin $end
$upscope $end

$scope module fa_inst13 $end
$var wire 1 .8 s $end
$var wire 1 28 cout $end
$var wire 1 99 a $end
$var wire 1 =9 b $end
$var wire 1 A9 cin $end
$upscope $end
$upscope $end
$upscope $end

$scope module paddsb_16b $end
$var wire 1 }! A [15] $end
$var wire 1 ~! A [14] $end
$var wire 1 !" A [13] $end
$var wire 1 "" A [12] $end
$var wire 1 #" A [11] $end
$var wire 1 $" A [10] $end
$var wire 1 %" A [9] $end
$var wire 1 &" A [8] $end
$var wire 1 '" A [7] $end
$var wire 1 (" A [6] $end
$var wire 1 )" A [5] $end
$var wire 1 *" A [4] $end
$var wire 1 +" A [3] $end
$var wire 1 ," A [2] $end
$var wire 1 -" A [1] $end
$var wire 1 ." A [0] $end
$var wire 1 p" B [15] $end
$var wire 1 q" B [14] $end
$var wire 1 r" B [13] $end
$var wire 1 s" B [12] $end
$var wire 1 t" B [11] $end
$var wire 1 u" B [10] $end
$var wire 1 v" B [9] $end
$var wire 1 w" B [8] $end
$var wire 1 x" B [7] $end
$var wire 1 y" B [6] $end
$var wire 1 z" B [5] $end
$var wire 1 {" B [4] $end
$var wire 1 |" B [3] $end
$var wire 1 }" B [2] $end
$var wire 1 ~" B [1] $end
$var wire 1 !# B [0] $end
$var wire 1 *4 S [15] $end
$var wire 1 +4 S [14] $end
$var wire 1 ,4 S [13] $end
$var wire 1 -4 S [12] $end
$var wire 1 .4 S [11] $end
$var wire 1 /4 S [10] $end
$var wire 1 04 S [9] $end
$var wire 1 14 S [8] $end
$var wire 1 24 S [7] $end
$var wire 1 34 S [6] $end
$var wire 1 44 S [5] $end
$var wire 1 54 S [4] $end
$var wire 1 64 S [3] $end
$var wire 1 74 S [2] $end
$var wire 1 84 S [1] $end
$var wire 1 94 S [0] $end

$scope module SA0 $end
$var wire 1 +" A [3] $end
$var wire 1 ," A [2] $end
$var wire 1 -" A [1] $end
$var wire 1 ." A [0] $end
$var wire 1 |" B [3] $end
$var wire 1 }" B [2] $end
$var wire 1 ~" B [1] $end
$var wire 1 !# B [0] $end
$var wire 1 64 S [3] $end
$var wire 1 74 S [2] $end
$var wire 1 84 S [1] $end
$var wire 1 94 S [0] $end
$var wire 1 D9 c [3] $end
$var wire 1 E9 c [2] $end
$var wire 1 F9 c [1] $end
$var wire 1 G9 c [0] $end
$var wire 1 H9 both_neg $end
$var wire 1 I9 both_pos $end
$var wire 1 J9 FA_out [3] $end
$var wire 1 K9 FA_out [2] $end
$var wire 1 L9 FA_out [1] $end
$var wire 1 M9 FA_out [0] $end
$var wire 1 N9 sat_neg $end
$var wire 1 O9 sat_pos $end

$scope module FA0 $end
$var wire 1 M9 s $end
$var wire 1 G9 cout $end
$var wire 1 ." a $end
$var wire 1 !# b $end
$var wire 1 P9 cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 L9 s $end
$var wire 1 F9 cout $end
$var wire 1 -" a $end
$var wire 1 ~" b $end
$var wire 1 G9 cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 K9 s $end
$var wire 1 E9 cout $end
$var wire 1 ," a $end
$var wire 1 }" b $end
$var wire 1 F9 cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 J9 s $end
$var wire 1 D9 cout $end
$var wire 1 +" a $end
$var wire 1 |" b $end
$var wire 1 E9 cin $end
$upscope $end
$upscope $end

$scope module SA1 $end
$var wire 1 '" A [3] $end
$var wire 1 (" A [2] $end
$var wire 1 )" A [1] $end
$var wire 1 *" A [0] $end
$var wire 1 x" B [3] $end
$var wire 1 y" B [2] $end
$var wire 1 z" B [1] $end
$var wire 1 {" B [0] $end
$var wire 1 24 S [3] $end
$var wire 1 34 S [2] $end
$var wire 1 44 S [1] $end
$var wire 1 54 S [0] $end
$var wire 1 Q9 c [3] $end
$var wire 1 R9 c [2] $end
$var wire 1 S9 c [1] $end
$var wire 1 T9 c [0] $end
$var wire 1 U9 both_neg $end
$var wire 1 V9 both_pos $end
$var wire 1 W9 FA_out [3] $end
$var wire 1 X9 FA_out [2] $end
$var wire 1 Y9 FA_out [1] $end
$var wire 1 Z9 FA_out [0] $end
$var wire 1 [9 sat_neg $end
$var wire 1 \9 sat_pos $end

$scope module FA0 $end
$var wire 1 Z9 s $end
$var wire 1 T9 cout $end
$var wire 1 *" a $end
$var wire 1 {" b $end
$var wire 1 ]9 cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 Y9 s $end
$var wire 1 S9 cout $end
$var wire 1 )" a $end
$var wire 1 z" b $end
$var wire 1 T9 cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 X9 s $end
$var wire 1 R9 cout $end
$var wire 1 (" a $end
$var wire 1 y" b $end
$var wire 1 S9 cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 W9 s $end
$var wire 1 Q9 cout $end
$var wire 1 '" a $end
$var wire 1 x" b $end
$var wire 1 R9 cin $end
$upscope $end
$upscope $end

$scope module SA2 $end
$var wire 1 #" A [3] $end
$var wire 1 $" A [2] $end
$var wire 1 %" A [1] $end
$var wire 1 &" A [0] $end
$var wire 1 t" B [3] $end
$var wire 1 u" B [2] $end
$var wire 1 v" B [1] $end
$var wire 1 w" B [0] $end
$var wire 1 .4 S [3] $end
$var wire 1 /4 S [2] $end
$var wire 1 04 S [1] $end
$var wire 1 14 S [0] $end
$var wire 1 ^9 c [3] $end
$var wire 1 _9 c [2] $end
$var wire 1 `9 c [1] $end
$var wire 1 a9 c [0] $end
$var wire 1 b9 both_neg $end
$var wire 1 c9 both_pos $end
$var wire 1 d9 FA_out [3] $end
$var wire 1 e9 FA_out [2] $end
$var wire 1 f9 FA_out [1] $end
$var wire 1 g9 FA_out [0] $end
$var wire 1 h9 sat_neg $end
$var wire 1 i9 sat_pos $end

$scope module FA0 $end
$var wire 1 g9 s $end
$var wire 1 a9 cout $end
$var wire 1 &" a $end
$var wire 1 w" b $end
$var wire 1 j9 cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 f9 s $end
$var wire 1 `9 cout $end
$var wire 1 %" a $end
$var wire 1 v" b $end
$var wire 1 a9 cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 e9 s $end
$var wire 1 _9 cout $end
$var wire 1 $" a $end
$var wire 1 u" b $end
$var wire 1 `9 cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 d9 s $end
$var wire 1 ^9 cout $end
$var wire 1 #" a $end
$var wire 1 t" b $end
$var wire 1 _9 cin $end
$upscope $end
$upscope $end

$scope module SA3 $end
$var wire 1 }! A [3] $end
$var wire 1 ~! A [2] $end
$var wire 1 !" A [1] $end
$var wire 1 "" A [0] $end
$var wire 1 p" B [3] $end
$var wire 1 q" B [2] $end
$var wire 1 r" B [1] $end
$var wire 1 s" B [0] $end
$var wire 1 *4 S [3] $end
$var wire 1 +4 S [2] $end
$var wire 1 ,4 S [1] $end
$var wire 1 -4 S [0] $end
$var wire 1 k9 c [3] $end
$var wire 1 l9 c [2] $end
$var wire 1 m9 c [1] $end
$var wire 1 n9 c [0] $end
$var wire 1 o9 both_neg $end
$var wire 1 p9 both_pos $end
$var wire 1 q9 FA_out [3] $end
$var wire 1 r9 FA_out [2] $end
$var wire 1 s9 FA_out [1] $end
$var wire 1 t9 FA_out [0] $end
$var wire 1 u9 sat_neg $end
$var wire 1 v9 sat_pos $end

$scope module FA0 $end
$var wire 1 t9 s $end
$var wire 1 n9 cout $end
$var wire 1 "" a $end
$var wire 1 s" b $end
$var wire 1 w9 cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 s9 s $end
$var wire 1 m9 cout $end
$var wire 1 !" a $end
$var wire 1 r" b $end
$var wire 1 n9 cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 r9 s $end
$var wire 1 l9 cout $end
$var wire 1 ~! a $end
$var wire 1 q" b $end
$var wire 1 m9 cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 q9 s $end
$var wire 1 k9 cout $end
$var wire 1 }! a $end
$var wire 1 p" b $end
$var wire 1 l9 cin $end
$upscope $end
$upscope $end
$upscope $end

$scope module sel_ALU_out $end
$var wire 1 j! sel [2] $end
$var wire 1 k! sel [1] $end
$var wire 1 l! sel [0] $end
$var wire 1 H3 i0 [15] $end
$var wire 1 I3 i0 [14] $end
$var wire 1 J3 i0 [13] $end
$var wire 1 K3 i0 [12] $end
$var wire 1 L3 i0 [11] $end
$var wire 1 M3 i0 [10] $end
$var wire 1 N3 i0 [9] $end
$var wire 1 O3 i0 [8] $end
$var wire 1 P3 i0 [7] $end
$var wire 1 Q3 i0 [6] $end
$var wire 1 R3 i0 [5] $end
$var wire 1 S3 i0 [4] $end
$var wire 1 T3 i0 [3] $end
$var wire 1 U3 i0 [2] $end
$var wire 1 V3 i0 [1] $end
$var wire 1 W3 i0 [0] $end
$var wire 1 H3 i1 [15] $end
$var wire 1 I3 i1 [14] $end
$var wire 1 J3 i1 [13] $end
$var wire 1 K3 i1 [12] $end
$var wire 1 L3 i1 [11] $end
$var wire 1 M3 i1 [10] $end
$var wire 1 N3 i1 [9] $end
$var wire 1 O3 i1 [8] $end
$var wire 1 P3 i1 [7] $end
$var wire 1 Q3 i1 [6] $end
$var wire 1 R3 i1 [5] $end
$var wire 1 S3 i1 [4] $end
$var wire 1 T3 i1 [3] $end
$var wire 1 U3 i1 [2] $end
$var wire 1 V3 i1 [1] $end
$var wire 1 W3 i1 [0] $end
$var wire 1 x3 i2 [15] $end
$var wire 1 y3 i2 [14] $end
$var wire 1 z3 i2 [13] $end
$var wire 1 {3 i2 [12] $end
$var wire 1 |3 i2 [11] $end
$var wire 1 }3 i2 [10] $end
$var wire 1 ~3 i2 [9] $end
$var wire 1 !4 i2 [8] $end
$var wire 1 "4 i2 [7] $end
$var wire 1 #4 i2 [6] $end
$var wire 1 $4 i2 [5] $end
$var wire 1 %4 i2 [4] $end
$var wire 1 &4 i2 [3] $end
$var wire 1 '4 i2 [2] $end
$var wire 1 (4 i2 [1] $end
$var wire 1 )4 i2 [0] $end
$var wire 1 h3 i3 [15] $end
$var wire 1 i3 i3 [14] $end
$var wire 1 j3 i3 [13] $end
$var wire 1 k3 i3 [12] $end
$var wire 1 l3 i3 [11] $end
$var wire 1 m3 i3 [10] $end
$var wire 1 n3 i3 [9] $end
$var wire 1 o3 i3 [8] $end
$var wire 1 p3 i3 [7] $end
$var wire 1 q3 i3 [6] $end
$var wire 1 r3 i3 [5] $end
$var wire 1 s3 i3 [4] $end
$var wire 1 t3 i3 [3] $end
$var wire 1 u3 i3 [2] $end
$var wire 1 v3 i3 [1] $end
$var wire 1 w3 i3 [0] $end
$var wire 1 X3 i4 [15] $end
$var wire 1 Y3 i4 [14] $end
$var wire 1 Z3 i4 [13] $end
$var wire 1 [3 i4 [12] $end
$var wire 1 \3 i4 [11] $end
$var wire 1 ]3 i4 [10] $end
$var wire 1 ^3 i4 [9] $end
$var wire 1 _3 i4 [8] $end
$var wire 1 `3 i4 [7] $end
$var wire 1 a3 i4 [6] $end
$var wire 1 b3 i4 [5] $end
$var wire 1 c3 i4 [4] $end
$var wire 1 d3 i4 [3] $end
$var wire 1 e3 i4 [2] $end
$var wire 1 f3 i4 [1] $end
$var wire 1 g3 i4 [0] $end
$var wire 1 X3 i5 [15] $end
$var wire 1 Y3 i5 [14] $end
$var wire 1 Z3 i5 [13] $end
$var wire 1 [3 i5 [12] $end
$var wire 1 \3 i5 [11] $end
$var wire 1 ]3 i5 [10] $end
$var wire 1 ^3 i5 [9] $end
$var wire 1 _3 i5 [8] $end
$var wire 1 `3 i5 [7] $end
$var wire 1 a3 i5 [6] $end
$var wire 1 b3 i5 [5] $end
$var wire 1 c3 i5 [4] $end
$var wire 1 d3 i5 [3] $end
$var wire 1 e3 i5 [2] $end
$var wire 1 f3 i5 [1] $end
$var wire 1 g3 i5 [0] $end
$var wire 1 X3 i6 [15] $end
$var wire 1 Y3 i6 [14] $end
$var wire 1 Z3 i6 [13] $end
$var wire 1 [3 i6 [12] $end
$var wire 1 \3 i6 [11] $end
$var wire 1 ]3 i6 [10] $end
$var wire 1 ^3 i6 [9] $end
$var wire 1 _3 i6 [8] $end
$var wire 1 `3 i6 [7] $end
$var wire 1 a3 i6 [6] $end
$var wire 1 b3 i6 [5] $end
$var wire 1 c3 i6 [4] $end
$var wire 1 d3 i6 [3] $end
$var wire 1 e3 i6 [2] $end
$var wire 1 f3 i6 [1] $end
$var wire 1 g3 i6 [0] $end
$var wire 1 *4 i7 [15] $end
$var wire 1 +4 i7 [14] $end
$var wire 1 ,4 i7 [13] $end
$var wire 1 -4 i7 [12] $end
$var wire 1 .4 i7 [11] $end
$var wire 1 /4 i7 [10] $end
$var wire 1 04 i7 [9] $end
$var wire 1 14 i7 [8] $end
$var wire 1 24 i7 [7] $end
$var wire 1 34 i7 [6] $end
$var wire 1 44 i7 [5] $end
$var wire 1 54 i7 [4] $end
$var wire 1 64 i7 [3] $end
$var wire 1 74 i7 [2] $end
$var wire 1 84 i7 [1] $end
$var wire 1 94 i7 [0] $end
$var wire 1 "# out [15] $end
$var wire 1 ## out [14] $end
$var wire 1 $# out [13] $end
$var wire 1 %# out [12] $end
$var wire 1 &# out [11] $end
$var wire 1 '# out [10] $end
$var wire 1 (# out [9] $end
$var wire 1 )# out [8] $end
$var wire 1 *# out [7] $end
$var wire 1 +# out [6] $end
$var wire 1 ,# out [5] $end
$var wire 1 -# out [4] $end
$var wire 1 .# out [3] $end
$var wire 1 /# out [2] $end
$var wire 1 0# out [1] $end
$var wire 1 1# out [0] $end
$var reg 16 x9 inter [15:0] $end
$upscope $end
$upscope $end

$scope module flag_reg $end
$var wire 1 [# flag_new [2] $end
$var wire 1 \# flag_new [1] $end
$var wire 1 ]# flag_new [0] $end
$var wire 1 ^# wen [2] $end
$var wire 1 _# wen [1] $end
$var wire 1 `# wen [0] $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var wire 1 F! flag_current [2] $end
$var wire 1 G! flag_current [1] $end
$var wire 1 H! flag_current [0] $end
$var wire 1 y9 rst_n $end

$scope module PC_bit0 $end
$var wire 1 H! q $end
$var wire 1 ]# d $end
$var wire 1 `# wen $end
$var wire 1 C! clk $end
$var wire 1 y9 rst $end
$var reg 1 z9 state $end
$upscope $end

$scope module PC_bit1 $end
$var wire 1 G! q $end
$var wire 1 \# d $end
$var wire 1 _# wen $end
$var wire 1 C! clk $end
$var wire 1 y9 rst $end
$var reg 1 {9 state $end
$upscope $end

$scope module PC_bit2 $end
$var wire 1 F! q $end
$var wire 1 [# d $end
$var wire 1 ^# wen $end
$var wire 1 C! clk $end
$var wire 1 y9 rst $end
$var reg 1 |9 state $end
$upscope $end
$upscope $end

$scope module Data_memory $end
$var parameter 32 }9 ADDR_WIDTH $end
$var wire 1 2# data_out [15] $end
$var wire 1 3# data_out [14] $end
$var wire 1 4# data_out [13] $end
$var wire 1 5# data_out [12] $end
$var wire 1 6# data_out [11] $end
$var wire 1 7# data_out [10] $end
$var wire 1 8# data_out [9] $end
$var wire 1 9# data_out [8] $end
$var wire 1 :# data_out [7] $end
$var wire 1 ;# data_out [6] $end
$var wire 1 <# data_out [5] $end
$var wire 1 =# data_out [4] $end
$var wire 1 ># data_out [3] $end
$var wire 1 ?# data_out [2] $end
$var wire 1 @# data_out [1] $end
$var wire 1 A# data_out [0] $end
$var wire 1 /" data_in [15] $end
$var wire 1 0" data_in [14] $end
$var wire 1 1" data_in [13] $end
$var wire 1 2" data_in [12] $end
$var wire 1 3" data_in [11] $end
$var wire 1 4" data_in [10] $end
$var wire 1 5" data_in [9] $end
$var wire 1 6" data_in [8] $end
$var wire 1 7" data_in [7] $end
$var wire 1 8" data_in [6] $end
$var wire 1 9" data_in [5] $end
$var wire 1 :" data_in [4] $end
$var wire 1 ;" data_in [3] $end
$var wire 1 <" data_in [2] $end
$var wire 1 =" data_in [1] $end
$var wire 1 >" data_in [0] $end
$var wire 1 "# addr [15] $end
$var wire 1 ## addr [14] $end
$var wire 1 $# addr [13] $end
$var wire 1 %# addr [12] $end
$var wire 1 &# addr [11] $end
$var wire 1 '# addr [10] $end
$var wire 1 (# addr [9] $end
$var wire 1 )# addr [8] $end
$var wire 1 *# addr [7] $end
$var wire 1 +# addr [6] $end
$var wire 1 ,# addr [5] $end
$var wire 1 -# addr [4] $end
$var wire 1 .# addr [3] $end
$var wire 1 /# addr [2] $end
$var wire 1 0# addr [1] $end
$var wire 1 1# addr [0] $end
$var wire 1 V# enable $end
$var wire 1 S# wr $end
$var wire 1 C! clk $end
$var wire 1 E! rst $end
$var reg 1 ~9 loaded $end
$upscope $end

$scope module pcs_adder $end
$var wire 1 !: cin $end
$var wire 1 P" A [15] $end
$var wire 1 Q" A [14] $end
$var wire 1 R" A [13] $end
$var wire 1 S" A [12] $end
$var wire 1 T" A [11] $end
$var wire 1 U" A [10] $end
$var wire 1 V" A [9] $end
$var wire 1 W" A [8] $end
$var wire 1 X" A [7] $end
$var wire 1 Y" A [6] $end
$var wire 1 Z" A [5] $end
$var wire 1 [" A [4] $end
$var wire 1 \" A [3] $end
$var wire 1 ]" A [2] $end
$var wire 1 ^" A [1] $end
$var wire 1 _" A [0] $end
$var wire 1 ": B [15] $end
$var wire 1 #: B [14] $end
$var wire 1 $: B [13] $end
$var wire 1 %: B [12] $end
$var wire 1 &: B [11] $end
$var wire 1 ': B [10] $end
$var wire 1 (: B [9] $end
$var wire 1 ): B [8] $end
$var wire 1 *: B [7] $end
$var wire 1 +: B [6] $end
$var wire 1 ,: B [5] $end
$var wire 1 -: B [4] $end
$var wire 1 .: B [3] $end
$var wire 1 /: B [2] $end
$var wire 1 0: B [1] $end
$var wire 1 1: B [0] $end
$var wire 1 B# Sum [15] $end
$var wire 1 C# Sum [14] $end
$var wire 1 D# Sum [13] $end
$var wire 1 E# Sum [12] $end
$var wire 1 F# Sum [11] $end
$var wire 1 G# Sum [10] $end
$var wire 1 H# Sum [9] $end
$var wire 1 I# Sum [8] $end
$var wire 1 J# Sum [7] $end
$var wire 1 K# Sum [6] $end
$var wire 1 L# Sum [5] $end
$var wire 1 M# Sum [4] $end
$var wire 1 N# Sum [3] $end
$var wire 1 O# Sum [2] $end
$var wire 1 P# Sum [1] $end
$var wire 1 Q# Sum [0] $end
$var wire 1 2: cout $end
$var wire 1 3: inter [3] $end
$var wire 1 4: inter [2] $end
$var wire 1 5: inter [1] $end
$var wire 1 6: inter [0] $end

$scope module FA0 $end
$var wire 1 !: cin $end
$var wire 1 \" A [3] $end
$var wire 1 ]" A [2] $end
$var wire 1 ^" A [1] $end
$var wire 1 _" A [0] $end
$var wire 1 .: B [3] $end
$var wire 1 /: B [2] $end
$var wire 1 0: B [1] $end
$var wire 1 1: B [0] $end
$var wire 1 N# S [3] $end
$var wire 1 O# S [2] $end
$var wire 1 P# S [1] $end
$var wire 1 Q# S [0] $end
$var wire 1 6: cout $end
$var wire 1 7: inter [3] $end
$var wire 1 8: inter [2] $end
$var wire 1 9: inter [1] $end
$var wire 1 :: inter [0] $end

$scope module FA0 $end
$var wire 1 Q# s $end
$var wire 1 :: cout $end
$var wire 1 _" a $end
$var wire 1 1: b $end
$var wire 1 !: cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 P# s $end
$var wire 1 9: cout $end
$var wire 1 ^" a $end
$var wire 1 0: b $end
$var wire 1 :: cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 O# s $end
$var wire 1 8: cout $end
$var wire 1 ]" a $end
$var wire 1 /: b $end
$var wire 1 9: cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 N# s $end
$var wire 1 7: cout $end
$var wire 1 \" a $end
$var wire 1 .: b $end
$var wire 1 8: cin $end
$upscope $end
$upscope $end

$scope module FA1 $end
$var wire 1 6: cin $end
$var wire 1 X" A [3] $end
$var wire 1 Y" A [2] $end
$var wire 1 Z" A [1] $end
$var wire 1 [" A [0] $end
$var wire 1 *: B [3] $end
$var wire 1 +: B [2] $end
$var wire 1 ,: B [1] $end
$var wire 1 -: B [0] $end
$var wire 1 J# S [3] $end
$var wire 1 K# S [2] $end
$var wire 1 L# S [1] $end
$var wire 1 M# S [0] $end
$var wire 1 5: cout $end
$var wire 1 ;: inter [3] $end
$var wire 1 <: inter [2] $end
$var wire 1 =: inter [1] $end
$var wire 1 >: inter [0] $end

$scope module FA0 $end
$var wire 1 M# s $end
$var wire 1 >: cout $end
$var wire 1 [" a $end
$var wire 1 -: b $end
$var wire 1 6: cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 L# s $end
$var wire 1 =: cout $end
$var wire 1 Z" a $end
$var wire 1 ,: b $end
$var wire 1 >: cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 K# s $end
$var wire 1 <: cout $end
$var wire 1 Y" a $end
$var wire 1 +: b $end
$var wire 1 =: cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 J# s $end
$var wire 1 ;: cout $end
$var wire 1 X" a $end
$var wire 1 *: b $end
$var wire 1 <: cin $end
$upscope $end
$upscope $end

$scope module FA2 $end
$var wire 1 5: cin $end
$var wire 1 T" A [3] $end
$var wire 1 U" A [2] $end
$var wire 1 V" A [1] $end
$var wire 1 W" A [0] $end
$var wire 1 &: B [3] $end
$var wire 1 ': B [2] $end
$var wire 1 (: B [1] $end
$var wire 1 ): B [0] $end
$var wire 1 F# S [3] $end
$var wire 1 G# S [2] $end
$var wire 1 H# S [1] $end
$var wire 1 I# S [0] $end
$var wire 1 4: cout $end
$var wire 1 ?: inter [3] $end
$var wire 1 @: inter [2] $end
$var wire 1 A: inter [1] $end
$var wire 1 B: inter [0] $end

$scope module FA0 $end
$var wire 1 I# s $end
$var wire 1 B: cout $end
$var wire 1 W" a $end
$var wire 1 ): b $end
$var wire 1 5: cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 H# s $end
$var wire 1 A: cout $end
$var wire 1 V" a $end
$var wire 1 (: b $end
$var wire 1 B: cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 G# s $end
$var wire 1 @: cout $end
$var wire 1 U" a $end
$var wire 1 ': b $end
$var wire 1 A: cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 F# s $end
$var wire 1 ?: cout $end
$var wire 1 T" a $end
$var wire 1 &: b $end
$var wire 1 @: cin $end
$upscope $end
$upscope $end

$scope module FA3 $end
$var wire 1 4: cin $end
$var wire 1 P" A [3] $end
$var wire 1 Q" A [2] $end
$var wire 1 R" A [1] $end
$var wire 1 S" A [0] $end
$var wire 1 ": B [3] $end
$var wire 1 #: B [2] $end
$var wire 1 $: B [1] $end
$var wire 1 %: B [0] $end
$var wire 1 B# S [3] $end
$var wire 1 C# S [2] $end
$var wire 1 D# S [1] $end
$var wire 1 E# S [0] $end
$var wire 1 3: cout $end
$var wire 1 C: inter [3] $end
$var wire 1 D: inter [2] $end
$var wire 1 E: inter [1] $end
$var wire 1 F: inter [0] $end

$scope module FA0 $end
$var wire 1 E# s $end
$var wire 1 F: cout $end
$var wire 1 S" a $end
$var wire 1 %: b $end
$var wire 1 4: cin $end
$upscope $end

$scope module FA1 $end
$var wire 1 D# s $end
$var wire 1 E: cout $end
$var wire 1 R" a $end
$var wire 1 $: b $end
$var wire 1 F: cin $end
$upscope $end

$scope module FA2 $end
$var wire 1 C# s $end
$var wire 1 D: cout $end
$var wire 1 Q" a $end
$var wire 1 #: b $end
$var wire 1 E: cin $end
$upscope $end

$scope module FA3 $end
$var wire 1 B# s $end
$var wire 1 C: cout $end
$var wire 1 P" a $end
$var wire 1 ": b $end
$var wire 1 D: cin $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G.
0I.
0K.
0M.
0O.
0Q.
0S.
0U.
0W.
0Y.
0[.
0].
0_.
0a.
0c.
0e.
0g.
0i.
0k.
0m.
0o.
0q.
0s.
0u.
0w.
0y.
0{.
0}.
0!/
0#/
0%/
0'/
0)/
0+/
0-/
0//
01/
03/
05/
07/
09/
0;/
0=/
0?/
0A/
0C/
0E/
0G/
0I/
0K/
0M/
0O/
0Q/
0S/
0U/
0W/
0Y/
0[/
0]/
0_/
0a/
0c/
0e/
0g/
0i/
0k/
0m/
0o/
0q/
0s/
0u/
0w/
0y/
0{/
0}/
0!0
0#0
0%0
0'0
0)0
0+0
0-0
0/0
010
030
050
070
090
0;0
0=0
0?0
0A0
0C0
0E0
0G0
0I0
0K0
0M0
0O0
0Q0
0S0
0U0
0W0
0Y0
0[0
0]0
0_0
0a0
0c0
0e0
0g0
0i0
0k0
0m0
0o0
0q0
0s0
0u0
0w0
0y0
0{0
0}0
0!1
0#1
0%1
0'1
0)1
0+1
0-1
0/1
011
031
051
071
091
0;1
0=1
0?1
0A1
0C1
0E1
0G1
0I1
0K1
0M1
0O1
0Q1
0S1
0U1
0W1
0Y1
0[1
0]1
0_1
0a1
0c1
0e1
0g1
0i1
0k1
0m1
0o1
0q1
0s1
0u1
0w1
0y1
0{1
0}1
0!2
0#2
0%2
0'2
0)2
0+2
0-2
0/2
012
032
052
072
092
0;2
0=2
0?2
0A2
0C2
0E2
0G2
0I2
0K2
0M2
0O2
0Q2
0S2
0U2
0W2
0Y2
0[2
0]2
0_2
0a2
0c2
0e2
0g2
0i2
0k2
0m2
0o2
0q2
0s2
0u2
0w2
0y2
0{2
0}2
0!3
0#3
0%3
0'3
0)3
0+3
0-3
0/3
013
033
053
073
093
0;3
0=3
0?3
0A3
0C3
0E3
0G3
0R6
0S6
0T6
0U6
0V6
0W6
0X6
0Y6
0Z6
0[6
0\6
0]6
0^6
0_6
0`6
0a6
b0 b6
0e6
0h6
0i6
0j6
0k6
0l6
0m6
0n6
0o6
0p6
0q6
0r6
0s6
0t6
0u6
0v6
b0 w6
0z6
0}6
0"7
0%7
0&7
0'7
0(7
0)7
0*7
0+7
0,7
0-7
0.7
0/7
007
017
b0 27
057
087
0;7
0>7
0A7
0D7
0G7
0J7
0K7
0L7
0M7
0N7
0O7
0P7
0Q7
0R7
b0 S7
b0x0 x9
xz9
x{9
x|9
1~9
1}
0~
0c#
0e#
0g#
0i#
0k#
0m#
0o#
0q#
0s#
0u#
0w#
0y#
0{#
0}#
0!$
0#$
1C'
0F'
0G'
0H'
0I'
1J'
0K'
0L'
1M'
0N'
0}-
0!.
0#.
0%.
0'.
0).
0+.
0-.
0/.
01.
03.
05.
07.
09.
0;.
0=.
0?.
0A.
0C.
0E.
b10000 0'
b1 D'
b0 E'
b10000 }9
b0 y
b1 z
b10 {
b100 |
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0@
1?
0>
0=
1<
0;
0:
09
08
07
16
05
04
03
02
01
1A
0E
0D
1C
0B
0U
xT
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0V
0W
0g
xf
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0x
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
z@!
z?!
z>!
z=!
z<!
z;!
z:!
z9!
z8!
z7!
z6!
z5!
z4!
z3!
z2!
z1!
1E!
xH!
xG!
xF!
zX!
zW!
zV!
zU!
zT!
zS!
zR!
zQ!
zP!
zO!
zN!
zM!
zL!
zK!
zJ!
zI!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
0x!
1w!
0v!
0u!
1t!
0s!
0r!
0q!
0p!
0o!
1n!
0m!
0l!
0k!
0j!
0i!
0|!
0{!
1z!
0y!
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0N"
xM"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
1O"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0o"
1n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0!#
x~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
01#
x0#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
0Q#
1P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0R#
0S#
zT#
0U#
0V#
0W#
0X#
1Y#
0Z#
0]#
x\#
0[#
1`#
1_#
1^#
x$$
x%$
x&$
x'$
0($
0)$
1*$
0+$
0,$
0-$
0.$
0/$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
0O$
1N$
0M$
0L$
1K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0_$
0^$
1]$
0\$
0[$
1Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
04%
13%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
0H%
xG%
xF%
xE%
xL%
0K%
0J%
0I%
xP%
xO%
xN%
xM%
xQ%
xR%
0S%
xT%
0U%
xV%
0Z%
0Y%
xX%
xW%
0^%
x]%
0\%
0[%
xb%
xa%
x`%
x_%
xf%
xe%
xd%
xc%
0j%
0i%
0h%
0g%
xn%
xm%
xl%
xk%
xr%
xq%
xp%
xo%
0v%
0u%
0t%
0s%
xz%
xy%
xx%
xw%
x~%
x}%
x|%
x{%
0$&
0#&
0"&
0!&
x(&
x'&
x&&
x%&
0;&
0:&
19&
08&
07&
16&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
0O&
xN&
xM&
xL&
xS&
xR&
0Q&
0P&
xW&
xV&
xU&
xT&
xX&
xY&
0Z&
x[&
0\&
x]&
0a&
0`&
0_&
x^&
0e&
0d&
xc&
0b&
xi&
xh&
xg&
xf&
xm&
xl&
xk&
xj&
0q&
xp&
0o&
0n&
xu&
xt&
xs&
xr&
xy&
xx&
xw&
xv&
0}&
0|&
0{&
0z&
x#'
x"'
x!'
x~&
x''
x&'
x%'
x$'
0+'
0*'
0)'
0('
x/'
x.'
x-'
x,'
0a#
0^'
0]'
0\'
0['
1Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0n'
1m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0~'
0}'
1|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0!(
0"(
0#(
0$(
0%(
0&(
0'(
0((
0)(
0*(
0+(
0,(
0-(
0.(
0/(
00(
01(
02(
03(
04(
05(
06(
07(
08(
09(
0:(
0;(
0<(
0=(
0>(
0?(
0@(
0A(
0B(
0C(
0D(
0E(
0F(
0G(
0H(
0I(
0J(
0K(
0L(
0M(
0N(
0O(
0P(
0Q(
0R(
0S(
0T(
0U(
0V(
0W(
0X(
0Y(
0Z(
0[(
0\(
0](
0^(
0_(
0`(
0a(
0b(
0c(
0d(
0e(
0f(
0g(
0h(
0i(
0j(
0k(
0l(
0m(
0n(
0o(
0p(
0q(
0r(
0s(
0t(
0u(
0v(
0w(
0x(
0y(
0z(
0{(
0|(
0}(
0~(
0!)
0")
0#)
0$)
0%)
0&)
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
02)
03)
04)
05)
06)
07)
08)
09)
0:)
0;)
0<)
0=)
0>)
0?)
0@)
0A)
0B)
0C)
0D)
0E)
0F)
0G)
0H)
0I)
0J)
0K)
0L)
0M)
0N)
0O)
0P)
0Q)
0R)
0S)
0T)
0U)
0V)
0W)
0X)
0Y)
0Z)
0[)
0\)
0])
0^)
0_)
0`)
0a)
0b)
0c)
0d)
0e)
0f)
0g)
0h)
0i)
0j)
0k)
0l)
0m)
0n)
0o)
0p)
0q)
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
0~)
0!*
0"*
0#*
0$*
0%*
0&*
0'*
0(*
0)*
0**
0+*
0,*
0-*
0.*
0/*
00*
01*
02*
03*
04*
05*
06*
07*
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0E*
0F*
0G*
0H*
0I*
0J*
0K*
0L*
0M*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
0U*
0V*
0W*
0X*
0Y*
0Z*
0[*
0\*
0]*
0^*
0_*
0`*
0a*
0b*
0c*
0d*
0e*
0f*
0g*
0h*
0i*
0j*
0k*
0l*
0m*
0n*
0o*
0p*
0q*
0r*
0s*
0t*
0u*
0v*
0w*
0x*
0y*
0z*
0{*
0|*
0}*
0~*
0!+
0"+
0#+
0$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
00+
01+
02+
03+
04+
05+
06+
07+
08+
09+
0:+
0;+
0<+
0=+
0>+
0?+
0@+
0A+
0B+
0C+
0D+
0E+
0F+
0G+
0H+
0I+
0J+
0K+
0L+
0M+
0N+
0O+
0P+
0Q+
0R+
0S+
0T+
0U+
0V+
0W+
0X+
0Y+
0Z+
0[+
0\+
0]+
0^+
0_+
0`+
0a+
0b+
0c+
0d+
0e+
0f+
0g+
0h+
0i+
0j+
0k+
0l+
0m+
0n+
0o+
0p+
0q+
0r+
0s+
0t+
0u+
0v+
0w+
0x+
0y+
0z+
0{+
0|+
0}+
0~+
0!,
0",
0#,
0$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
00,
01,
02,
03,
04,
05,
06,
07,
08,
09,
0:,
0;,
0<,
0=,
0>,
0?,
0@,
0A,
0B,
0C,
0D,
0E,
0F,
0G,
0H,
0I,
0J,
0K,
0L,
0M,
0N,
0O,
0P,
0Q,
0R,
0S,
0T,
0U,
0V,
0W,
0X,
0Y,
0Z,
0[,
0\,
0],
0^,
0_,
0`,
0a,
0b,
0c,
0d,
0e,
0f,
0g,
0h,
0i,
0j,
0k,
0l,
0m,
0n,
0o,
0p,
0q,
0r,
0s,
0t,
0u,
0v,
0w,
0x,
0y,
0z,
0{,
0|,
0},
0~,
0!-
0"-
0#-
0$-
0%-
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
00-
01-
02-
03-
04-
05-
06-
07-
08-
09-
0:-
0;-
0<-
0=-
0>-
0?-
0@-
0A-
0B-
0C-
0D-
0E-
0F-
0G-
0H-
0I-
0J-
0Z-
0Y-
0X-
0W-
0V-
0U-
0T-
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0j-
0i-
0h-
0g-
0f-
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0|-
0~-
0".
0$.
0&.
0(.
0*.
0,.
0..
00.
02.
04.
06.
08.
0:.
0<.
0>.
0@.
0B.
0D.
0F.
0H.
0J.
0L.
0N.
0P.
0R.
0T.
0V.
0X.
0Z.
0\.
0^.
0`.
0b.
0d.
0f.
0h.
0j.
0l.
0n.
0p.
0r.
0t.
0v.
0x.
0z.
0|.
0~.
0"/
0$/
0&/
0(/
0*/
0,/
0./
00/
02/
04/
06/
08/
0:/
0</
0>/
0@/
0B/
0D/
0F/
0H/
0J/
0L/
0N/
0P/
0R/
0T/
0V/
0X/
0Z/
0\/
0^/
0`/
0b/
0d/
0f/
0h/
0j/
0l/
0n/
0p/
0r/
0t/
0v/
0x/
0z/
0|/
0~/
0"0
0$0
0&0
0(0
0*0
0,0
0.0
000
020
040
060
080
0:0
0<0
0>0
0@0
0B0
0D0
0F0
0H0
0J0
0L0
0N0
0P0
0R0
0T0
0V0
0X0
0Z0
0\0
0^0
0`0
0b0
0d0
0f0
0h0
0j0
0l0
0n0
0p0
0r0
0t0
0v0
0x0
0z0
0|0
0~0
0"1
0$1
0&1
0(1
0*1
0,1
0.1
001
021
041
061
081
0:1
0<1
0>1
0@1
0B1
0D1
0F1
0H1
0J1
0L1
0N1
0P1
0R1
0T1
0V1
0X1
0Z1
0\1
0^1
0`1
0b1
0d1
0f1
0h1
0j1
0l1
0n1
0p1
0r1
0t1
0v1
0x1
0z1
0|1
0~1
0"2
0$2
0&2
0(2
0*2
0,2
0.2
002
022
042
062
082
0:2
0<2
0>2
0@2
0B2
0D2
0F2
0H2
0J2
0L2
0N2
0P2
0R2
0T2
0V2
0X2
0Z2
0\2
0^2
0`2
0b2
0d2
0f2
0h2
0j2
0l2
0n2
0p2
0r2
0t2
0v2
0x2
0z2
0|2
0~2
0"3
0$3
0&3
0(3
0*3
0,3
0.3
003
023
043
063
083
0:3
0<3
0>3
0@3
0B3
0D3
0F3
0W3
xV3
0U3
0T3
0S3
0R3
0Q3
0P3
0O3
0N3
0M3
0L3
0K3
0J3
0I3
0H3
0g3
0f3
0e3
0d3
0c3
0b3
0a3
0`3
0_3
0^3
0]3
0\3
0[3
0Z3
0Y3
0X3
0w3
xv3
0u3
0t3
0s3
0r3
0q3
0p3
0o3
0n3
0m3
0l3
0k3
0j3
0i3
0h3
0)4
x(4
0'4
0&4
0%4
0$4
0#4
0"4
0!4
0~3
0}3
0|3
0{3
0z3
0y3
0x3
094
x84
074
064
054
044
034
024
014
004
0/4
0.4
0-4
0,4
0+4
0*4
0I4
xH4
0G4
0F4
0E4
0D4
0C4
0B4
0A4
0@4
0?4
0>4
0=4
0<4
0;4
0:4
0Y4
xX4
0W4
0V4
0U4
0T4
0S4
0R4
0Q4
0P4
0O4
0N4
0M4
0L4
0K4
0J4
0]4
0\4
0[4
0Z4
0a4
0`4
0_4
0^4
0e4
0d4
0c4
0b4
0f4
0g4
0h4
1i4
0j4
0k4
0o4
0n4
0m4
0l4
0s4
0r4
0q4
0p4
0w4
xv4
0u4
0t4
0{4
0z4
0y4
0x4
0!5
0~4
0}4
0|4
0%5
0$5
0#5
0"5
0)5
0(5
0'5
0&5
0-5
0,5
0+5
0*5
015
005
0/5
0.5
055
045
035
025
095
085
075
065
0=5
0<5
0;5
0:5
0M5
0L5
0K5
0J5
0I5
0H5
0G5
0F5
0E5
0D5
0C5
0B5
0A5
0@5
0?5
0>5
0]5
0\5
0[5
0Z5
0Y5
0X5
0W5
0V5
0U5
0T5
0S5
0R5
0Q5
0P5
0O5
0N5
0m5
0l5
0k5
0j5
0i5
0h5
0g5
0f5
0e5
0d5
0c5
0b5
0a5
0`5
0_5
0^5
0}5
0|5
0{5
0z5
0y5
0x5
0w5
0v5
0u5
0t5
0s5
0r5
0q5
0p5
0o5
0n5
0/6
0.6
0-6
0,6
0+6
0*6
0)6
0(6
0'6
0&6
0%6
0$6
0#6
0"6
0!6
0~5
0?6
0>6
0=6
0<6
0;6
0:6
096
086
076
066
056
046
036
026
016
006
0O6
0N6
0M6
0L6
0K6
0J6
0I6
0H6
0G6
0F6
0E6
0D6
0C6
0B6
0A6
0@6
0Z7
0Y7
0X7
0W7
0V7
0U7
0T7
0a7
0`7
0_7
0^7
0]7
0\7
0[7
0e7
xd7
0c7
0b7
0i7
0h7
0g7
0f7
0m7
0l7
0k7
0j7
0q7
0p7
0o7
0n7
0u7
xt7
0s7
0r7
0y7
0x7
0w7
0v7
0}7
x|7
0{7
0z7
0$8
0#8
0"8
0!8
0~7
0)8
0(8
0'8
0&8
0%8
0+8
0*8
0-8
0,8
018
008
0/8
0.8
058
048
038
028
0:8
098
088
078
0>8
0=8
0<8
0;8
0B8
xA8
0@8
0?8
0G8
0F8
0E8
0D8
0K8
0J8
0I8
0H8
0O8
0N8
0M8
0L8
0T8
0S8
0R8
0Q8
0X8
0W8
0V8
0U8
0\8
0[8
0Z8
0Y8
0a8
0`8
0_8
0^8
0e8
0d8
0c8
0b8
0i8
0h8
0g8
0f8
0n8
0m8
0l8
0k8
0r8
0q8
0p8
0o8
0v8
xu8
0t8
0s8
0{8
0z8
0y8
0x8
0!9
0~8
0}8
0|8
0%9
0$9
0#9
0"9
0*9
0)9
0(9
0'9
0.9
0-9
0,9
0+9
029
x19
009
0/9
0G9
0F9
0E9
0D9
0H9
1I9
0M9
xL9
0K9
0J9
0N9
0O9
0T9
0S9
0R9
0Q9
0U9
1V9
0Z9
0Y9
0X9
0W9
0[9
0\9
0a9
0`9
0_9
0^9
0b9
1c9
0g9
0f9
0e9
0d9
0h9
0i9
0n9
0m9
0l9
0k9
0o9
1p9
0t9
0s9
0r9
0q9
0u9
0v9
zy9
06:
05:
04:
03:
0::
09:
08:
07:
0>:
0=:
0<:
0;:
0B:
0A:
0@:
0?:
0F:
0E:
0D:
0C:
xA!
xB!
0D!
1C!
0!:
01:
10:
0/:
0.:
0-:
0,:
0+:
0*:
0):
0(:
0':
0&:
0%:
0$:
0#:
0":
0B'
1A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
1"$
1~#
1|#
1z#
1x#
1v#
1t#
1r#
1p#
1n#
1l#
1j#
1h#
1f#
1d#
1b#
0)&
0"%
0!%
1~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
x#%
x$%
x*&
x+&
0{-
0z-
0y-
0x-
0w-
0